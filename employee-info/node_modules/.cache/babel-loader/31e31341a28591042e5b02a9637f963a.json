{"ast":null,"code":"import { __spreadArray } from \"tslib\";\nimport { getGlobalClassNames, HighContrastSelector, AnimationVariables, getFocusStyle } from '@fluentui/style-utilities';\nimport { getRTL } from '@fluentui/utilities';\nvar GlobalClassNames = {\n  root: 'ms-Slider',\n  enabled: 'ms-Slider-enabled',\n  disabled: 'ms-Slider-disabled',\n  row: 'ms-Slider-row',\n  column: 'ms-Slider-column',\n  container: 'ms-Slider-container',\n  slideBox: 'ms-Slider-slideBox',\n  line: 'ms-Slider-line',\n  thumb: 'ms-Slider-thumb',\n  activeSection: 'ms-Slider-active',\n  inactiveSection: 'ms-Slider-inactive',\n  valueLabel: 'ms-Slider-value',\n  showValue: 'ms-Slider-showValue',\n  showTransitions: 'ms-Slider-showTransitions',\n  zeroTick: 'ms-Slider-zeroTick'\n};\nexport var getStyles = function getStyles(props) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n\n  var className = props.className,\n      titleLabelClassName = props.titleLabelClassName,\n      theme = props.theme,\n      vertical = props.vertical,\n      disabled = props.disabled,\n      showTransitions = props.showTransitions,\n      showValue = props.showValue,\n      ranged = props.ranged;\n  var semanticColors = theme.semanticColors;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  /** Tokens:\n   *   The word \"active\" in the token refers to the selected section of the slider\n   *   The word \"inactive\" in the token refers to the unselected section of the slider */\n\n  var pressedActiveSectionColor = semanticColors.inputBackgroundCheckedHovered;\n  var hoveredActiveSectionColor = semanticColors.inputBackgroundChecked;\n  var hoveredPressedinactiveSectionColor = semanticColors.inputPlaceholderBackgroundChecked;\n  var restActiveSectionColor = semanticColors.smallInputBorder;\n  var restInactiveSectionColor = semanticColors.disabledBorder;\n  var disabledActiveSectionColor = semanticColors.disabledText;\n  var disabledInactiveSectionColor = semanticColors.disabledBackground;\n  var thumbBackgroundColor = semanticColors.inputBackground;\n  var thumbBorderColor = semanticColors.smallInputBorder;\n  var thumbDisabledBorderColor = semanticColors.disabledBorder;\n  var slideBoxActiveSectionStyles = !disabled && {\n    backgroundColor: pressedActiveSectionColor,\n    selectors: (_a = {}, _a[HighContrastSelector] = {\n      backgroundColor: 'Highlight'\n    }, _a)\n  };\n  var slideBoxInactiveSectionStyles = !disabled && {\n    backgroundColor: hoveredPressedinactiveSectionColor,\n    selectors: (_b = {}, _b[HighContrastSelector] = {\n      borderColor: 'Highlight'\n    }, _b)\n  };\n  var slideHoverSectionStyles = !disabled && {\n    backgroundColor: hoveredActiveSectionColor,\n    selectors: (_c = {}, _c[HighContrastSelector] = {\n      backgroundColor: 'Highlight'\n    }, _c)\n  };\n  var slideBoxActiveThumbStyles = !disabled && {\n    border: \"2px solid \" + pressedActiveSectionColor,\n    selectors: (_d = {}, _d[HighContrastSelector] = {\n      borderColor: 'Highlight'\n    }, _d)\n  };\n  var slideBoxActiveZeroTickStyles = !props.disabled && {\n    backgroundColor: semanticColors.inputPlaceholderBackgroundChecked,\n    selectors: (_e = {}, _e[HighContrastSelector] = {\n      backgroundColor: 'Highlight'\n    }, _e)\n  };\n  return {\n    root: __spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray([classNames.root, theme.fonts.medium, {\n      userSelect: 'none'\n    }, vertical && {\n      marginRight: 8\n    }], [!disabled ? classNames.enabled : undefined]), [disabled ? classNames.disabled : undefined]), [!vertical ? classNames.row : undefined]), [vertical ? classNames.column : undefined]), [className]),\n    titleLabel: [{\n      padding: 0\n    }, titleLabelClassName],\n    container: [classNames.container, {\n      display: 'flex',\n      flexWrap: 'nowrap',\n      alignItems: 'center'\n    }, vertical && {\n      flexDirection: 'column',\n      height: '100%',\n      textAlign: 'center',\n      margin: '8px 0'\n    }],\n    slideBox: __spreadArray(__spreadArray([classNames.slideBox, !ranged && getFocusStyle(theme), {\n      background: 'transparent',\n      border: 'none',\n      flexGrow: 1,\n      lineHeight: 28,\n      display: 'flex',\n      alignItems: 'center',\n      selectors: (_f = {}, _f[\":active .\" + classNames.activeSection] = slideBoxActiveSectionStyles, _f[\":hover .\" + classNames.activeSection] = slideHoverSectionStyles, _f[\":active .\" + classNames.inactiveSection] = slideBoxInactiveSectionStyles, _f[\":hover .\" + classNames.inactiveSection] = slideBoxInactiveSectionStyles, _f[\":active .\" + classNames.thumb] = slideBoxActiveThumbStyles, _f[\":hover .\" + classNames.thumb] = slideBoxActiveThumbStyles, _f[\":active .\" + classNames.zeroTick] = slideBoxActiveZeroTickStyles, _f[\":hover .\" + classNames.zeroTick] = slideBoxActiveZeroTickStyles, _f[HighContrastSelector] = {\n        forcedColorAdjust: 'none'\n      }, _f)\n    }, vertical ? {\n      height: '100%',\n      width: 28,\n      padding: '8px 0' // Make room for thumb at bottom of line\n\n    } : {\n      height: 28,\n      width: 'auto',\n      padding: '0 8px' // Make room for thumb at ends of line\n\n    }], [showValue ? classNames.showValue : undefined]), [showTransitions ? classNames.showTransitions : undefined]),\n    thumb: [classNames.thumb, ranged && getFocusStyle(theme, {\n      inset: -4\n    }), {\n      borderWidth: 2,\n      borderStyle: 'solid',\n      borderColor: thumbBorderColor,\n      borderRadius: 10,\n      boxSizing: 'border-box',\n      background: thumbBackgroundColor,\n      display: 'block',\n      width: 16,\n      height: 16,\n      position: 'absolute'\n    }, vertical ? {\n      left: -6,\n      margin: '0 auto',\n      transform: 'translateY(8px)'\n    } : {\n      top: -6,\n      transform: getRTL(theme) ? 'translateX(50%)' : 'translateX(-50%)'\n    }, showTransitions && {\n      transition: \"left \" + AnimationVariables.durationValue3 + \" \" + AnimationVariables.easeFunction1\n    }, disabled && {\n      borderColor: thumbDisabledBorderColor,\n      selectors: (_g = {}, _g[HighContrastSelector] = {\n        borderColor: 'GrayText'\n      }, _g)\n    }],\n    line: [classNames.line, {\n      display: 'flex',\n      position: 'relative'\n    }, vertical ? {\n      height: '100%',\n      width: 4,\n      margin: '0 auto',\n      flexDirection: 'column-reverse'\n    } : {\n      width: '100%'\n    }],\n    lineContainer: [{\n      borderRadius: 4,\n      boxSizing: 'border-box'\n    }, vertical ? {\n      width: 4,\n      height: '100%'\n    } : {\n      height: 4,\n      width: '100%'\n    }],\n    activeSection: [classNames.activeSection, {\n      background: restActiveSectionColor,\n      selectors: (_h = {}, _h[HighContrastSelector] = {\n        backgroundColor: 'WindowText'\n      }, _h)\n    }, showTransitions && {\n      transition: \"width \" + AnimationVariables.durationValue3 + \" \" + AnimationVariables.easeFunction1\n    }, disabled && {\n      background: disabledActiveSectionColor,\n      selectors: (_j = {}, _j[HighContrastSelector] = {\n        backgroundColor: 'GrayText',\n        borderColor: 'GrayText'\n      }, _j)\n    }],\n    inactiveSection: [classNames.inactiveSection, {\n      background: restInactiveSectionColor,\n      selectors: (_k = {}, _k[HighContrastSelector] = {\n        border: '1px solid WindowText'\n      }, _k)\n    }, showTransitions && {\n      transition: \"width \" + AnimationVariables.durationValue3 + \" \" + AnimationVariables.easeFunction1\n    }, disabled && {\n      background: disabledInactiveSectionColor,\n      selectors: (_l = {}, _l[HighContrastSelector] = {\n        borderColor: 'GrayText'\n      }, _l)\n    }],\n    zeroTick: [classNames.zeroTick, {\n      position: 'absolute',\n      background: semanticColors.disabledBorder,\n      selectors: (_m = {}, _m[HighContrastSelector] = {\n        backgroundColor: 'WindowText'\n      }, _m)\n    }, props.disabled && {\n      background: semanticColors.disabledBackground,\n      selectors: (_o = {}, _o[HighContrastSelector] = {\n        backgroundColor: 'GrayText'\n      }, _o)\n    }, props.vertical ? {\n      width: '16px',\n      height: '1px',\n      transform: getRTL(theme) ? 'translateX(6px)' : 'translateX(-6px)'\n    } : {\n      width: '1px',\n      height: '16px',\n      transform: 'translateY(-6px)'\n    }],\n    valueLabel: [classNames.valueLabel, {\n      flexShrink: 1,\n      width: 30,\n      lineHeight: '1' // using a string here meaning it's relative to the size of the font\n\n    }, vertical ? {\n      margin: '0 auto',\n      whiteSpace: 'nowrap',\n      width: 40\n    } : {\n      margin: '0 8px',\n      whiteSpace: 'nowrap',\n      width: 40\n    }]\n  };\n};","map":{"version":3,"mappings":"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","names":["getGlobalClassNames","HighContrastSelector","AnimationVariables","getFocusStyle","getRTL","GlobalClassNames","root","enabled","disabled","row","column","container","slideBox","line","thumb","activeSection","inactiveSection","valueLabel","showValue","showTransitions","zeroTick","getStyles","props","titleLabelClassName","theme","vertical","ranged","classNames","pressedActiveSectionColor","semanticColors","inputBackgroundCheckedHovered","hoveredActiveSectionColor","inputBackgroundChecked","hoveredPressedinactiveSectionColor","inputPlaceholderBackgroundChecked","restActiveSectionColor","smallInputBorder","restInactiveSectionColor","disabledBorder","disabledActiveSectionColor","disabledText","disabledInactiveSectionColor","disabledBackground","thumbBackgroundColor","inputBackground","thumbBorderColor","thumbDisabledBorderColor","slideBoxActiveSectionStyles","backgroundColor","selectors","_a","slideBoxInactiveSectionStyles","_b","borderColor","slideHoverSectionStyles","_c","slideBoxActiveThumbStyles","border","_d","slideBoxActiveZeroTickStyles","_e","fonts","medium","userSelect","marginRight","undefined","className","titleLabel","padding","display","flexWrap","alignItems","flexDirection","height","textAlign","margin","background","flexGrow","lineHeight","_f","forcedColorAdjust","width","inset","borderWidth","borderStyle","borderRadius","boxSizing","position","left","transform","top","transition","durationValue3","easeFunction1","_g","lineContainer","_h","_j","_k","_l","_m","_o","flexShrink","whiteSpace"],"sources":["/home/runner/work/Reaction/Reaction/employee-info/node_modules/@fluentui/react/lib/components/src/components/Slider/Slider.styles.ts"],"sourcesContent":["import {\n  getGlobalClassNames,\n  HighContrastSelector,\n  AnimationVariables,\n  getFocusStyle,\n} from '@fluentui/style-utilities';\nimport { getRTL } from '@fluentui/utilities';\nimport type { ISliderStyleProps, ISliderStyles } from './Slider.types';\n\nconst GlobalClassNames = {\n  root: 'ms-Slider',\n  enabled: 'ms-Slider-enabled',\n  disabled: 'ms-Slider-disabled',\n  row: 'ms-Slider-row',\n  column: 'ms-Slider-column',\n  container: 'ms-Slider-container',\n  slideBox: 'ms-Slider-slideBox',\n  line: 'ms-Slider-line',\n  thumb: 'ms-Slider-thumb',\n  activeSection: 'ms-Slider-active',\n  inactiveSection: 'ms-Slider-inactive',\n  valueLabel: 'ms-Slider-value',\n  showValue: 'ms-Slider-showValue',\n  showTransitions: 'ms-Slider-showTransitions',\n  zeroTick: 'ms-Slider-zeroTick',\n};\n\nexport const getStyles = (props: ISliderStyleProps): ISliderStyles => {\n  const { className, titleLabelClassName, theme, vertical, disabled, showTransitions, showValue, ranged } = props;\n  const { semanticColors } = theme;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  /** Tokens:\n   *   The word \"active\" in the token refers to the selected section of the slider\n   *   The word \"inactive\" in the token refers to the unselected section of the slider */\n  const pressedActiveSectionColor = semanticColors.inputBackgroundCheckedHovered;\n  const hoveredActiveSectionColor = semanticColors.inputBackgroundChecked;\n  const hoveredPressedinactiveSectionColor = semanticColors.inputPlaceholderBackgroundChecked;\n  const restActiveSectionColor = semanticColors.smallInputBorder;\n  const restInactiveSectionColor = semanticColors.disabledBorder;\n\n  const disabledActiveSectionColor = semanticColors.disabledText;\n  const disabledInactiveSectionColor = semanticColors.disabledBackground;\n\n  const thumbBackgroundColor = semanticColors.inputBackground;\n  const thumbBorderColor = semanticColors.smallInputBorder;\n  const thumbDisabledBorderColor = semanticColors.disabledBorder;\n\n  const slideBoxActiveSectionStyles = !disabled && {\n    backgroundColor: pressedActiveSectionColor,\n    selectors: {\n      [HighContrastSelector]: {\n        backgroundColor: 'Highlight',\n      },\n    },\n  };\n\n  const slideBoxInactiveSectionStyles = !disabled && {\n    backgroundColor: hoveredPressedinactiveSectionColor,\n    selectors: {\n      [HighContrastSelector]: {\n        borderColor: 'Highlight',\n      },\n    },\n  };\n\n  const slideHoverSectionStyles = !disabled && {\n    backgroundColor: hoveredActiveSectionColor,\n    selectors: {\n      [HighContrastSelector]: {\n        backgroundColor: 'Highlight',\n      },\n    },\n  };\n\n  const slideBoxActiveThumbStyles = !disabled && {\n    border: `2px solid ${pressedActiveSectionColor}`,\n    selectors: {\n      [HighContrastSelector]: {\n        borderColor: 'Highlight',\n      },\n    },\n  };\n\n  const slideBoxActiveZeroTickStyles = !props.disabled && {\n    backgroundColor: semanticColors.inputPlaceholderBackgroundChecked,\n    selectors: {\n      [HighContrastSelector]: {\n        backgroundColor: 'Highlight',\n      },\n    },\n  };\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      {\n        userSelect: 'none',\n      },\n      vertical && {\n        marginRight: 8,\n      },\n      ...[!disabled ? classNames.enabled : undefined],\n      ...[disabled ? classNames.disabled : undefined],\n      ...[!vertical ? classNames.row : undefined],\n      ...[vertical ? classNames.column : undefined],\n      className,\n    ],\n    titleLabel: [\n      {\n        padding: 0,\n      },\n      titleLabelClassName,\n    ],\n    container: [\n      classNames.container,\n      {\n        display: 'flex',\n        flexWrap: 'nowrap',\n        alignItems: 'center',\n      },\n      vertical && {\n        flexDirection: 'column',\n        height: '100%',\n        textAlign: 'center',\n        margin: '8px 0',\n      },\n    ],\n    slideBox: [\n      classNames.slideBox,\n      !ranged && getFocusStyle(theme),\n      {\n        background: 'transparent',\n        border: 'none',\n        flexGrow: 1,\n        lineHeight: 28,\n        display: 'flex',\n        alignItems: 'center',\n        selectors: {\n          [`:active .${classNames.activeSection}`]: slideBoxActiveSectionStyles,\n          [`:hover .${classNames.activeSection}`]: slideHoverSectionStyles,\n          [`:active .${classNames.inactiveSection}`]: slideBoxInactiveSectionStyles,\n          [`:hover .${classNames.inactiveSection}`]: slideBoxInactiveSectionStyles,\n          [`:active .${classNames.thumb}`]: slideBoxActiveThumbStyles,\n          [`:hover .${classNames.thumb}`]: slideBoxActiveThumbStyles,\n          [`:active .${classNames.zeroTick}`]: slideBoxActiveZeroTickStyles,\n          [`:hover .${classNames.zeroTick}`]: slideBoxActiveZeroTickStyles,\n          [HighContrastSelector]: {\n            forcedColorAdjust: 'none',\n          },\n        },\n      },\n      vertical\n        ? {\n            height: '100%',\n            width: 28,\n            padding: '8px 0', // Make room for thumb at bottom of line\n          }\n        : {\n            height: 28,\n            width: 'auto',\n            padding: '0 8px', // Make room for thumb at ends of line\n          },\n      ...[showValue ? classNames.showValue : undefined],\n      ...[showTransitions ? classNames.showTransitions : undefined],\n    ],\n    thumb: [\n      classNames.thumb,\n      ranged && getFocusStyle(theme, { inset: -4 }),\n      {\n        borderWidth: 2,\n        borderStyle: 'solid',\n        borderColor: thumbBorderColor,\n        borderRadius: 10,\n        boxSizing: 'border-box',\n        background: thumbBackgroundColor,\n        display: 'block',\n        width: 16,\n        height: 16,\n        position: 'absolute',\n      },\n      vertical\n        ? {\n            left: -6,\n            margin: '0 auto',\n            transform: 'translateY(8px)',\n          }\n        : {\n            top: -6,\n            transform: getRTL(theme) ? 'translateX(50%)' : 'translateX(-50%)',\n          },\n      showTransitions && {\n        transition: `left ${AnimationVariables.durationValue3} ${AnimationVariables.easeFunction1}`,\n      },\n      disabled && {\n        borderColor: thumbDisabledBorderColor,\n        selectors: {\n          [HighContrastSelector]: {\n            borderColor: 'GrayText',\n          },\n        },\n      },\n    ],\n    line: [\n      classNames.line,\n      {\n        display: 'flex',\n        position: 'relative',\n      },\n      vertical\n        ? {\n            height: '100%',\n            width: 4,\n            margin: '0 auto',\n            flexDirection: 'column-reverse',\n          }\n        : {\n            width: '100%',\n          },\n    ],\n    lineContainer: [\n      {\n        borderRadius: 4,\n        boxSizing: 'border-box',\n      },\n      vertical\n        ? {\n            width: 4,\n            height: '100%',\n          }\n        : {\n            height: 4,\n            width: '100%',\n          },\n    ],\n    activeSection: [\n      classNames.activeSection,\n      {\n        background: restActiveSectionColor,\n        selectors: {\n          [HighContrastSelector]: {\n            backgroundColor: 'WindowText',\n          },\n        },\n      },\n      showTransitions && {\n        transition: `width ${AnimationVariables.durationValue3} ${AnimationVariables.easeFunction1}`,\n      },\n      disabled && {\n        background: disabledActiveSectionColor,\n        selectors: {\n          [HighContrastSelector]: {\n            backgroundColor: 'GrayText',\n            borderColor: 'GrayText',\n          },\n        },\n      },\n    ],\n    inactiveSection: [\n      classNames.inactiveSection,\n      {\n        background: restInactiveSectionColor,\n        selectors: {\n          [HighContrastSelector]: {\n            border: '1px solid WindowText',\n          },\n        },\n      },\n      showTransitions && {\n        transition: `width ${AnimationVariables.durationValue3} ${AnimationVariables.easeFunction1}`,\n      },\n      disabled && {\n        background: disabledInactiveSectionColor,\n        selectors: {\n          [HighContrastSelector]: {\n            borderColor: 'GrayText',\n          },\n        },\n      },\n    ],\n    zeroTick: [\n      classNames.zeroTick,\n      {\n        position: 'absolute',\n        background: semanticColors.disabledBorder,\n        selectors: {\n          [HighContrastSelector]: {\n            backgroundColor: 'WindowText',\n          },\n        },\n      },\n      props.disabled && {\n        background: semanticColors.disabledBackground,\n        selectors: {\n          [HighContrastSelector]: {\n            backgroundColor: 'GrayText',\n          },\n        },\n      },\n      props.vertical\n        ? {\n            width: '16px',\n            height: '1px',\n            transform: getRTL(theme) ? 'translateX(6px)' : 'translateX(-6px)',\n          }\n        : {\n            width: '1px',\n            height: '16px',\n            transform: 'translateY(-6px)',\n          },\n    ],\n    valueLabel: [\n      classNames.valueLabel,\n      {\n        flexShrink: 1,\n        width: 30,\n        lineHeight: '1', // using a string here meaning it's relative to the size of the font\n      },\n      vertical\n        ? {\n            margin: '0 auto',\n            whiteSpace: 'nowrap',\n            width: 40,\n          }\n        : {\n            margin: '0 8px',\n            whiteSpace: 'nowrap',\n            width: 40,\n          },\n    ],\n  };\n};\n"]},"metadata":{},"sourceType":"module"}