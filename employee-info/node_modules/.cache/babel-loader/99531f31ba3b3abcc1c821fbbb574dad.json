{"ast":null,"code":"import { __assign } from \"tslib\"; // Utilities\n\nimport * as React from 'react';\nimport { classNamesFunction, elementContains, focusFirstChild, getDocument, KeyCodes, getRTL, EventGroup, getPropsWithDefaults } from '../../Utilities';\nimport { RectangleEdge, getOppositeEdge } from '../../Positioning'; // Component Dependencies\n\nimport { PositioningContainer } from './PositioningContainer/index';\nimport { Beak, BEAK_HEIGHT, BEAK_WIDTH } from './Beak/Beak';\nimport { DirectionalHint } from '../../common/DirectionalHint'; // Coachmark\n\nimport { COACHMARK_HEIGHT, COACHMARK_WIDTH } from './Coachmark.styles';\nimport { FocusTrapZone } from '../../FocusTrapZone';\nimport { useAsync, useOnEvent, useSetTimeout, useWarnings } from '@fluentui/react-hooks';\nvar getClassNames = classNamesFunction();\nexport var COACHMARK_ATTRIBUTE_NAME = 'data-coachmarkid';\nvar DEFAULT_PROPS = {\n  isCollapsed: true,\n  mouseProximityOffset: 10,\n  delayBeforeMouseOpen: 3600,\n  delayBeforeCoachmarkAnimation: 0,\n  isPositionForced: true,\n  positioningContainerProps: {\n    directionalHint: DirectionalHint.bottomAutoEdge\n  }\n};\n\nfunction useCollapsedState(props, entityInnerHostElementRef) {\n  var propsIsCollapsed = props.isCollapsed,\n      onAnimationOpenStart = props.onAnimationOpenStart,\n      onAnimationOpenEnd = props.onAnimationOpenEnd;\n  /** Is the Coachmark currently collapsed into a tear drop shape */\n\n  var _a = React.useState(!!propsIsCollapsed),\n      isCollapsed = _a[0],\n      setIsCollapsed = _a[1];\n\n  var setTimeout = useSetTimeout().setTimeout; // Rather than pushing out logic elsewhere to prevent openCoachmark from being called repeatedly,\n  // we'll track it here and only invoke the logic once. We do this with a ref, rather than just the state,\n  // because the openCoachmark callback can be captured in scope for an effect\n\n  var hasCoachmarkBeenOpened = React.useRef(!isCollapsed);\n  var openCoachmark = React.useCallback(function () {\n    var _a, _b;\n\n    if (!hasCoachmarkBeenOpened.current) {\n      setIsCollapsed(false);\n      onAnimationOpenStart === null || onAnimationOpenStart === void 0 ? void 0 : onAnimationOpenStart();\n      (_b = (_a = entityInnerHostElementRef.current) === null || _a === void 0 ? void 0 : _a.addEventListener) === null || _b === void 0 ? void 0 : _b.call(_a, 'transitionend', function () {\n        // Need setTimeout to trigger narrator\n        setTimeout(function () {\n          if (entityInnerHostElementRef.current) {\n            focusFirstChild(entityInnerHostElementRef.current);\n          }\n        }, 1000);\n        onAnimationOpenEnd === null || onAnimationOpenEnd === void 0 ? void 0 : onAnimationOpenEnd();\n      });\n      hasCoachmarkBeenOpened.current = true;\n    }\n  }, [entityInnerHostElementRef, onAnimationOpenEnd, onAnimationOpenStart, setTimeout]);\n  React.useEffect(function () {\n    if (!propsIsCollapsed) {\n      openCoachmark();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run if isCollapsed changes\n\n  }, [propsIsCollapsed]);\n  return [isCollapsed, openCoachmark];\n}\n\nfunction usePositionedData() {\n  var async = useAsync();\n  /**\n   * Alignment edge of callout in relation to target\n   */\n\n  var _a = React.useState(),\n      targetAlignment = _a[0],\n      setTargetAlignment = _a[1];\n  /**\n   * Position of Coachmark/TeachingBubble in relation to target\n   */\n\n\n  var _b = React.useState(),\n      targetPosition = _b[0],\n      setTargetPosition = _b[1];\n\n  var onPositioned = function onPositioned(_a) {\n    var alignmentEdge = _a.alignmentEdge,\n        targetEdge = _a.targetEdge;\n    return async.requestAnimationFrame(function () {\n      setTargetAlignment(alignmentEdge);\n      setTargetPosition(targetEdge);\n    });\n  };\n\n  return [targetAlignment, targetPosition, onPositioned];\n}\n\nfunction useBeakPosition(props, targetAlignment, targetPosition) {\n  var isRTL = getRTL(props.theme);\n  return React.useMemo(function () {\n    var beakDirection = targetPosition === undefined ? RectangleEdge.bottom : getOppositeEdge(targetPosition);\n    var beakPosition = {\n      direction: beakDirection\n    };\n    var transformOriginX;\n    var transformOriginY;\n    var distanceAdjustment = '3px'; // Adjustment distance for Beak to shift towards Coachmark bubble.\n\n    switch (beakDirection) {\n      // If Beak is pointing Up or Down\n      case RectangleEdge.top:\n      case RectangleEdge.bottom:\n        // If there is no target alignment, then beak is X-axis centered in callout\n        if (!targetAlignment) {\n          beakPosition.left = \"calc(50% - \" + BEAK_WIDTH / 2 + \"px)\";\n          transformOriginX = 'center';\n        } else {\n          // Beak is aligned to the left of target\n          if (targetAlignment === RectangleEdge.left) {\n            beakPosition.left = COACHMARK_WIDTH / 2 - BEAK_WIDTH / 2 + \"px\";\n            transformOriginX = 'left';\n          } else {\n            // Beak is aligned to the right of target\n            beakPosition.right = COACHMARK_WIDTH / 2 - BEAK_WIDTH / 2 + \"px\";\n            transformOriginX = 'right';\n          }\n        }\n\n        if (beakDirection === RectangleEdge.top) {\n          beakPosition.top = distanceAdjustment;\n          transformOriginY = 'top';\n        } else {\n          beakPosition.bottom = distanceAdjustment;\n          transformOriginY = 'bottom';\n        }\n\n        break;\n      // If Beak is pointing Left or Right\n\n      case RectangleEdge.left:\n      case RectangleEdge.right:\n        // If there is no target alignment, then beak is Y-axis centered in callout\n        if (!targetAlignment) {\n          beakPosition.top = \"calc(50% - \" + BEAK_WIDTH / 2 + \"px)\";\n          transformOriginY = \"center\";\n        } else {\n          // Beak is aligned to the top of target\n          if (targetAlignment === RectangleEdge.top) {\n            beakPosition.top = COACHMARK_WIDTH / 2 - BEAK_WIDTH / 2 + \"px\";\n            transformOriginY = \"top\";\n          } else {\n            // Beak is aligned to the bottom of target\n            beakPosition.bottom = COACHMARK_WIDTH / 2 - BEAK_WIDTH / 2 + \"px\";\n            transformOriginY = \"bottom\";\n          }\n        }\n\n        if (beakDirection === RectangleEdge.left) {\n          if (isRTL) {\n            beakPosition.right = distanceAdjustment;\n          } else {\n            beakPosition.left = distanceAdjustment;\n          }\n\n          transformOriginX = 'left';\n        } else {\n          if (isRTL) {\n            beakPosition.left = distanceAdjustment;\n          } else {\n            beakPosition.right = distanceAdjustment;\n          }\n\n          transformOriginX = 'right';\n        }\n\n        break;\n    }\n\n    return [beakPosition, transformOriginX + \" \" + transformOriginY];\n  }, [targetAlignment, targetPosition, isRTL]);\n}\n\nfunction useListeners(props, translateAnimationContainer, openCoachmark) {\n  var _a;\n\n  var document = (_a = getDocument()) === null || _a === void 0 ? void 0 : _a.documentElement;\n  useOnEvent(document, 'keydown', function (e) {\n    var _a, _b; // Open coachmark if user presses ALT + C (arbitrary keypress for now)\n\n\n    if ( // eslint-disable-next-line deprecation/deprecation\n    e.altKey && e.which === KeyCodes.c || // eslint-disable-next-line deprecation/deprecation\n    e.which === KeyCodes.enter && ((_b = (_a = translateAnimationContainer.current) === null || _a === void 0 ? void 0 : _a.contains) === null || _b === void 0 ? void 0 : _b.call(_a, e.target))) {\n      openCoachmark();\n    }\n  }, true);\n\n  var dismissOnLostFocus = function dismissOnLostFocus(ev) {\n    var _a;\n\n    if (props.preventDismissOnLostFocus) {\n      var clickTarget = ev.target;\n      var clickedOutsideCallout = translateAnimationContainer.current && !elementContains(translateAnimationContainer.current, clickTarget);\n      var target = props.target;\n\n      if (clickedOutsideCallout && clickTarget !== target && !elementContains(target, clickTarget)) {\n        (_a = props.onDismiss) === null || _a === void 0 ? void 0 : _a.call(props, ev);\n      }\n    }\n  };\n\n  useOnEvent(document, 'click', dismissOnLostFocus, true);\n  useOnEvent(document, 'focus', dismissOnLostFocus, true);\n}\n\nfunction useProximityHandlers(props, translateAnimationContainer, openCoachmark) {\n  var _a = useSetTimeout(),\n      setTimeout = _a.setTimeout,\n      clearTimeout = _a.clearTimeout;\n  /** The target element the mouse would be in proximity to */\n\n\n  var targetElementRect = React.useRef();\n  React.useEffect(function () {\n    var setTargetElementRect = function setTargetElementRect() {\n      if (translateAnimationContainer.current) {\n        targetElementRect.current = translateAnimationContainer.current.getBoundingClientRect();\n      }\n    };\n\n    var events = new EventGroup({}); // We don't want the user to immediately trigger the Coachmark when it's opened\n\n    setTimeout(function () {\n      var _a = props.mouseProximityOffset,\n          mouseProximityOffset = _a === void 0 ? 0 : _a;\n      /** Cached ids returned when setTimeout runs during the window resize event trigger. */\n\n      var timeoutIds = []; // Take the initial measure out of the initial render to prevent an unnecessary render.\n\n      setTimeout(function () {\n        setTargetElementRect(); // When the window resizes we want to async get the bounding client rectangle.\n        // Every time the event is triggered we want to setTimeout and then clear any previous\n        // instances of setTimeout.\n\n        events.on(window, 'resize', function () {\n          timeoutIds.forEach(function (value) {\n            clearTimeout(value);\n          });\n          timeoutIds.splice(0, timeoutIds.length); // clear array\n\n          timeoutIds.push(setTimeout(function () {\n            setTargetElementRect();\n          }, 100));\n        });\n      }, 10); // Every time the document's mouse move is triggered, we want to check if inside of an element\n      // and set the state with the result.\n\n      events.on(document, 'mousemove', function (e) {\n        var _a;\n\n        var mouseY = e.clientY;\n        var mouseX = e.clientX;\n        setTargetElementRect();\n\n        if (isInsideElement(targetElementRect.current, mouseX, mouseY, mouseProximityOffset)) {\n          openCoachmark();\n        }\n\n        (_a = props.onMouseMove) === null || _a === void 0 ? void 0 : _a.call(props, e);\n      });\n    }, props.delayBeforeMouseOpen);\n    return function () {\n      return events.dispose();\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run on mount\n  }, []);\n}\n\nfunction useComponentRef(props) {\n  var onDismiss = props.onDismiss;\n  React.useImperativeHandle(props.componentRef, function (ev) {\n    return {\n      dismiss: function dismiss() {\n        onDismiss === null || onDismiss === void 0 ? void 0 : onDismiss(ev);\n      }\n    };\n  }, [onDismiss]);\n}\n\nfunction useAriaAlert(_a) {\n  var ariaAlertText = _a.ariaAlertText;\n  var async = useAsync();\n  /** ARIA alert text to read aloud with Narrator once the Coachmark is mounted */\n\n  var _b = React.useState(),\n      alertText = _b[0],\n      setAlertText = _b[1];\n\n  React.useEffect(function () {\n    // Need to add RAF to have narrator read change in alert container\n    async.requestAnimationFrame(function () {\n      setAlertText(ariaAlertText);\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run on mount\n  }, []);\n  return alertText;\n}\n\nfunction useAutoFocus(_a) {\n  var preventFocusOnMount = _a.preventFocusOnMount;\n  var setTimeout = useSetTimeout().setTimeout;\n  /**\n   * The cached HTMLElement reference to the Entity Inner Host\n   * element.\n   */\n\n  var entityHost = React.useRef(null);\n  React.useEffect(function () {\n    if (!preventFocusOnMount) {\n      setTimeout(function () {\n        var _a;\n\n        return (_a = entityHost.current) === null || _a === void 0 ? void 0 : _a.focus();\n      }, 1000);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run on mount\n\n  }, []);\n  return entityHost;\n}\n\nfunction useEntityHostMeasurements(props, entityInnerHostElementRef) {\n  /** Is the teaching bubble currently retrieving the original dimensions of the hosted entity. */\n  var _a = React.useState(!!props.isCollapsed),\n      isMeasuring = _a[0],\n      setIsMeasuring = _a[1];\n  /** Cached width and height of _entityInnerHostElement */\n\n\n  var _b = React.useState(props.isCollapsed ? {\n    width: 0,\n    height: 0\n  } : {}),\n      entityInnerHostRect = _b[0],\n      setEntityInnerHostRect = _b[1];\n\n  var async = useAsync();\n  React.useEffect(function () {\n    async.requestAnimationFrame(function () {\n      if (entityInnerHostElementRef.current) {\n        setEntityInnerHostRect({\n          width: entityInnerHostElementRef.current.offsetWidth,\n          height: entityInnerHostElementRef.current.offsetHeight\n        });\n        setIsMeasuring(false);\n      }\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run on mount\n  }, []);\n  return [isMeasuring, entityInnerHostRect];\n}\n\nfunction useDeprecationWarning(props) {\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n    useWarnings({\n      name: COMPONENT_NAME,\n      props: props,\n      deprecations: {\n        teachingBubbleRef: undefined,\n        collapsed: 'isCollapsed',\n        beakWidth: undefined,\n        beakHeight: undefined,\n        width: undefined,\n        height: undefined\n      }\n    });\n  }\n}\n\nvar COMPONENT_NAME = 'CoachmarkBase';\nexport var CoachmarkBase = React.forwardRef(function (propsWithoutDefaults, forwardedRef) {\n  var props = getPropsWithDefaults(DEFAULT_PROPS, propsWithoutDefaults);\n  var entityInnerHostElementRef = React.useRef(null);\n  var translateAnimationContainer = React.useRef(null);\n\n  var _a = usePositionedData(),\n      targetAlignment = _a[0],\n      targetPosition = _a[1],\n      onPositioned = _a[2];\n\n  var _b = useCollapsedState(props, entityInnerHostElementRef),\n      isCollapsed = _b[0],\n      openCoachmark = _b[1];\n\n  var _c = useBeakPosition(props, targetAlignment, targetPosition),\n      beakPositioningProps = _c[0],\n      transformOrigin = _c[1];\n\n  var _d = useEntityHostMeasurements(props, entityInnerHostElementRef),\n      isMeasuring = _d[0],\n      entityInnerHostRect = _d[1];\n\n  var alertText = useAriaAlert(props);\n  var entityHost = useAutoFocus(props);\n  useListeners(props, translateAnimationContainer, openCoachmark);\n  useComponentRef(props);\n  useProximityHandlers(props, translateAnimationContainer, openCoachmark);\n  useDeprecationWarning(props);\n  var beaconColorOne = props.beaconColorOne,\n      beaconColorTwo = props.beaconColorTwo,\n      children = props.children,\n      target = props.target,\n      color = props.color,\n      positioningContainerProps = props.positioningContainerProps,\n      ariaDescribedBy = props.ariaDescribedBy,\n      ariaDescribedByText = props.ariaDescribedByText,\n      ariaLabelledBy = props.ariaLabelledBy,\n      ariaLabelledByText = props.ariaLabelledByText,\n      ariaAlertText = props.ariaAlertText,\n      delayBeforeCoachmarkAnimation = props.delayBeforeCoachmarkAnimation,\n      styles = props.styles,\n      theme = props.theme,\n      className = props.className,\n      persistentBeak = props.persistentBeak; // Defaulting the main background before passing it to the styles because it is used for `Beak` too.\n\n  var defaultColor = color;\n\n  if (!defaultColor && theme) {\n    defaultColor = theme.semanticColors.primaryButtonBackground;\n  }\n\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    beaconColorOne: beaconColorOne,\n    beaconColorTwo: beaconColorTwo,\n    className: className,\n    isCollapsed: isCollapsed,\n    isMeasuring: isMeasuring,\n    color: defaultColor,\n    transformOrigin: transformOrigin,\n    entityHostHeight: entityInnerHostRect.height === undefined ? undefined : entityInnerHostRect.height + \"px\",\n    entityHostWidth: entityInnerHostRect.width === undefined ? undefined : entityInnerHostRect.width + \"px\",\n    width: COACHMARK_WIDTH + \"px\",\n    height: COACHMARK_HEIGHT + \"px\",\n    delayBeforeCoachmarkAnimation: delayBeforeCoachmarkAnimation + \"ms\"\n  });\n  var finalHeight = isCollapsed ? COACHMARK_HEIGHT : entityInnerHostRect.height;\n  return React.createElement(PositioningContainer, __assign({\n    target: target,\n    offsetFromTarget: BEAK_HEIGHT,\n    finalHeight: finalHeight,\n    ref: forwardedRef,\n    onPositioned: onPositioned,\n    bounds: getBounds(props)\n  }, positioningContainerProps), React.createElement(\"div\", {\n    className: classNames.root\n  }, ariaAlertText && React.createElement(\"div\", {\n    className: classNames.ariaContainer,\n    role: \"alert\",\n    \"aria-hidden\": !isCollapsed\n  }, alertText), React.createElement(\"div\", {\n    className: classNames.pulsingBeacon\n  }), React.createElement(\"div\", {\n    className: classNames.translateAnimationContainer,\n    ref: translateAnimationContainer\n  }, React.createElement(\"div\", {\n    className: classNames.scaleAnimationLayer\n  }, React.createElement(\"div\", {\n    className: classNames.rotateAnimationLayer\n  }, (isCollapsed || persistentBeak) && React.createElement(Beak, __assign({}, beakPositioningProps, {\n    color: defaultColor\n  })), React.createElement(\"div\", {\n    className: classNames.entityHost,\n    ref: entityHost,\n    tabIndex: -1,\n    \"data-is-focusable\": true,\n    role: \"dialog\",\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-describedby\": ariaDescribedBy\n  }, isCollapsed && [ariaLabelledBy && React.createElement(\"p\", {\n    id: ariaLabelledBy,\n    key: 0,\n    className: classNames.ariaContainer\n  }, ariaLabelledByText), ariaDescribedBy && React.createElement(\"p\", {\n    id: ariaDescribedBy,\n    key: 1,\n    className: classNames.ariaContainer\n  }, ariaDescribedByText)], React.createElement(FocusTrapZone, {\n    isClickableOutsideFocusTrap: true,\n    forceFocusInsideTrap: false\n  }, React.createElement(\"div\", {\n    className: classNames.entityInnerHost,\n    ref: entityInnerHostElementRef\n  }, React.createElement(\"div\", {\n    className: classNames.childrenContainer,\n    \"aria-hidden\": isCollapsed\n  }, children)))))))));\n});\nCoachmarkBase.displayName = COMPONENT_NAME;\n\nfunction getBounds(_a) {\n  var isPositionForced = _a.isPositionForced,\n      positioningContainerProps = _a.positioningContainerProps;\n\n  if (isPositionForced) {\n    // If directionalHint direction is the top or bottom auto edge, then we want to set the left/right bounds\n    // to the window x-axis to have auto positioning work correctly.\n    if (positioningContainerProps && (positioningContainerProps.directionalHint === DirectionalHint.topAutoEdge || positioningContainerProps.directionalHint === DirectionalHint.bottomAutoEdge)) {\n      return {\n        left: 0,\n        top: -Infinity,\n        bottom: Infinity,\n        right: window.innerWidth,\n        width: window.innerWidth,\n        height: Infinity\n      };\n    } else {\n      return {\n        left: -Infinity,\n        top: -Infinity,\n        bottom: Infinity,\n        right: Infinity,\n        width: Infinity,\n        height: Infinity\n      };\n    }\n  } else {\n    return undefined;\n  }\n}\n\nfunction isInsideElement(targetElementRect, mouseX, mouseY, mouseProximityOffset) {\n  if (mouseProximityOffset === void 0) {\n    mouseProximityOffset = 0;\n  }\n\n  return mouseX > targetElementRect.left - mouseProximityOffset && mouseX < targetElementRect.left + targetElementRect.width + mouseProximityOffset && mouseY > targetElementRect.top - mouseProximityOffset && mouseY < targetElementRect.top + targetElementRect.height + mouseProximityOffset;\n}","map":{"version":3,"mappings":"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","names":["React","classNamesFunction","elementContains","focusFirstChild","getDocument","KeyCodes","getRTL","EventGroup","getPropsWithDefaults","RectangleEdge","getOppositeEdge","PositioningContainer","Beak","BEAK_HEIGHT","BEAK_WIDTH","DirectionalHint","COACHMARK_HEIGHT","COACHMARK_WIDTH","FocusTrapZone","useAsync","useOnEvent","useSetTimeout","useWarnings","getClassNames","COACHMARK_ATTRIBUTE_NAME","DEFAULT_PROPS","isCollapsed","mouseProximityOffset","delayBeforeMouseOpen","delayBeforeCoachmarkAnimation","isPositionForced","positioningContainerProps","directionalHint","bottomAutoEdge","useCollapsedState","props","entityInnerHostElementRef","propsIsCollapsed","onAnimationOpenStart","onAnimationOpenEnd","useState","setIsCollapsed","setTimeout","hasCoachmarkBeenOpened","useRef","openCoachmark","useCallback","current","_a","addEventListener","_b","useEffect","usePositionedData","async","targetAlignment","setTargetAlignment","targetPosition","setTargetPosition","onPositioned","alignmentEdge","targetEdge","requestAnimationFrame","useBeakPosition","isRTL","theme","useMemo","beakDirection","undefined","bottom","beakPosition","direction","transformOriginX","transformOriginY","distanceAdjustment","top","left","right","useListeners","translateAnimationContainer","document","documentElement","e","altKey","which","c","enter","contains","target","dismissOnLostFocus","ev","preventDismissOnLostFocus","clickTarget","clickedOutsideCallout","onDismiss","useProximityHandlers","clearTimeout","targetElementRect","setTargetElementRect","getBoundingClientRect","events","timeoutIds","on","window","forEach","value","splice","length","push","mouseY","clientY","mouseX","clientX","isInsideElement","onMouseMove","dispose","useComponentRef","useImperativeHandle","componentRef","dismiss","useAriaAlert","ariaAlertText","alertText","setAlertText","useAutoFocus","preventFocusOnMount","entityHost","focus","useEntityHostMeasurements","isMeasuring","setIsMeasuring","width","height","entityInnerHostRect","setEntityInnerHostRect","offsetWidth","offsetHeight","useDeprecationWarning","process","env","NODE_ENV","name","COMPONENT_NAME","deprecations","teachingBubbleRef","collapsed","beakWidth","beakHeight","CoachmarkBase","forwardRef","propsWithoutDefaults","forwardedRef","beakPositioningProps","transformOrigin","beaconColorTwo","children","color","ariaDescribedBy","ariaDescribedByText","ariaLabelledBy","ariaLabelledByText","styles","className","persistentBeak","defaultColor","semanticColors","primaryButtonBackground","classNames","beaconColorOne","entityHostHeight","entityHostWidth","finalHeight","__assign","offsetFromTarget","ref","bounds","getBounds","root","ariaContainer","role","pulsingBeacon","scaleAnimationLayer","rotateAnimationLayer","tabIndex","id","key","isClickableOutsideFocusTrap","forceFocusInsideTrap","entityInnerHost","childrenContainer","displayName","topAutoEdge","Infinity","innerWidth"],"sources":["/home/runner/work/Reaction/Reaction/employee-info/node_modules/@fluentui/react/lib/components/src/components/Coachmark/Coachmark.base.tsx"],"sourcesContent":["// Utilities\nimport * as React from 'react';\nimport {\n  classNamesFunction,\n  elementContains,\n  focusFirstChild,\n  getDocument,\n  KeyCodes,\n  getRTL,\n  EventGroup,\n  getPropsWithDefaults,\n} from '../../Utilities';\nimport { RectangleEdge, getOppositeEdge } from '../../Positioning';\n\n// Component Dependencies\nimport { PositioningContainer } from './PositioningContainer/index';\nimport { Beak, BEAK_HEIGHT, BEAK_WIDTH } from './Beak/Beak';\nimport { DirectionalHint } from '../../common/DirectionalHint';\n\n// Coachmark\nimport { COACHMARK_HEIGHT, COACHMARK_WIDTH } from './Coachmark.styles';\nimport { FocusTrapZone } from '../../FocusTrapZone';\nimport { useAsync, useOnEvent, useSetTimeout, useWarnings } from '@fluentui/react-hooks';\nimport type { IRectangle } from '../../Utilities';\nimport type { IPositionedData } from '../../Positioning';\nimport type { ICoachmarkProps, ICoachmarkStyles, ICoachmarkStyleProps } from './Coachmark.types';\nimport type { IBeakProps } from './Beak/Beak.types';\n\nconst getClassNames = classNamesFunction<ICoachmarkStyleProps, ICoachmarkStyles>();\n\nexport const COACHMARK_ATTRIBUTE_NAME = 'data-coachmarkid';\n\n/**\n * An interface for the cached dimensions of entity inner host.\n */\nexport interface IEntityRect {\n  width?: number;\n  height?: number;\n}\n\ntype BeakPosition = Pick<IBeakProps, 'left' | 'top' | 'right' | 'bottom' | 'direction'>;\n\nconst DEFAULT_PROPS: Partial<ICoachmarkProps> = {\n  isCollapsed: true,\n  mouseProximityOffset: 10,\n  delayBeforeMouseOpen: 3600, // The approximate time the coachmark shows up\n  delayBeforeCoachmarkAnimation: 0,\n  isPositionForced: true,\n  positioningContainerProps: {\n    directionalHint: DirectionalHint.bottomAutoEdge,\n  },\n};\n\nfunction useCollapsedState(props: ICoachmarkProps, entityInnerHostElementRef: React.RefObject<HTMLDivElement>) {\n  const { isCollapsed: propsIsCollapsed, onAnimationOpenStart, onAnimationOpenEnd } = props;\n\n  /** Is the Coachmark currently collapsed into a tear drop shape */\n  const [isCollapsed, setIsCollapsed] = React.useState<boolean>(!!propsIsCollapsed);\n  const { setTimeout } = useSetTimeout();\n\n  // Rather than pushing out logic elsewhere to prevent openCoachmark from being called repeatedly,\n  // we'll track it here and only invoke the logic once. We do this with a ref, rather than just the state,\n  // because the openCoachmark callback can be captured in scope for an effect\n  const hasCoachmarkBeenOpened = React.useRef(!isCollapsed);\n\n  const openCoachmark = React.useCallback(() => {\n    if (!hasCoachmarkBeenOpened.current) {\n      setIsCollapsed(false);\n\n      onAnimationOpenStart?.();\n\n      entityInnerHostElementRef.current?.addEventListener?.('transitionend', (): void => {\n        // Need setTimeout to trigger narrator\n        setTimeout(() => {\n          if (entityInnerHostElementRef.current) {\n            focusFirstChild(entityInnerHostElementRef.current);\n          }\n        }, 1000);\n\n        onAnimationOpenEnd?.();\n      });\n      hasCoachmarkBeenOpened.current = true;\n    }\n  }, [entityInnerHostElementRef, onAnimationOpenEnd, onAnimationOpenStart, setTimeout]);\n\n  React.useEffect(() => {\n    if (!propsIsCollapsed) {\n      openCoachmark();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run if isCollapsed changes\n  }, [propsIsCollapsed]);\n\n  return [isCollapsed, openCoachmark] as const;\n}\n\nfunction usePositionedData() {\n  const async = useAsync();\n\n  /**\n   * Alignment edge of callout in relation to target\n   */\n  const [targetAlignment, setTargetAlignment] = React.useState<RectangleEdge | undefined>();\n  /**\n   * Position of Coachmark/TeachingBubble in relation to target\n   */\n  const [targetPosition, setTargetPosition] = React.useState<RectangleEdge | undefined>();\n\n  const onPositioned = ({ alignmentEdge, targetEdge }: IPositionedData) =>\n    async.requestAnimationFrame(() => {\n      setTargetAlignment(alignmentEdge);\n      setTargetPosition(targetEdge);\n    });\n\n  return [targetAlignment, targetPosition, onPositioned] as const;\n}\n\nfunction useBeakPosition(\n  props: ICoachmarkProps,\n  targetAlignment: RectangleEdge | undefined,\n  targetPosition: RectangleEdge | undefined,\n) {\n  const isRTL = getRTL(props.theme);\n\n  return React.useMemo(() => {\n    const beakDirection = targetPosition === undefined ? RectangleEdge.bottom : getOppositeEdge(targetPosition);\n\n    const beakPosition: BeakPosition = { direction: beakDirection };\n\n    let transformOriginX: string;\n    let transformOriginY: string;\n\n    const distanceAdjustment = '3px'; // Adjustment distance for Beak to shift towards Coachmark bubble.\n\n    switch (beakDirection) {\n      // If Beak is pointing Up or Down\n      case RectangleEdge.top:\n      case RectangleEdge.bottom:\n        // If there is no target alignment, then beak is X-axis centered in callout\n        if (!targetAlignment) {\n          beakPosition.left = `calc(50% - ${BEAK_WIDTH / 2}px)`;\n          transformOriginX = 'center';\n        } else {\n          // Beak is aligned to the left of target\n          if (targetAlignment === RectangleEdge.left) {\n            beakPosition.left = `${COACHMARK_WIDTH / 2 - BEAK_WIDTH / 2}px`;\n            transformOriginX = 'left';\n          } else {\n            // Beak is aligned to the right of target\n            beakPosition.right = `${COACHMARK_WIDTH / 2 - BEAK_WIDTH / 2}px`;\n            transformOriginX = 'right';\n          }\n        }\n\n        if (beakDirection === RectangleEdge.top) {\n          beakPosition.top = distanceAdjustment;\n          transformOriginY = 'top';\n        } else {\n          beakPosition.bottom = distanceAdjustment;\n          transformOriginY = 'bottom';\n        }\n        break;\n      // If Beak is pointing Left or Right\n      case RectangleEdge.left:\n      case RectangleEdge.right:\n        // If there is no target alignment, then beak is Y-axis centered in callout\n        if (!targetAlignment) {\n          beakPosition.top = `calc(50% - ${BEAK_WIDTH / 2}px)`;\n          transformOriginY = `center`;\n        } else {\n          // Beak is aligned to the top of target\n          if (targetAlignment === RectangleEdge.top) {\n            beakPosition.top = `${COACHMARK_WIDTH / 2 - BEAK_WIDTH / 2}px`;\n            transformOriginY = `top`;\n          } else {\n            // Beak is aligned to the bottom of target\n            beakPosition.bottom = `${COACHMARK_WIDTH / 2 - BEAK_WIDTH / 2}px`;\n            transformOriginY = `bottom`;\n          }\n        }\n\n        if (beakDirection === RectangleEdge.left) {\n          if (isRTL) {\n            beakPosition.right = distanceAdjustment;\n          } else {\n            beakPosition.left = distanceAdjustment;\n          }\n          transformOriginX = 'left';\n        } else {\n          if (isRTL) {\n            beakPosition.left = distanceAdjustment;\n          } else {\n            beakPosition.right = distanceAdjustment;\n          }\n          transformOriginX = 'right';\n        }\n        break;\n    }\n\n    return [beakPosition as Readonly<BeakPosition>, `${transformOriginX} ${transformOriginY}`] as const;\n  }, [targetAlignment, targetPosition, isRTL]);\n}\n\nfunction useListeners(\n  props: ICoachmarkProps,\n  translateAnimationContainer: React.RefObject<HTMLDivElement>,\n  openCoachmark: () => void,\n) {\n  const document = getDocument()?.documentElement;\n\n  useOnEvent(\n    document,\n    'keydown',\n    (e: KeyboardEvent) => {\n      // Open coachmark if user presses ALT + C (arbitrary keypress for now)\n      if (\n        // eslint-disable-next-line deprecation/deprecation\n        (e.altKey && e.which === KeyCodes.c) ||\n        // eslint-disable-next-line deprecation/deprecation\n        (e.which === KeyCodes.enter && translateAnimationContainer.current?.contains?.(e.target as Node))\n      ) {\n        openCoachmark();\n      }\n    },\n    true,\n  );\n\n  const dismissOnLostFocus = (ev: Event) => {\n    if (props.preventDismissOnLostFocus) {\n      const clickTarget = ev.target as HTMLElement;\n      const clickedOutsideCallout =\n        translateAnimationContainer.current && !elementContains(translateAnimationContainer.current, clickTarget);\n\n      const { target } = props;\n\n      if (clickedOutsideCallout && clickTarget !== target && !elementContains(target as HTMLElement, clickTarget)) {\n        props.onDismiss?.(ev);\n      }\n    }\n  };\n\n  useOnEvent(document, 'click', dismissOnLostFocus, true);\n  useOnEvent(document, 'focus', dismissOnLostFocus, true);\n}\n\nfunction useProximityHandlers(\n  props: ICoachmarkProps,\n  translateAnimationContainer: React.RefObject<HTMLDivElement>,\n  openCoachmark: () => void,\n) {\n  const { setTimeout, clearTimeout } = useSetTimeout();\n\n  /** The target element the mouse would be in proximity to */\n  const targetElementRect = React.useRef<DOMRect>();\n\n  React.useEffect(() => {\n    const setTargetElementRect = (): void => {\n      if (translateAnimationContainer.current) {\n        targetElementRect.current = translateAnimationContainer.current.getBoundingClientRect();\n      }\n    };\n\n    const events = new EventGroup({});\n\n    // We don't want the user to immediately trigger the Coachmark when it's opened\n    setTimeout(() => {\n      const { mouseProximityOffset = 0 } = props;\n\n      /** Cached ids returned when setTimeout runs during the window resize event trigger. */\n      const timeoutIds: number[] = [];\n\n      // Take the initial measure out of the initial render to prevent an unnecessary render.\n      setTimeout(() => {\n        setTargetElementRect();\n\n        // When the window resizes we want to async get the bounding client rectangle.\n        // Every time the event is triggered we want to setTimeout and then clear any previous\n        // instances of setTimeout.\n        events.on(window, 'resize', (): void => {\n          timeoutIds.forEach((value: number): void => {\n            clearTimeout(value);\n          });\n          timeoutIds.splice(0, timeoutIds.length); // clear array\n\n          timeoutIds.push(\n            setTimeout((): void => {\n              setTargetElementRect();\n            }, 100),\n          );\n        });\n      }, 10);\n\n      // Every time the document's mouse move is triggered, we want to check if inside of an element\n      // and set the state with the result.\n      events.on(document, 'mousemove', (e: MouseEvent) => {\n        const mouseY = e.clientY;\n        const mouseX = e.clientX;\n        setTargetElementRect();\n\n        if (isInsideElement(targetElementRect.current!, mouseX, mouseY, mouseProximityOffset)) {\n          openCoachmark();\n        }\n\n        props.onMouseMove?.(e);\n      });\n    }, props.delayBeforeMouseOpen!);\n\n    return () => events.dispose();\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run on mount\n  }, []);\n}\n\nfunction useComponentRef(props: ICoachmarkProps) {\n  const { onDismiss } = props;\n  React.useImperativeHandle(\n    props.componentRef,\n    (ev?: Event | React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => ({\n      dismiss() {\n        onDismiss?.(ev);\n      },\n    }),\n    [onDismiss],\n  );\n}\n\nfunction useAriaAlert({ ariaAlertText }: ICoachmarkProps) {\n  const async = useAsync();\n\n  /** ARIA alert text to read aloud with Narrator once the Coachmark is mounted */\n  const [alertText, setAlertText] = React.useState<string | undefined>();\n\n  React.useEffect(() => {\n    // Need to add RAF to have narrator read change in alert container\n    async.requestAnimationFrame(() => {\n      setAlertText(ariaAlertText);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run on mount\n  }, []);\n\n  return alertText;\n}\n\nfunction useAutoFocus({ preventFocusOnMount }: ICoachmarkProps) {\n  const { setTimeout } = useSetTimeout();\n\n  /**\n   * The cached HTMLElement reference to the Entity Inner Host\n   * element.\n   */\n  const entityHost = React.useRef<HTMLDivElement | null>(null);\n\n  React.useEffect(() => {\n    if (!preventFocusOnMount) {\n      setTimeout(() => entityHost.current?.focus(), 1000);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run on mount\n  }, []);\n\n  return entityHost;\n}\n\nfunction useEntityHostMeasurements(props: ICoachmarkProps, entityInnerHostElementRef: React.RefObject<HTMLDivElement>) {\n  /** Is the teaching bubble currently retrieving the original dimensions of the hosted entity. */\n  const [isMeasuring, setIsMeasuring] = React.useState<boolean>(!!props.isCollapsed);\n  /** Cached width and height of _entityInnerHostElement */\n  const [entityInnerHostRect, setEntityInnerHostRect] = React.useState<IEntityRect>(\n    props.isCollapsed ? { width: 0, height: 0 } : {},\n  );\n  const async = useAsync();\n\n  React.useEffect(() => {\n    async.requestAnimationFrame(() => {\n      if (entityInnerHostElementRef.current) {\n        setEntityInnerHostRect({\n          width: entityInnerHostElementRef.current.offsetWidth,\n          height: entityInnerHostElementRef.current.offsetHeight,\n        });\n        setIsMeasuring(false);\n      }\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- should only run on mount\n  }, []);\n\n  return [isMeasuring, entityInnerHostRect] as const;\n}\n\nfunction useDeprecationWarning(props: ICoachmarkProps) {\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n    useWarnings({\n      name: COMPONENT_NAME,\n      props,\n      deprecations: {\n        teachingBubbleRef: undefined,\n        collapsed: 'isCollapsed',\n        beakWidth: undefined,\n        beakHeight: undefined,\n        width: undefined,\n        height: undefined,\n      },\n    });\n  }\n}\n\nconst COMPONENT_NAME = 'CoachmarkBase';\n\nexport const CoachmarkBase: React.FunctionComponent<ICoachmarkProps> = React.forwardRef<\n  HTMLDivElement,\n  ICoachmarkProps\n>((propsWithoutDefaults, forwardedRef) => {\n  const props = getPropsWithDefaults(DEFAULT_PROPS, propsWithoutDefaults);\n\n  const entityInnerHostElementRef = React.useRef<HTMLDivElement | null>(null);\n  const translateAnimationContainer = React.useRef<HTMLDivElement | null>(null);\n\n  const [targetAlignment, targetPosition, onPositioned] = usePositionedData();\n  const [isCollapsed, openCoachmark] = useCollapsedState(props, entityInnerHostElementRef);\n  const [beakPositioningProps, transformOrigin] = useBeakPosition(props, targetAlignment, targetPosition);\n  const [isMeasuring, entityInnerHostRect] = useEntityHostMeasurements(props, entityInnerHostElementRef);\n  const alertText = useAriaAlert(props);\n  const entityHost = useAutoFocus(props);\n\n  useListeners(props, translateAnimationContainer, openCoachmark);\n  useComponentRef(props);\n  useProximityHandlers(props, translateAnimationContainer, openCoachmark);\n  useDeprecationWarning(props);\n\n  const {\n    beaconColorOne,\n    beaconColorTwo,\n    children,\n    target,\n    color,\n    positioningContainerProps,\n    ariaDescribedBy,\n    ariaDescribedByText,\n    ariaLabelledBy,\n    ariaLabelledByText,\n    ariaAlertText,\n    delayBeforeCoachmarkAnimation,\n    styles,\n    theme,\n    className,\n    persistentBeak,\n  } = props;\n\n  // Defaulting the main background before passing it to the styles because it is used for `Beak` too.\n  let defaultColor = color;\n  if (!defaultColor && theme) {\n    defaultColor = theme.semanticColors.primaryButtonBackground;\n  }\n\n  const classNames = getClassNames(styles, {\n    theme,\n    beaconColorOne,\n    beaconColorTwo,\n    className,\n    isCollapsed,\n    isMeasuring,\n    color: defaultColor,\n    transformOrigin,\n    entityHostHeight: entityInnerHostRect.height === undefined ? undefined : `${entityInnerHostRect.height}px`,\n    entityHostWidth: entityInnerHostRect.width === undefined ? undefined : `${entityInnerHostRect.width}px`,\n    width: `${COACHMARK_WIDTH}px`,\n    height: `${COACHMARK_HEIGHT}px`,\n    delayBeforeCoachmarkAnimation: `${delayBeforeCoachmarkAnimation}ms`,\n  });\n\n  const finalHeight: number | undefined = isCollapsed ? COACHMARK_HEIGHT : entityInnerHostRect.height;\n\n  return (\n    <PositioningContainer\n      target={target}\n      offsetFromTarget={BEAK_HEIGHT}\n      finalHeight={finalHeight}\n      ref={forwardedRef}\n      onPositioned={onPositioned}\n      bounds={getBounds(props)}\n      {...positioningContainerProps}\n    >\n      <div className={classNames.root}>\n        {ariaAlertText && (\n          <div className={classNames.ariaContainer} role=\"alert\" aria-hidden={!isCollapsed}>\n            {alertText}\n          </div>\n        )}\n        <div className={classNames.pulsingBeacon} />\n        <div className={classNames.translateAnimationContainer} ref={translateAnimationContainer}>\n          <div className={classNames.scaleAnimationLayer}>\n            <div className={classNames.rotateAnimationLayer}>\n              {(isCollapsed || persistentBeak) && <Beak {...beakPositioningProps} color={defaultColor} />}\n              <div\n                className={classNames.entityHost}\n                ref={entityHost}\n                tabIndex={-1}\n                data-is-focusable={true}\n                role=\"dialog\"\n                aria-labelledby={ariaLabelledBy}\n                aria-describedby={ariaDescribedBy}\n              >\n                {isCollapsed && [\n                  ariaLabelledBy && (\n                    <p id={ariaLabelledBy} key={0} className={classNames.ariaContainer}>\n                      {ariaLabelledByText}\n                    </p>\n                  ),\n                  ariaDescribedBy && (\n                    <p id={ariaDescribedBy} key={1} className={classNames.ariaContainer}>\n                      {ariaDescribedByText}\n                    </p>\n                  ),\n                ]}\n                <FocusTrapZone isClickableOutsideFocusTrap={true} forceFocusInsideTrap={false}>\n                  <div className={classNames.entityInnerHost} ref={entityInnerHostElementRef}>\n                    <div className={classNames.childrenContainer} aria-hidden={isCollapsed}>\n                      {children}\n                    </div>\n                  </div>\n                </FocusTrapZone>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </PositioningContainer>\n  );\n});\nCoachmarkBase.displayName = COMPONENT_NAME;\n\nfunction getBounds({ isPositionForced, positioningContainerProps }: ICoachmarkProps): IRectangle | undefined {\n  if (isPositionForced) {\n    // If directionalHint direction is the top or bottom auto edge, then we want to set the left/right bounds\n    // to the window x-axis to have auto positioning work correctly.\n    if (\n      positioningContainerProps &&\n      (positioningContainerProps.directionalHint === DirectionalHint.topAutoEdge ||\n        positioningContainerProps.directionalHint === DirectionalHint.bottomAutoEdge)\n    ) {\n      return {\n        left: 0,\n        top: -Infinity,\n        bottom: Infinity,\n        right: window.innerWidth,\n        width: window.innerWidth,\n        height: Infinity,\n      };\n    } else {\n      return {\n        left: -Infinity,\n        top: -Infinity,\n        bottom: Infinity,\n        right: Infinity,\n        width: Infinity,\n        height: Infinity,\n      };\n    }\n  } else {\n    return undefined;\n  }\n}\n\nfunction isInsideElement(\n  targetElementRect: ClientRect,\n  mouseX: number,\n  mouseY: number,\n  mouseProximityOffset: number = 0,\n): boolean {\n  return (\n    mouseX > targetElementRect.left - mouseProximityOffset &&\n    mouseX < targetElementRect.left + targetElementRect.width + mouseProximityOffset &&\n    mouseY > targetElementRect.top - mouseProximityOffset &&\n    mouseY < targetElementRect.top + targetElementRect.height + mouseProximityOffset\n  );\n}\n"]},"metadata":{},"sourceType":"module"}