{"ast":null,"code":"import { HighContrastSelector, AnimationVariables, normalize, getPlaceholderStyles, getGlobalClassNames, getInputFocusStyle } from '../../Styling';\nimport { getRTL } from '../../Utilities';\nvar GlobalClassNames = {\n  root: 'ms-SearchBox',\n  iconContainer: 'ms-SearchBox-iconContainer',\n  icon: 'ms-SearchBox-icon',\n  clearButton: 'ms-SearchBox-clearButton',\n  field: 'ms-SearchBox-field'\n};\nexport function getStyles(props) {\n  var _a, _b, _c, _d, _e;\n\n  var theme = props.theme,\n      underlined = props.underlined,\n      disabled = props.disabled,\n      hasFocus = props.hasFocus,\n      className = props.className,\n      hasInput = props.hasInput,\n      disableAnimation = props.disableAnimation,\n      showIcon = props.showIcon;\n  var palette = theme.palette,\n      fonts = theme.fonts,\n      semanticColors = theme.semanticColors,\n      effects = theme.effects;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme); // placeholder style constants\n\n  var placeholderStyles = {\n    color: semanticColors.inputPlaceholderText,\n    opacity: 1\n  };\n  var inputIconAlt = palette.neutralSecondary;\n  var inputIconAltHovered = palette.neutralPrimary;\n  var inputBorderDisabled = palette.neutralLighter;\n  var inputBackgroundHovered = palette.neutralLighter;\n  var inputBackgroundDisabled = palette.neutralLighter;\n  return {\n    root: [classNames.root, fonts.medium, normalize, {\n      color: semanticColors.inputText,\n      backgroundColor: semanticColors.inputBackground,\n      display: 'flex',\n      flexDirection: 'row',\n      flexWrap: 'nowrap',\n      alignItems: 'stretch',\n      // The 1px top and bottom padding ensure the input field does not overlap the border\n      padding: '1px 0 1px 4px',\n      borderRadius: effects.roundedCorner2,\n      border: \"1px solid \" + semanticColors.inputBorder,\n      height: 32,\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        borderColor: 'WindowText'\n      }, _a[':hover'] = {\n        borderColor: semanticColors.inputBorderHovered,\n        selectors: (_b = {}, _b[HighContrastSelector] = {\n          borderColor: 'Highlight'\n        }, _b)\n      }, _a[\":hover .\" + classNames.iconContainer] = {\n        color: semanticColors.inputIconHovered\n      }, _a)\n    }, !hasFocus && hasInput && {\n      selectors: (_c = {}, _c[\":hover .\" + classNames.iconContainer] = {\n        width: 4\n      }, _c[\":hover .\" + classNames.icon] = {\n        opacity: 0,\n        pointerEvents: 'none'\n      }, _c)\n    }, hasFocus && ['is-active', {\n      position: 'relative'\n    }, getInputFocusStyle(semanticColors.inputFocusBorderAlt, underlined ? 0 : effects.roundedCorner2, underlined ? 'borderBottom' : 'border')], showIcon && [{\n      selectors: (_d = {}, _d[\":hover .\" + classNames.iconContainer] = {\n        width: 32\n      }, _d[\":hover .\" + classNames.icon] = {\n        opacity: 1\n      }, _d)\n    }], disabled && ['is-disabled', {\n      borderColor: inputBorderDisabled,\n      backgroundColor: inputBackgroundDisabled,\n      pointerEvents: 'none',\n      cursor: 'default',\n      selectors: (_e = {}, _e[HighContrastSelector] = {\n        borderColor: 'GrayText'\n      }, _e)\n    }], underlined && ['is-underlined', {\n      borderWidth: '0 0 1px 0',\n      borderRadius: 0,\n      // Underlined SearchBox has a larger padding left to vertically align with the waffle in product\n      padding: '1px 0 1px 8px'\n    }], underlined && disabled && {\n      backgroundColor: 'transparent'\n    }, hasInput && 'can-clear', className],\n    iconContainer: [classNames.iconContainer, {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      flexShrink: 0,\n      fontSize: 16,\n      width: 32,\n      textAlign: 'center',\n      color: semanticColors.inputIcon,\n      cursor: 'text'\n    }, hasFocus && {\n      width: 4\n    }, disabled && {\n      color: semanticColors.inputIconDisabled\n    }, !disableAnimation && {\n      transition: \"width \" + AnimationVariables.durationValue1\n    }, showIcon && hasFocus && {\n      width: 32\n    }],\n    icon: [classNames.icon, {\n      opacity: 1\n    }, hasFocus && {\n      opacity: 0,\n      pointerEvents: 'none'\n    }, !disableAnimation && {\n      transition: \"opacity \" + AnimationVariables.durationValue1 + \" 0s\"\n    }, showIcon && hasFocus && {\n      opacity: 1\n    }],\n    clearButton: [classNames.clearButton, {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'stretch',\n      cursor: 'pointer',\n      flexBasis: '32px',\n      flexShrink: 0,\n      padding: 0,\n      margin: '-1px 0px',\n      selectors: {\n        '&:hover .ms-Button': {\n          backgroundColor: inputBackgroundHovered\n        },\n        '&:hover .ms-Button-icon': {\n          color: inputIconAltHovered\n        },\n        '.ms-Button': {\n          borderRadius: getRTL(theme) ? '1px 0 0 1px' : '0 1px 1px 0'\n        },\n        '.ms-Button-icon': {\n          color: inputIconAlt\n        }\n      }\n    }],\n    field: [classNames.field, normalize, getPlaceholderStyles(placeholderStyles), {\n      backgroundColor: 'transparent',\n      border: 'none',\n      outline: 'none',\n      fontWeight: 'inherit',\n      fontFamily: 'inherit',\n      fontSize: 'inherit',\n      color: semanticColors.inputText,\n      flex: '1 1 0px',\n      // The default implicit value of 'auto' prevents the input from shrinking. Setting min-width to\n      // 0px allows the input element to shrink to fit the container.\n      minWidth: '0px',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      // This padding forces the text placement to round up.\n      paddingBottom: 0.5,\n      // This removes the IE specific clear button in the input since we implemented our own\n      selectors: {\n        '::-ms-clear': {\n          display: 'none'\n        }\n      }\n    }, disabled && {\n      color: semanticColors.disabledText\n    }]\n  };\n}","map":{"version":3,"mappings":"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","names":["HighContrastSelector","AnimationVariables","normalize","getPlaceholderStyles","getGlobalClassNames","getInputFocusStyle","getRTL","GlobalClassNames","root","iconContainer","icon","clearButton","field","getStyles","props","underlined","disabled","hasFocus","className","hasInput","disableAnimation","showIcon","theme","fonts","semanticColors","effects","classNames","placeholderStyles","color","inputPlaceholderText","opacity","inputIconAlt","palette","neutralSecondary","inputIconAltHovered","neutralPrimary","inputBorderDisabled","neutralLighter","inputBackgroundHovered","inputBackgroundDisabled","medium","inputText","backgroundColor","inputBackground","display","flexDirection","flexWrap","alignItems","padding","borderRadius","roundedCorner2","border","inputBorder","height","selectors","_a","borderColor","inputBorderHovered","_b","inputIconHovered","_c","width","pointerEvents","position","inputFocusBorderAlt","_d","cursor","_e","borderWidth","justifyContent","flexShrink","fontSize","textAlign","inputIcon","inputIconDisabled","transition","durationValue1","flexBasis","margin","outline","fontWeight","fontFamily","flex","minWidth","overflow","textOverflow","paddingBottom","disabledText"],"sources":["/home/runner/work/Reaction/Reaction/employee-info/node_modules/@fluentui/react/lib/components/src/components/SearchBox/SearchBox.styles.tsx"],"sourcesContent":["import {\n  HighContrastSelector,\n  AnimationVariables,\n  normalize,\n  getPlaceholderStyles,\n  getGlobalClassNames,\n  getInputFocusStyle,\n} from '../../Styling';\nimport { getRTL } from '../../Utilities';\nimport type { IStyle } from '../../Styling';\nimport type { ISearchBoxStyleProps, ISearchBoxStyles } from './SearchBox.types';\n\nconst GlobalClassNames = {\n  root: 'ms-SearchBox',\n  iconContainer: 'ms-SearchBox-iconContainer',\n  icon: 'ms-SearchBox-icon',\n  clearButton: 'ms-SearchBox-clearButton',\n  field: 'ms-SearchBox-field',\n};\n\nexport function getStyles(props: ISearchBoxStyleProps): ISearchBoxStyles {\n  const { theme, underlined, disabled, hasFocus, className, hasInput, disableAnimation, showIcon } = props;\n  const { palette, fonts, semanticColors, effects } = theme;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  // placeholder style constants\n  const placeholderStyles: IStyle = {\n    color: semanticColors.inputPlaceholderText,\n    opacity: 1,\n  };\n\n  const inputIconAlt = palette.neutralSecondary;\n  const inputIconAltHovered = palette.neutralPrimary;\n  const inputBorderDisabled = palette.neutralLighter;\n  const inputBackgroundHovered = palette.neutralLighter;\n  const inputBackgroundDisabled = palette.neutralLighter;\n\n  return {\n    root: [\n      classNames.root,\n      fonts.medium,\n      normalize,\n      {\n        color: semanticColors.inputText,\n        backgroundColor: semanticColors.inputBackground,\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'nowrap',\n        alignItems: 'stretch',\n        // The 1px top and bottom padding ensure the input field does not overlap the border\n        padding: '1px 0 1px 4px',\n        borderRadius: effects.roundedCorner2,\n        border: `1px solid ${semanticColors.inputBorder}`,\n        height: 32,\n        selectors: {\n          [HighContrastSelector]: {\n            borderColor: 'WindowText',\n          },\n          ':hover': {\n            borderColor: semanticColors.inputBorderHovered,\n            selectors: {\n              [HighContrastSelector]: {\n                borderColor: 'Highlight',\n              },\n            },\n          },\n          [`:hover .${classNames.iconContainer}`]: {\n            color: semanticColors.inputIconHovered,\n          },\n        },\n      },\n      !hasFocus &&\n        hasInput && {\n          selectors: {\n            [`:hover .${classNames.iconContainer}`]: {\n              width: 4,\n            },\n            [`:hover .${classNames.icon}`]: {\n              opacity: 0,\n              pointerEvents: 'none',\n            },\n          },\n        },\n      hasFocus && [\n        'is-active',\n        {\n          position: 'relative',\n        },\n        getInputFocusStyle(\n          semanticColors.inputFocusBorderAlt,\n          underlined ? 0 : effects.roundedCorner2,\n          underlined ? 'borderBottom' : 'border',\n        ),\n      ],\n      showIcon && [\n        {\n          selectors: {\n            [`:hover .${classNames.iconContainer}`]: {\n              width: 32,\n            },\n            [`:hover .${classNames.icon}`]: {\n              opacity: 1,\n            },\n          },\n        },\n      ],\n      disabled && [\n        'is-disabled',\n        {\n          borderColor: inputBorderDisabled,\n          backgroundColor: inputBackgroundDisabled,\n          pointerEvents: 'none',\n          cursor: 'default',\n          selectors: {\n            [HighContrastSelector]: {\n              borderColor: 'GrayText',\n            },\n          },\n        },\n      ],\n      underlined && [\n        'is-underlined',\n        {\n          borderWidth: '0 0 1px 0',\n          borderRadius: 0,\n          // Underlined SearchBox has a larger padding left to vertically align with the waffle in product\n          padding: '1px 0 1px 8px',\n        },\n      ],\n      underlined &&\n        disabled && {\n          backgroundColor: 'transparent',\n        },\n      hasInput && 'can-clear',\n      className,\n    ],\n    iconContainer: [\n      classNames.iconContainer,\n      {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        flexShrink: 0,\n        fontSize: 16,\n        width: 32,\n        textAlign: 'center',\n        color: semanticColors.inputIcon,\n        cursor: 'text',\n      },\n      hasFocus && {\n        width: 4,\n      },\n      disabled && {\n        color: semanticColors.inputIconDisabled,\n      },\n      !disableAnimation && {\n        transition: `width ${AnimationVariables.durationValue1}`,\n      },\n      showIcon &&\n        hasFocus && {\n          width: 32,\n        },\n    ],\n    icon: [\n      classNames.icon,\n      {\n        opacity: 1,\n      },\n      hasFocus && {\n        opacity: 0,\n        pointerEvents: 'none',\n      },\n      !disableAnimation && {\n        transition: `opacity ${AnimationVariables.durationValue1} 0s`,\n      },\n      showIcon &&\n        hasFocus && {\n          opacity: 1,\n        },\n    ],\n    clearButton: [\n      classNames.clearButton,\n      {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'stretch',\n        cursor: 'pointer',\n        flexBasis: '32px',\n        flexShrink: 0,\n        padding: 0,\n        margin: '-1px 0px',\n        selectors: {\n          '&:hover .ms-Button': {\n            backgroundColor: inputBackgroundHovered,\n          },\n          '&:hover .ms-Button-icon': {\n            color: inputIconAltHovered,\n          },\n          '.ms-Button': {\n            borderRadius: getRTL(theme) ? '1px 0 0 1px' : '0 1px 1px 0',\n          },\n          '.ms-Button-icon': {\n            color: inputIconAlt,\n          },\n        },\n      },\n    ],\n    field: [\n      classNames.field,\n      normalize,\n      getPlaceholderStyles(placeholderStyles),\n      {\n        backgroundColor: 'transparent',\n        border: 'none',\n        outline: 'none',\n        fontWeight: 'inherit',\n        fontFamily: 'inherit',\n        fontSize: 'inherit',\n        color: semanticColors.inputText,\n        flex: '1 1 0px',\n        // The default implicit value of 'auto' prevents the input from shrinking. Setting min-width to\n        // 0px allows the input element to shrink to fit the container.\n        minWidth: '0px',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        // This padding forces the text placement to round up.\n        paddingBottom: 0.5,\n        // This removes the IE specific clear button in the input since we implemented our own\n        selectors: {\n          '::-ms-clear': {\n            display: 'none',\n          },\n        },\n      },\n      disabled && {\n        color: semanticColors.disabledText,\n      },\n    ],\n  };\n}\n"]},"metadata":{},"sourceType":"module"}