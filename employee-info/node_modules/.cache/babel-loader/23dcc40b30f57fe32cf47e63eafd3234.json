{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { KeyCodes, getRTL, classNamesFunction, css, format } from '../../../Utilities';\nimport { FocusZone } from '../../../FocusZone';\nimport { Icon } from '../../../Icon';\nimport { usePrevious } from '@fluentui/react-hooks';\nimport { defaultCalendarNavigationIcons } from '../defaults';\nvar getClassNames = classNamesFunction();\nvar CELL_COUNT = 12;\nvar CELLS_PER_ROW = 4;\nvar DefaultCalendarYearStrings = {\n  prevRangeAriaLabel: undefined,\n  nextRangeAriaLabel: undefined\n};\n\nvar CalendarYearGridCell = function CalendarYearGridCell(props) {\n  var _a;\n\n  var _b;\n\n  var styles = props.styles,\n      theme = props.theme,\n      className = props.className,\n      highlightCurrentYear = props.highlightCurrentYear,\n      highlightSelectedYear = props.highlightSelectedYear,\n      year = props.year,\n      selected = props.selected,\n      disabled = props.disabled,\n      componentRef = props.componentRef,\n      onSelectYear = props.onSelectYear,\n      onRenderYear = props.onRenderYear;\n  var buttonRef = React.useRef(null);\n  React.useImperativeHandle(componentRef, function () {\n    return {\n      focus: function focus() {\n        var _a, _b;\n\n        (_b = (_a = buttonRef.current) === null || _a === void 0 ? void 0 : _a.focus) === null || _b === void 0 ? void 0 : _b.call(_a);\n      }\n    };\n  }, []);\n\n  var onClick = function onClick() {\n    onSelectYear === null || onSelectYear === void 0 ? void 0 : onSelectYear(year);\n  };\n\n  var onKeyDown = function onKeyDown(ev) {\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.enter) {\n      onSelectYear === null || onSelectYear === void 0 ? void 0 : onSelectYear(year);\n    }\n  };\n\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className,\n    highlightCurrent: highlightCurrentYear,\n    highlightSelected: highlightSelectedYear\n  });\n  return React.createElement(\"button\", {\n    className: css(classNames.itemButton, (_a = {}, _a[classNames.selected] = selected, _a[classNames.disabled] = disabled, _a)),\n    type: \"button\",\n    role: \"gridcell\",\n    onClick: !disabled ? onClick : undefined,\n    onKeyDown: !disabled ? onKeyDown : undefined,\n    disabled: disabled,\n    \"aria-selected\": selected,\n    ref: buttonRef\n  }, (_b = onRenderYear === null || onRenderYear === void 0 ? void 0 : onRenderYear(year)) !== null && _b !== void 0 ? _b : year);\n};\n\nCalendarYearGridCell.displayName = 'CalendarYearGridCell';\n\nvar CalendarYearGrid = function CalendarYearGrid(props) {\n  var styles = props.styles,\n      theme = props.theme,\n      className = props.className,\n      fromYear = props.fromYear,\n      toYear = props.toYear,\n      animationDirection = props.animationDirection,\n      animateBackwards = props.animateBackwards,\n      minYear = props.minYear,\n      maxYear = props.maxYear,\n      onSelectYear = props.onSelectYear,\n      selectedYear = props.selectedYear,\n      componentRef = props.componentRef;\n  var selectedCellRef = React.useRef(null);\n  var currentCellRef = React.useRef(null);\n  React.useImperativeHandle(componentRef, function () {\n    return {\n      focus: function focus() {\n        var _a, _b;\n\n        (_b = (_a = selectedCellRef.current || currentCellRef.current) === null || _a === void 0 ? void 0 : _a.focus) === null || _b === void 0 ? void 0 : _b.call(_a);\n      }\n    };\n  }, []);\n\n  var renderCell = function renderCell(yearToRender) {\n    var selected = yearToRender === selectedYear;\n    var disabled = minYear !== undefined && yearToRender < minYear || maxYear !== undefined && yearToRender > maxYear;\n    var current = yearToRender === new Date().getFullYear();\n    return React.createElement(CalendarYearGridCell, __assign({}, props, {\n      key: yearToRender,\n      year: yearToRender,\n      selected: selected,\n      current: current,\n      disabled: disabled,\n      onSelectYear: onSelectYear,\n      componentRef: selected ? selectedCellRef : current ? currentCellRef : undefined,\n      theme: theme\n    }));\n  };\n\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className,\n    animateBackwards: animateBackwards,\n    animationDirection: animationDirection\n  });\n\n  var onRenderYear = function onRenderYear(value) {\n    var _a, _b;\n\n    return (_b = (_a = props.onRenderYear) === null || _a === void 0 ? void 0 : _a.call(props, value)) !== null && _b !== void 0 ? _b : value;\n  };\n\n  var gridAriaLabel = onRenderYear(fromYear) + \" - \" + onRenderYear(toYear);\n  var year = fromYear;\n  var cells = [];\n\n  for (var i = 0; i < (toYear - fromYear + 1) / CELLS_PER_ROW; i++) {\n    cells.push([]);\n\n    for (var j = 0; j < CELLS_PER_ROW; j++) {\n      cells[i].push(renderCell(year));\n      year++;\n    }\n  }\n\n  return React.createElement(FocusZone, null, React.createElement(\"div\", {\n    className: classNames.gridContainer,\n    role: \"grid\",\n    \"aria-label\": gridAriaLabel\n  }, cells.map(function (cellRow, index) {\n    return React.createElement(\"div\", {\n      key: 'yearPickerRow_' + index + '_' + fromYear,\n      role: \"row\",\n      className: classNames.buttonRow\n    }, cellRow);\n  })));\n};\n\nCalendarYearGrid.displayName = 'CalendarYearGrid';\nvar CalendarYearNavDirection;\n\n(function (CalendarYearNavDirection) {\n  CalendarYearNavDirection[CalendarYearNavDirection[\"Previous\"] = 0] = \"Previous\";\n  CalendarYearNavDirection[CalendarYearNavDirection[\"Next\"] = 1] = \"Next\";\n})(CalendarYearNavDirection || (CalendarYearNavDirection = {}));\n\nvar CalendarYearNavArrow = function CalendarYearNavArrow(props) {\n  var _a;\n\n  var styles = props.styles,\n      theme = props.theme,\n      className = props.className,\n      _b = props.navigationIcons,\n      navigationIcons = _b === void 0 ? defaultCalendarNavigationIcons : _b,\n      _c = props.strings,\n      strings = _c === void 0 ? DefaultCalendarYearStrings : _c,\n      direction = props.direction,\n      onSelectPrev = props.onSelectPrev,\n      onSelectNext = props.onSelectNext,\n      fromYear = props.fromYear,\n      toYear = props.toYear,\n      maxYear = props.maxYear,\n      minYear = props.minYear;\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className\n  });\n  var ariaLabel = direction === CalendarYearNavDirection.Previous ? strings.prevRangeAriaLabel : strings.nextRangeAriaLabel;\n  var newRangeOffset = direction === CalendarYearNavDirection.Previous ? -CELL_COUNT : CELL_COUNT;\n  var newRange = {\n    fromYear: fromYear + newRangeOffset,\n    toYear: toYear + newRangeOffset\n  };\n  var ariaLabelString = ariaLabel ? typeof ariaLabel === 'string' ? ariaLabel : ariaLabel(newRange) : undefined;\n  var disabled = direction === CalendarYearNavDirection.Previous ? minYear !== undefined && fromYear < minYear : maxYear !== undefined && props.fromYear + CELL_COUNT > maxYear;\n\n  var onNavigate = function onNavigate() {\n    direction === CalendarYearNavDirection.Previous ? onSelectPrev === null || onSelectPrev === void 0 ? void 0 : onSelectPrev() : onSelectNext === null || onSelectNext === void 0 ? void 0 : onSelectNext();\n  };\n\n  var onKeyDown = function onKeyDown(ev) {\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.enter) {\n      onNavigate();\n    }\n  }; // can be condensed, but leaving verbose for clarity due to regressions\n\n\n  var isLeftNavigation = getRTL() ? direction === CalendarYearNavDirection.Next : direction === CalendarYearNavDirection.Previous;\n  return React.createElement(\"button\", {\n    className: css(classNames.navigationButton, (_a = {}, _a[classNames.disabled] = disabled, _a)),\n    onClick: !disabled ? onNavigate : undefined,\n    onKeyDown: !disabled ? onKeyDown : undefined,\n    type: \"button\",\n    title: ariaLabelString,\n    disabled: disabled\n  }, React.createElement(Icon, {\n    iconName: isLeftNavigation ? navigationIcons.leftNavigation : navigationIcons.rightNavigation\n  }));\n};\n\nCalendarYearNavArrow.displayName = 'CalendarYearNavArrow';\n\nvar CalendarYearNav = function CalendarYearNav(props) {\n  var styles = props.styles,\n      theme = props.theme,\n      className = props.className;\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className\n  });\n  return React.createElement(\"div\", {\n    className: classNames.navigationButtonsContainer\n  }, React.createElement(CalendarYearNavArrow, __assign({}, props, {\n    direction: CalendarYearNavDirection.Previous\n  })), React.createElement(CalendarYearNavArrow, __assign({}, props, {\n    direction: CalendarYearNavDirection.Next\n  })));\n};\n\nCalendarYearNav.displayName = 'CalendarYearNav';\n\nvar CalendarYearTitle = function CalendarYearTitle(props) {\n  var styles = props.styles,\n      theme = props.theme,\n      className = props.className,\n      fromYear = props.fromYear,\n      toYear = props.toYear,\n      _a = props.strings,\n      strings = _a === void 0 ? DefaultCalendarYearStrings : _a,\n      animateBackwards = props.animateBackwards,\n      animationDirection = props.animationDirection;\n\n  var onHeaderSelect = function onHeaderSelect() {\n    var _a;\n\n    (_a = props.onHeaderSelect) === null || _a === void 0 ? void 0 : _a.call(props, true);\n  };\n\n  var onHeaderKeyDown = function onHeaderKeyDown(ev) {\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.enter || ev.which === KeyCodes.space) {\n      onHeaderSelect();\n    }\n  };\n\n  var onRenderYear = function onRenderYear(year) {\n    var _a, _b;\n\n    return (_b = (_a = props.onRenderYear) === null || _a === void 0 ? void 0 : _a.call(props, year)) !== null && _b !== void 0 ? _b : year;\n  };\n\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className,\n    hasHeaderClickCallback: !!props.onHeaderSelect,\n    animateBackwards: animateBackwards,\n    animationDirection: animationDirection\n  });\n\n  if (props.onHeaderSelect) {\n    var rangeAriaLabel = strings.rangeAriaLabel;\n    var headerAriaLabelFormatString = strings.headerAriaLabelFormatString;\n    var currentDateRange = rangeAriaLabel ? typeof rangeAriaLabel === 'string' ? rangeAriaLabel : rangeAriaLabel(props) : undefined;\n    var ariaLabel = headerAriaLabelFormatString ? format(headerAriaLabelFormatString, currentDateRange) : currentDateRange;\n    return React.createElement(\"button\", {\n      className: classNames.currentItemButton,\n      onClick: onHeaderSelect,\n      onKeyDown: onHeaderKeyDown,\n      \"aria-label\": ariaLabel,\n      role: \"button\",\n      type: \"button\",\n      \"aria-atomic\": true,\n      \"aria-live\": \"polite\"\n    }, onRenderYear(fromYear), \" - \", onRenderYear(toYear));\n  }\n\n  return React.createElement(\"div\", {\n    className: classNames.current\n  }, onRenderYear(fromYear), \" - \", onRenderYear(toYear));\n};\n\nCalendarYearTitle.displayName = 'CalendarYearTitle';\n\nvar CalendarYearHeader = function CalendarYearHeader(props) {\n  var _a;\n\n  var styles = props.styles,\n      theme = props.theme,\n      className = props.className,\n      animateBackwards = props.animateBackwards,\n      animationDirection = props.animationDirection,\n      onRenderTitle = props.onRenderTitle;\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className,\n    hasHeaderClickCallback: !!props.onHeaderSelect,\n    animateBackwards: animateBackwards,\n    animationDirection: animationDirection\n  });\n  return React.createElement(\"div\", {\n    className: classNames.headerContainer\n  }, (_a = onRenderTitle === null || onRenderTitle === void 0 ? void 0 : onRenderTitle(props)) !== null && _a !== void 0 ? _a : React.createElement(CalendarYearTitle, __assign({}, props)), React.createElement(CalendarYearNav, __assign({}, props)));\n};\n\nCalendarYearHeader.displayName = 'CalendarYearHeader';\n\nfunction useAnimateBackwards(_a) {\n  var selectedYear = _a.selectedYear,\n      navigatedYear = _a.navigatedYear;\n  var rangeYear = selectedYear || navigatedYear || new Date().getFullYear();\n  var fromYear = Math.floor(rangeYear / 10) * 10;\n  var previousFromYear = usePrevious(fromYear);\n\n  if (!previousFromYear || previousFromYear === fromYear) {\n    return undefined;\n  } else if (previousFromYear > fromYear) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nvar NavigationDirection;\n\n(function (NavigationDirection) {\n  NavigationDirection[NavigationDirection[\"Previous\"] = 0] = \"Previous\";\n  NavigationDirection[NavigationDirection[\"Next\"] = 1] = \"Next\";\n})(NavigationDirection || (NavigationDirection = {}));\n\nfunction useYearRangeState(_a) {\n  var selectedYear = _a.selectedYear,\n      navigatedYear = _a.navigatedYear;\n\n  var _b = React.useReducer(function (state, action) {\n    return state + (action === NavigationDirection.Next ? CELL_COUNT : -CELL_COUNT);\n  }, undefined, function () {\n    var rangeYear = selectedYear || navigatedYear || new Date().getFullYear();\n    return Math.floor(rangeYear / 10) * 10;\n  }),\n      fromYear = _b[0],\n      navigate = _b[1];\n\n  var toYear = fromYear + CELL_COUNT - 1;\n\n  var onNavNext = function onNavNext() {\n    return navigate(NavigationDirection.Next);\n  };\n\n  var onNavPrevious = function onNavPrevious() {\n    return navigate(NavigationDirection.Previous);\n  };\n\n  return [fromYear, toYear, onNavNext, onNavPrevious];\n}\n\nexport var CalendarYearBase = function CalendarYearBase(props) {\n  var animateBackwards = useAnimateBackwards(props);\n\n  var _a = useYearRangeState(props),\n      fromYear = _a[0],\n      toYear = _a[1],\n      onNavNext = _a[2],\n      onNavPrevious = _a[3];\n\n  var gridRef = React.useRef(null);\n  React.useImperativeHandle(props.componentRef, function () {\n    return {\n      focus: function focus() {\n        var _a, _b;\n\n        (_b = (_a = gridRef.current) === null || _a === void 0 ? void 0 : _a.focus) === null || _b === void 0 ? void 0 : _b.call(_a);\n      }\n    };\n  });\n  var styles = props.styles,\n      theme = props.theme,\n      className = props.className;\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className\n  });\n  return React.createElement(\"div\", {\n    className: classNames.root\n  }, React.createElement(CalendarYearHeader, __assign({}, props, {\n    fromYear: fromYear,\n    toYear: toYear,\n    onSelectPrev: onNavPrevious,\n    onSelectNext: onNavNext,\n    animateBackwards: animateBackwards\n  })), React.createElement(CalendarYearGrid, __assign({}, props, {\n    fromYear: fromYear,\n    toYear: toYear,\n    animateBackwards: animateBackwards,\n    componentRef: gridRef\n  })));\n};\nCalendarYearBase.displayName = 'CalendarYearBase';","map":{"version":3,"mappings":"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","names":["React","KeyCodes","getRTL","classNamesFunction","css","format","FocusZone","Icon","usePrevious","defaultCalendarNavigationIcons","getClassNames","CELL_COUNT","CELLS_PER_ROW","DefaultCalendarYearStrings","prevRangeAriaLabel","undefined","nextRangeAriaLabel","CalendarYearGridCell","props","theme","className","highlightCurrentYear","highlightSelectedYear","year","selected","disabled","componentRef","onSelectYear","onRenderYear","buttonRef","useRef","useImperativeHandle","focus","current","_a","_b","onClick","onKeyDown","ev","which","enter","classNames","styles","highlightCurrent","highlightSelected","itemButton","type","role","ref","displayName","CalendarYearGrid","fromYear","toYear","animationDirection","animateBackwards","minYear","maxYear","selectedYear","selectedCellRef","currentCellRef","renderCell","yearToRender","Date","getFullYear","__assign","key","value","gridAriaLabel","cells","i","push","j","gridContainer","map","cellRow","index","buttonRow","CalendarYearNavDirection","CalendarYearNavArrow","navigationIcons","_c","strings","direction","onSelectPrev","onSelectNext","ariaLabel","Previous","newRangeOffset","newRange","ariaLabelString","onNavigate","isLeftNavigation","Next","navigationButton","title","iconName","leftNavigation","rightNavigation","CalendarYearNav","navigationButtonsContainer","CalendarYearTitle","onHeaderSelect","onHeaderKeyDown","space","hasHeaderClickCallback","rangeAriaLabel","headerAriaLabelFormatString","currentDateRange","currentItemButton","CalendarYearHeader","onRenderTitle","headerContainer","useAnimateBackwards","navigatedYear","rangeYear","Math","floor","previousFromYear","NavigationDirection","useYearRangeState","useReducer","state","action","navigate","onNavNext","onNavPrevious","CalendarYearBase","gridRef","root"],"sources":["/home/runner/work/Reaction/Reaction/employee-info/node_modules/@fluentui/react/lib/components/Calendar/src/components/Calendar/CalendarYear/CalendarYear.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport { KeyCodes, getRTL, classNamesFunction, css, format } from '../../../Utilities';\nimport { FocusZone } from '../../../FocusZone';\nimport { Icon } from '../../../Icon';\nimport { usePrevious } from '@fluentui/react-hooks';\nimport { defaultCalendarNavigationIcons } from '../defaults';\nimport type {\n  ICalendarYearStrings,\n  ICalendarYearProps,\n  ICalendarYearRange,\n  ICalendarYearHeaderProps,\n  ICalendarYearStyleProps,\n  ICalendarYearStyles,\n} from './CalendarYear.types';\nimport type { IRefObject } from '../../../Utilities';\n\nconst getClassNames = classNamesFunction<ICalendarYearStyleProps, ICalendarYearStyles>();\n\nconst CELL_COUNT = 12;\nconst CELLS_PER_ROW = 4;\n\nconst DefaultCalendarYearStrings: ICalendarYearStrings = {\n  prevRangeAriaLabel: undefined,\n  nextRangeAriaLabel: undefined,\n};\ninterface ICalendarYearGrid {\n  focus(): void;\n}\n\ninterface ICalendarYearGridCellProps extends ICalendarYearProps {\n  year: number;\n  current?: boolean;\n  selected?: boolean;\n  disabled?: boolean;\n  onSelectYear?: (year: number) => void;\n  onRenderYear?: (year: number) => React.ReactNode;\n}\n\ninterface ICalendarYearGridProps extends ICalendarYearProps, ICalendarYearRange {\n  selectedYear?: number;\n  animateBackwards?: boolean;\n  componentRef?: IRefObject<ICalendarYearGridCell>;\n}\n\ninterface ICalendarYearGridCell {\n  focus(): void;\n}\n\nconst CalendarYearGridCell: React.FunctionComponent<ICalendarYearGridCellProps> = props => {\n  const {\n    styles,\n    theme,\n    className,\n    highlightCurrentYear,\n    highlightSelectedYear,\n    year,\n    selected,\n    disabled,\n    componentRef,\n    onSelectYear,\n    onRenderYear,\n  } = props;\n\n  const buttonRef = React.useRef<HTMLButtonElement>(null);\n\n  React.useImperativeHandle(\n    componentRef,\n    () => ({\n      focus() {\n        buttonRef.current?.focus?.();\n      },\n    }),\n    [],\n  );\n\n  const onClick = () => {\n    onSelectYear?.(year);\n  };\n\n  const onKeyDown = (ev: React.KeyboardEvent<HTMLElement>) => {\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.enter) {\n      onSelectYear?.(year);\n    }\n  };\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className: className,\n    highlightCurrent: highlightCurrentYear,\n    highlightSelected: highlightSelectedYear,\n  });\n\n  return (\n    <button\n      className={css(classNames.itemButton, {\n        [classNames.selected]: selected,\n        [classNames.disabled]: disabled,\n      })}\n      type=\"button\"\n      role=\"gridcell\"\n      onClick={!disabled ? onClick : undefined}\n      onKeyDown={!disabled ? onKeyDown : undefined}\n      disabled={disabled}\n      aria-selected={selected}\n      ref={buttonRef}\n    >\n      {onRenderYear?.(year) ?? year}\n    </button>\n  );\n};\nCalendarYearGridCell.displayName = 'CalendarYearGridCell';\n\nconst CalendarYearGrid: React.FunctionComponent<ICalendarYearGridProps> = props => {\n  const {\n    styles,\n    theme,\n    className,\n    fromYear,\n    toYear,\n    animationDirection,\n    animateBackwards,\n    minYear,\n    maxYear,\n    onSelectYear,\n    selectedYear,\n    componentRef,\n  } = props;\n\n  const selectedCellRef = React.useRef<ICalendarYearGridCell>(null);\n  const currentCellRef = React.useRef<ICalendarYearGridCell>(null);\n\n  React.useImperativeHandle(\n    componentRef,\n    () => ({\n      focus() {\n        (selectedCellRef.current || currentCellRef.current)?.focus?.();\n      },\n    }),\n    [],\n  );\n\n  const renderCell = (yearToRender: number): React.ReactNode => {\n    const selected = yearToRender === selectedYear;\n    const disabled =\n      (minYear !== undefined && yearToRender < minYear) || (maxYear !== undefined && yearToRender > maxYear);\n    const current = yearToRender === new Date().getFullYear();\n\n    return (\n      <CalendarYearGridCell\n        {...props}\n        key={yearToRender}\n        year={yearToRender}\n        selected={selected}\n        current={current}\n        disabled={disabled}\n        onSelectYear={onSelectYear}\n        componentRef={selected ? selectedCellRef : current ? currentCellRef : undefined}\n        theme={theme}\n      />\n    );\n  };\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className: className,\n    animateBackwards: animateBackwards,\n    animationDirection: animationDirection,\n  });\n\n  const onRenderYear = (value: number) => {\n    return props.onRenderYear?.(value) ?? value;\n  };\n\n  const gridAriaLabel = `${onRenderYear(fromYear)} - ${onRenderYear(toYear)}`;\n\n  let year = fromYear;\n  const cells: React.ReactNode[][] = [];\n\n  for (let i = 0; i < (toYear - fromYear + 1) / CELLS_PER_ROW; i++) {\n    cells.push([]);\n    for (let j = 0; j < CELLS_PER_ROW; j++) {\n      cells[i].push(renderCell(year));\n      year++;\n    }\n  }\n\n  return (\n    <FocusZone>\n      <div className={classNames.gridContainer} role=\"grid\" aria-label={gridAriaLabel}>\n        {cells.map((cellRow: React.ReactNode[], index: number) => {\n          return (\n            <div key={'yearPickerRow_' + index + '_' + fromYear} role=\"row\" className={classNames.buttonRow}>\n              {...cellRow}\n            </div>\n          );\n        })}\n      </div>\n    </FocusZone>\n  );\n};\nCalendarYearGrid.displayName = 'CalendarYearGrid';\n\nconst enum CalendarYearNavDirection {\n  Previous,\n  Next,\n}\n\ninterface ICalendarYearNavArrowProps extends ICalendarYearHeaderProps {\n  direction: CalendarYearNavDirection;\n}\n\nconst CalendarYearNavArrow: React.FunctionComponent<ICalendarYearNavArrowProps> = props => {\n  const {\n    styles,\n    theme,\n    className,\n    navigationIcons = defaultCalendarNavigationIcons,\n    strings = DefaultCalendarYearStrings,\n    direction,\n    onSelectPrev,\n    onSelectNext,\n    fromYear,\n    toYear,\n    maxYear,\n    minYear,\n  } = props;\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className: className,\n  });\n\n  const ariaLabel =\n    direction === CalendarYearNavDirection.Previous ? strings.prevRangeAriaLabel : strings.nextRangeAriaLabel;\n  const newRangeOffset = direction === CalendarYearNavDirection.Previous ? -CELL_COUNT : CELL_COUNT;\n  const newRange = { fromYear: fromYear + newRangeOffset, toYear: toYear + newRangeOffset };\n  const ariaLabelString = ariaLabel ? (typeof ariaLabel === 'string' ? ariaLabel : ariaLabel(newRange)) : undefined;\n  const disabled =\n    direction === CalendarYearNavDirection.Previous\n      ? minYear !== undefined && fromYear < minYear\n      : maxYear !== undefined && props.fromYear + CELL_COUNT > maxYear;\n\n  const onNavigate = () => {\n    direction === CalendarYearNavDirection.Previous ? onSelectPrev?.() : onSelectNext?.();\n  };\n\n  const onKeyDown = (ev: React.KeyboardEvent<HTMLElement>) => {\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.enter) {\n      onNavigate();\n    }\n  };\n\n  // can be condensed, but leaving verbose for clarity due to regressions\n  const isLeftNavigation = getRTL()\n    ? direction === CalendarYearNavDirection.Next\n    : direction === CalendarYearNavDirection.Previous;\n\n  return (\n    <button\n      className={css(classNames.navigationButton, {\n        [classNames.disabled]: disabled,\n      })}\n      onClick={!disabled ? onNavigate : undefined}\n      onKeyDown={!disabled ? onKeyDown : undefined}\n      type=\"button\"\n      title={ariaLabelString}\n      disabled={disabled}\n    >\n      <Icon iconName={isLeftNavigation ? navigationIcons.leftNavigation : navigationIcons.rightNavigation} />\n    </button>\n  );\n};\nCalendarYearNavArrow.displayName = 'CalendarYearNavArrow';\n\nconst CalendarYearNav: React.FunctionComponent<ICalendarYearHeaderProps> = props => {\n  const { styles, theme, className } = props;\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className: className,\n  });\n\n  return (\n    <div className={classNames.navigationButtonsContainer}>\n      <CalendarYearNavArrow {...props} direction={CalendarYearNavDirection.Previous} />\n      <CalendarYearNavArrow {...props} direction={CalendarYearNavDirection.Next} />\n    </div>\n  );\n};\nCalendarYearNav.displayName = 'CalendarYearNav';\n\nconst CalendarYearTitle: React.FunctionComponent<ICalendarYearHeaderProps> = props => {\n  const {\n    styles,\n    theme,\n    className,\n    fromYear,\n    toYear,\n    strings = DefaultCalendarYearStrings,\n    animateBackwards,\n    animationDirection,\n  } = props;\n\n  const onHeaderSelect = () => {\n    props.onHeaderSelect?.(true);\n  };\n\n  const onHeaderKeyDown = (ev: React.KeyboardEvent<HTMLElement>) => {\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.enter || ev.which === KeyCodes.space) {\n      onHeaderSelect();\n    }\n  };\n\n  const onRenderYear = (year: number) => {\n    return props.onRenderYear?.(year) ?? year;\n  };\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className: className,\n    hasHeaderClickCallback: !!props.onHeaderSelect,\n    animateBackwards: animateBackwards,\n    animationDirection: animationDirection,\n  });\n\n  if (props.onHeaderSelect) {\n    const rangeAriaLabel = strings.rangeAriaLabel;\n    const headerAriaLabelFormatString = strings.headerAriaLabelFormatString;\n    const currentDateRange = rangeAriaLabel\n      ? typeof rangeAriaLabel === 'string'\n        ? rangeAriaLabel\n        : rangeAriaLabel(props)\n      : undefined;\n\n    const ariaLabel = headerAriaLabelFormatString\n      ? format(headerAriaLabelFormatString, currentDateRange)\n      : currentDateRange;\n\n    return (\n      <button\n        className={classNames.currentItemButton}\n        onClick={onHeaderSelect}\n        onKeyDown={onHeaderKeyDown}\n        aria-label={ariaLabel}\n        role=\"button\"\n        type=\"button\"\n        aria-atomic={true}\n        // if this component rerenders when text changes, aria-live will not be announced, so make key consistent\n        aria-live=\"polite\"\n      >\n        {onRenderYear(fromYear)} - {onRenderYear(toYear)}\n      </button>\n    );\n  }\n\n  return (\n    <div className={classNames.current}>\n      {onRenderYear(fromYear)} - {onRenderYear(toYear)}\n    </div>\n  );\n};\nCalendarYearTitle.displayName = 'CalendarYearTitle';\n\nconst CalendarYearHeader: React.FunctionComponent<ICalendarYearHeaderProps> = props => {\n  const { styles, theme, className, animateBackwards, animationDirection, onRenderTitle } = props;\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className: className,\n    hasHeaderClickCallback: !!props.onHeaderSelect,\n    animateBackwards: animateBackwards,\n    animationDirection: animationDirection,\n  });\n\n  return (\n    <div className={classNames.headerContainer}>\n      {onRenderTitle?.(props) ?? <CalendarYearTitle {...props} />}\n      <CalendarYearNav {...props} />\n    </div>\n  );\n};\nCalendarYearHeader.displayName = 'CalendarYearHeader';\n\nfunction useAnimateBackwards({ selectedYear, navigatedYear }: ICalendarYearProps) {\n  const rangeYear = selectedYear || navigatedYear || new Date().getFullYear();\n  const fromYear = Math.floor(rangeYear / 10) * 10;\n\n  const previousFromYear = usePrevious(fromYear);\n\n  if (!previousFromYear || previousFromYear === fromYear) {\n    return undefined;\n  } else if (previousFromYear > fromYear) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nconst enum NavigationDirection {\n  Previous,\n  Next,\n}\n\nfunction useYearRangeState({ selectedYear, navigatedYear }: ICalendarYearProps) {\n  const [fromYear, navigate] = React.useReducer(\n    (state: number, action: NavigationDirection): number => {\n      return state + (action === NavigationDirection.Next ? CELL_COUNT : -CELL_COUNT);\n    },\n    undefined,\n    () => {\n      const rangeYear = selectedYear || navigatedYear || new Date().getFullYear();\n      return Math.floor(rangeYear / 10) * 10;\n    },\n  );\n  const toYear = fromYear + CELL_COUNT - 1;\n\n  const onNavNext = () => navigate(NavigationDirection.Next);\n  const onNavPrevious = () => navigate(NavigationDirection.Previous);\n\n  return [fromYear, toYear, onNavNext, onNavPrevious] as const;\n}\n\nexport const CalendarYearBase: React.FunctionComponent<ICalendarYearProps> = props => {\n  const animateBackwards = useAnimateBackwards(props);\n  const [fromYear, toYear, onNavNext, onNavPrevious] = useYearRangeState(props);\n\n  const gridRef = React.useRef<ICalendarYearGrid>(null);\n\n  React.useImperativeHandle(props.componentRef, () => ({\n    focus() {\n      gridRef.current?.focus?.();\n    },\n  }));\n\n  const { styles, theme, className } = props;\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className: className,\n  });\n\n  return (\n    <div className={classNames.root}>\n      <CalendarYearHeader\n        {...props}\n        fromYear={fromYear}\n        toYear={toYear}\n        onSelectPrev={onNavPrevious}\n        onSelectNext={onNavNext}\n        animateBackwards={animateBackwards}\n      />\n      <CalendarYearGrid\n        {...props}\n        fromYear={fromYear}\n        toYear={toYear}\n        animateBackwards={animateBackwards}\n        componentRef={gridRef}\n      />\n    </div>\n  );\n};\nCalendarYearBase.displayName = 'CalendarYearBase';\n"]},"metadata":{},"sourceType":"module"}