{"ast":null,"code":"import _createClass from\"/home/runner/work/Reaction/Reaction/employee-info/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _classCallCheck from\"/home/runner/work/Reaction/Reaction/employee-info/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import{http_request}from\"./parse\";var Employee=/*#__PURE__*/_createClass(function Employee(){var _ref=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},emp_name=_ref.emp_name,title=_ref.title,phone=_ref.phone,address=_ref.address,city=_ref.city,region=_ref.region,postalCode=_ref.postalCode,country=_ref.country,bio=_ref.bio;_classCallCheck(this,Employee);this.name=emp_name;this.title=title;this.phone=phone;this.address=address;this.city=city;this.region=region;this.country=country;this.bio=bio;this.postalCode=postalCode;});var EmployeeData=/*#__PURE__*/function(){function EmployeeData(){var _this=this;_classCallCheck(this,EmployeeData);this.url=\"https://services.odata.org/V4/Northwind/Northwind.svc/Employees\";this._emps=[];this.http=new http_request();this.http.get(this.url).then(function(res){if(res.status!=200){console.log(\"Error Occurect while fetching employee data: \".concat(res.status,\" \").concat(res.statusText));}else{res.data['value'].forEach(function(emp){_this._emps.push(new Employee({emp_name:\"\".concat(emp['TitleOfCourtesy']).concat(emp['FirstName'],\" \").concat(emp['LastName']),title:emp['Title'],phone:emp['HomePhone'],address:emp['Address'],city:emp['City'],region:emp['Region'],country:emp['Country'],bio:emp['Notes'],postalCode:emp['PostalCode']}));});}}).catch(function(err){return console.log(\"[E] Error occured while fetching data: \".concat(err));});}_createClass(EmployeeData,[{key:\"allEmployees\",value:function allEmployees(){return this._emps;}}]);return EmployeeData;}();export{Employee,EmployeeData};","map":{"version":3,"sources":["/home/runner/work/Reaction/Reaction/employee-info/src/backend/json.js"],"names":["http_request","Employee","emp_name","title","phone","address","city","region","postalCode","country","bio","name","EmployeeData","url","_emps","http","get","then","res","status","console","log","statusText","data","forEach","emp","push","catch","err"],"mappings":"4QAAA,OAASA,YAAT,KAA6B,SAA7B,C,GAGMC,CAAAA,Q,2BAYF,mBAA8F,oEAAJ,EAAI,CAAhFC,QAAgF,MAAhFA,QAAgF,CAAtEC,KAAsE,MAAtEA,KAAsE,CAA/DC,KAA+D,MAA/DA,KAA+D,CAAxDC,OAAwD,MAAxDA,OAAwD,CAA/CC,IAA+C,MAA/CA,IAA+C,CAAzCC,MAAyC,MAAzCA,MAAyC,CAAjCC,UAAiC,MAAjCA,UAAiC,CAArBC,OAAqB,MAArBA,OAAqB,CAAZC,GAAY,MAAZA,GAAY,gCAC1F,KAAKC,IAAL,CAAYT,QAAZ,CACA,KAAKC,KAAL,CAAaA,KAAb,CACA,KAAKC,KAAL,CAAaA,KAAb,CACA,KAAKC,OAAL,CAAeA,OAAf,CACA,KAAKC,IAAL,CAAYA,IAAZ,CACA,KAAKC,MAAL,CAAcA,MAAd,CACA,KAAKE,OAAL,CAAeA,OAAf,CACA,KAAKC,GAAL,CAAWA,GAAX,CACA,KAAKF,UAAL,CAAkBA,UAAlB,CACH,C,KAGCI,CAAAA,Y,yBAKF,uBAAc,wDAHdC,GAGc,CAHR,iEAGQ,MAFdC,KAEc,CAFN,EAEM,CACV,KAAKC,IAAL,CAAY,GAAIf,CAAAA,YAAJ,EAAZ,CACA,KAAKe,IAAL,CAAUC,GAAV,CAAc,KAAKH,GAAnB,EAAwBI,IAAxB,CAA6B,SAACC,GAAD,CAAS,CAClC,GAAIA,GAAG,CAACC,MAAJ,EAAc,GAAlB,CAAuB,CACnBC,OAAO,CAACC,GAAR,wDAA4DH,GAAG,CAACC,MAAhE,aAA0ED,GAAG,CAACI,UAA9E,GACH,CAFD,IAEO,CACHJ,GAAG,CAACK,IAAJ,CAAS,OAAT,EAAkBC,OAAlB,CAA0B,SAACC,GAAD,CAAS,CAC/B,KAAI,CAACX,KAAL,CAAWY,IAAX,CAAgB,GAAIzB,CAAAA,QAAJ,CAAa,CACzBC,QAAQ,WAAKuB,GAAG,CAAC,iBAAD,CAAR,SAA8BA,GAAG,CAAC,WAAD,CAAjC,aAAkDA,GAAG,CAAC,UAAD,CAArD,CADiB,CAEzBtB,KAAK,CAAEsB,GAAG,CAAC,OAAD,CAFe,CAGzBrB,KAAK,CAAEqB,GAAG,CAAC,WAAD,CAHe,CAIzBpB,OAAO,CAAEoB,GAAG,CAAC,SAAD,CAJa,CAKzBnB,IAAI,CAAEmB,GAAG,CAAC,MAAD,CALgB,CAMzBlB,MAAM,CAAEkB,GAAG,CAAC,QAAD,CANc,CAOzBhB,OAAO,CAAEgB,GAAG,CAAC,SAAD,CAPa,CAQzBf,GAAG,CAAEe,GAAG,CAAC,OAAD,CARiB,CASzBjB,UAAU,CAACiB,GAAG,CAAC,YAAD,CATW,CAAb,CAAhB,EAYH,CAbD,EAcH,CACJ,CAnBD,EAmBGE,KAnBH,CAmBS,SAACC,GAAD,QAASR,CAAAA,OAAO,CAACC,GAAR,kDAAsDO,GAAtD,EAAT,EAnBT,EAoBH,C,qDAGD,uBAAe,CACX,MAAO,MAAKd,KAAZ,CACH,C,4BAML,OAASb,QAAT,CAAmBW,YAAnB","sourcesContent":["import { http_request } from \"./parse\";\n\n\nclass Employee {\n    name;\n    titleOfCourtsey;\n    title;\n    phone;\n    address;\n    city;\n    region;\n    country;\n    bio;\n    postalCode;\n\n    constructor({ emp_name, title, phone, address, city, region, postalCode, country, bio } = {}) {\n        this.name = emp_name;\n        this.title = title;\n        this.phone = phone;\n        this.address = address;\n        this.city = city;\n        this.region = region;\n        this.country = country;\n        this.bio = bio;\n        this.postalCode = postalCode;\n    }\n}\n\nclass EmployeeData {\n    http;\n    url = \"https://services.odata.org/V4/Northwind/Northwind.svc/Employees\"\n    _emps = []\n\n    constructor() {\n        this.http = new http_request();\n        this.http.get(this.url).then((res) => {\n            if (res.status != 200) {\n                console.log(`Error Occurect while fetching employee data: ${res.status} ${res.statusText}`)\n            } else {\n                res.data['value'].forEach((emp) => {\n                    this._emps.push(new Employee({\n                        emp_name: `${emp['TitleOfCourtesy']}${emp['FirstName']} ${emp['LastName']}`,\n                        title: emp['Title'],\n                        phone: emp['HomePhone'],\n                        address: emp['Address'],\n                        city: emp['City'],\n                        region: emp['Region'],\n                        country: emp['Country'],\n                        bio: emp['Notes'],\n                        postalCode:emp['PostalCode']\n                    }\n                    ))\n                });\n            }\n        }).catch((err) => console.log(`[E] Error occured while fetching data: ${err}`));\n    }\n\n\n    allEmployees() {\n        return this._emps;\n    }\n}\n\n\n\n\nexport { Employee, EmployeeData }\n\n\n"]},"metadata":{},"sourceType":"module"}