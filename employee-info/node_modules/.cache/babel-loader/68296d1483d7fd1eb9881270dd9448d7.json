{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { AnimationClassNames, AnimationStyles, HighContrastSelector, getFocusStyle, getGlobalClassNames, FontWeights, getHighContrastNoAdjustStyle } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\nimport { GlobalClassNames as LinkGlobalClassNames } from '../../components/Link/Link.styles';\nexport var DetailsRowGlobalClassNames = {\n  root: 'ms-DetailsRow',\n  // TODO: in Fabric 7.0 lowercase the 'Compact' for consistency across other components.\n  compact: 'ms-DetailsList--Compact',\n  cell: 'ms-DetailsRow-cell',\n  cellAnimation: 'ms-DetailsRow-cellAnimation',\n  cellCheck: 'ms-DetailsRow-cellCheck',\n  check: 'ms-DetailsRow-check',\n  cellMeasurer: 'ms-DetailsRow-cellMeasurer',\n  listCellFirstChild: 'ms-List-cell:first-child',\n  isContentUnselectable: 'is-contentUnselectable',\n  isSelected: 'is-selected',\n  isCheckVisible: 'is-check-visible',\n  isRowHeader: 'is-row-header',\n  fields: 'ms-DetailsRow-fields'\n};\nvar IsFocusableSelector = \"[data-is-focusable='true']\";\nexport var DEFAULT_CELL_STYLE_PROPS = {\n  cellLeftPadding: 12,\n  cellRightPadding: 8,\n  cellExtraRightPadding: 24\n}; // Source of default row heights to share.\n\nexport var DEFAULT_ROW_HEIGHTS = {\n  rowHeight: 42,\n  compactRowHeight: 32\n}; // Constant values\n\nvar values = __assign(__assign({}, DEFAULT_ROW_HEIGHTS), {\n  rowVerticalPadding: 11,\n  compactRowVerticalPadding: 6\n});\n\nexport var getDetailsRowStyles = function getDetailsRowStyles(props) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\n\n  var theme = props.theme,\n      isSelected = props.isSelected,\n      canSelect = props.canSelect,\n      droppingClassName = props.droppingClassName,\n      anySelected = props.anySelected,\n      isCheckVisible = props.isCheckVisible,\n      checkboxCellClassName = props.checkboxCellClassName,\n      compact = props.compact,\n      className = props.className,\n      _q = props.cellStyleProps,\n      cellStyleProps = _q === void 0 ? DEFAULT_CELL_STYLE_PROPS : _q,\n      enableUpdateAnimations = props.enableUpdateAnimations,\n      disabled = props.disabled;\n  var palette = theme.palette,\n      fonts = theme.fonts;\n  var neutralPrimary = palette.neutralPrimary,\n      white = palette.white,\n      neutralSecondary = palette.neutralSecondary,\n      neutralLighter = palette.neutralLighter,\n      neutralLight = palette.neutralLight,\n      neutralDark = palette.neutralDark,\n      neutralQuaternaryAlt = palette.neutralQuaternaryAlt;\n  var _r = theme.semanticColors,\n      focusBorder = _r.focusBorder,\n      focusedLinkColor = _r.linkHovered;\n  var classNames = getGlobalClassNames(DetailsRowGlobalClassNames, theme);\n  var colors = {\n    // Default\n    defaultHeaderText: neutralPrimary,\n    defaultMetaText: neutralSecondary,\n    defaultBackground: white,\n    // Default Hover\n    defaultHoverHeaderText: neutralDark,\n    defaultHoverMetaText: neutralPrimary,\n    defaultHoverBackground: neutralLighter,\n    // Selected\n    selectedHeaderText: neutralDark,\n    selectedMetaText: neutralPrimary,\n    selectedBackground: neutralLight,\n    // Selected Hover\n    selectedHoverHeaderText: neutralDark,\n    selectedHoverMetaText: neutralPrimary,\n    selectedHoverBackground: neutralQuaternaryAlt,\n    // Focus\n    focusHeaderText: neutralDark,\n    focusMetaText: neutralPrimary,\n    focusBackground: neutralLight,\n    focusHoverBackground: neutralQuaternaryAlt\n  };\n  var rowHighContrastFocus = {\n    top: 2,\n    right: 2,\n    bottom: 2,\n    left: 2\n  }; // Selected row styles\n\n  var selectedStyles = [getFocusStyle(theme, {\n    inset: -1,\n    borderColor: focusBorder,\n    outlineColor: white,\n    highContrastStyle: rowHighContrastFocus\n  }), classNames.isSelected, {\n    color: colors.selectedMetaText,\n    background: colors.selectedBackground,\n    borderBottom: \"1px solid \" + white,\n    selectors: (_a = {\n      '&:before': {\n        position: 'absolute',\n        display: 'block',\n        top: -1,\n        height: 1,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        content: '',\n        borderTop: \"1px solid \" + white\n      }\n    }, _a[\".\" + classNames.cell + \" > .\" + LinkGlobalClassNames.root] = {\n      color: focusedLinkColor,\n      selectors: (_b = {}, _b[HighContrastSelector] = {\n        color: 'HighlightText'\n      }, _b)\n    }, // Selected State hover\n    _a['&:hover'] = {\n      background: colors.selectedHoverBackground,\n      color: colors.selectedHoverMetaText,\n      selectors: (_c = {}, // Selected State hover meta cell\n      _c[HighContrastSelector] = {\n        background: 'Highlight',\n        selectors: (_d = {}, _d[\".\" + classNames.cell] = {\n          color: 'HighlightText'\n        }, _d[\".\" + classNames.cell + \" > .\" + LinkGlobalClassNames.root] = {\n          forcedColorAdjust: 'none',\n          color: 'HighlightText'\n        }, _d)\n      }, // Selected State hover Header cell\n      _c[\".\" + classNames.isRowHeader] = {\n        color: colors.selectedHoverHeaderText,\n        selectors: (_e = {}, _e[HighContrastSelector] = {\n          color: 'HighlightText'\n        }, _e)\n      }, _c)\n    }, // Focus state\n    _a['&:focus'] = {\n      background: colors.focusBackground,\n      selectors: (_f = {}, // Selected State hover meta cell\n      _f[\".\" + classNames.cell] = {\n        color: colors.focusMetaText,\n        selectors: (_g = {}, _g[HighContrastSelector] = {\n          color: 'HighlightText',\n          selectors: {\n            '> a': {\n              color: 'HighlightText'\n            }\n          }\n        }, _g)\n      }, // Row header cell\n      _f[\".\" + classNames.isRowHeader] = {\n        color: colors.focusHeaderText,\n        selectors: (_h = {}, _h[HighContrastSelector] = {\n          color: 'HighlightText'\n        }, _h)\n      }, // Ensure high-contrast mode overrides default focus background\n      _f[HighContrastSelector] = {\n        background: 'Highlight'\n      }, _f)\n    }, _a[HighContrastSelector] = __assign(__assign({\n      background: 'Highlight',\n      color: 'HighlightText'\n    }, getHighContrastNoAdjustStyle()), {\n      selectors: {\n        a: {\n          color: 'HighlightText'\n        }\n      }\n    }), // Focus and hover state\n    _a['&:focus:hover'] = {\n      background: colors.focusHoverBackground\n    }, _a)\n  }];\n  var cannotSelectStyles = [classNames.isContentUnselectable, {\n    userSelect: 'none',\n    cursor: 'default'\n  }];\n  var rootCompactStyles = {\n    minHeight: values.compactRowHeight,\n    border: 0\n  };\n  var cellCompactStyles = {\n    minHeight: values.compactRowHeight,\n    paddingTop: values.compactRowVerticalPadding,\n    paddingBottom: values.compactRowVerticalPadding,\n    paddingLeft: cellStyleProps.cellLeftPadding + \"px\"\n  };\n  var defaultCellStyles = [getFocusStyle(theme, {\n    inset: -1\n  }), classNames.cell, {\n    display: 'inline-block',\n    position: 'relative',\n    boxSizing: 'border-box',\n    minHeight: values.rowHeight,\n    verticalAlign: 'top',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    paddingTop: values.rowVerticalPadding,\n    paddingBottom: values.rowVerticalPadding,\n    paddingLeft: cellStyleProps.cellLeftPadding + \"px\",\n    selectors: (_j = {\n      '& > button': {\n        maxWidth: '100%'\n      }\n    }, _j[IsFocusableSelector] = getFocusStyle(theme, {\n      inset: -1,\n      borderColor: neutralSecondary,\n      outlineColor: white\n    }), _j)\n  }, isSelected && {\n    selectors: (_k = {}, _k[HighContrastSelector] = __assign({\n      background: 'Highlight',\n      color: 'HighlightText'\n    }, getHighContrastNoAdjustStyle()), _k)\n  }, compact && cellCompactStyles, disabled && {\n    opacity: 0.5\n  }];\n  return {\n    root: [classNames.root, AnimationClassNames.fadeIn400, droppingClassName, theme.fonts.small, isCheckVisible && classNames.isCheckVisible, getFocusStyle(theme, {\n      borderColor: focusBorder,\n      outlineColor: white\n    }), {\n      borderBottom: \"1px solid \" + neutralLighter,\n      background: colors.defaultBackground,\n      color: colors.defaultMetaText,\n      // This ensures that the row always tries to consume is minimum width and does not compress.\n      display: 'inline-flex',\n      minWidth: '100%',\n      minHeight: values.rowHeight,\n      whiteSpace: 'nowrap',\n      padding: 0,\n      boxSizing: 'border-box',\n      verticalAlign: 'top',\n      textAlign: 'left',\n      selectors: (_l = {}, _l[\".\" + classNames.listCellFirstChild + \" &:before\"] = {\n        display: 'none'\n      }, _l['&:hover'] = {\n        background: colors.defaultHoverBackground,\n        color: colors.defaultHoverMetaText,\n        selectors: (_m = {}, _m[\".\" + classNames.isRowHeader] = {\n          color: colors.defaultHoverHeaderText\n        }, _m[\".\" + classNames.cell + \" > .\" + LinkGlobalClassNames.root] = {\n          color: focusedLinkColor\n        }, _m)\n      }, _l[\"&:hover .\" + classNames.check] = {\n        opacity: 1\n      }, _l[\".\" + IsFocusVisibleClassName + \" &:focus .\" + classNames.check] = {\n        opacity: 1\n      }, _l['.ms-GroupSpacer'] = {\n        flexShrink: 0,\n        flexGrow: 0\n      }, _l)\n    }, isSelected && selectedStyles, !canSelect && cannotSelectStyles, compact && rootCompactStyles, className],\n    cellUnpadded: {\n      paddingRight: cellStyleProps.cellRightPadding + \"px\"\n    },\n    cellPadded: {\n      paddingRight: cellStyleProps.cellExtraRightPadding + cellStyleProps.cellRightPadding + \"px\",\n      selectors: (_o = {}, _o[\"&.\" + classNames.cellCheck] = {\n        paddingRight: 0\n      }, _o)\n    },\n    cell: defaultCellStyles,\n    cellAnimation: enableUpdateAnimations && AnimationStyles.slideLeftIn40,\n    cellMeasurer: [classNames.cellMeasurer, {\n      overflow: 'visible',\n      whiteSpace: 'nowrap'\n    }],\n    checkCell: [defaultCellStyles, classNames.cellCheck, checkboxCellClassName, {\n      padding: 0,\n      // Ensure that the check cell covers the top border of the cell.\n      // This ensures the click target does not leave a spot which would\n      // cause other items to be deselected.\n      paddingTop: 1,\n      marginTop: -1,\n      flexShrink: 0\n    }],\n    checkCover: {\n      position: 'absolute',\n      top: -1,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      display: anySelected ? 'block' : 'none'\n    },\n    fields: [classNames.fields, {\n      display: 'flex',\n      alignItems: 'stretch'\n    }],\n    isRowHeader: [classNames.isRowHeader, {\n      color: colors.defaultHeaderText,\n      fontSize: fonts.medium.fontSize\n    }, isSelected && {\n      color: colors.selectedHeaderText,\n      fontWeight: FontWeights.semibold,\n      selectors: (_p = {}, _p[HighContrastSelector] = {\n        color: 'HighlightText'\n      }, _p)\n    }],\n    isMultiline: [defaultCellStyles, {\n      whiteSpace: 'normal',\n      wordBreak: 'break-word',\n      textOverflow: 'clip'\n    }],\n    check: [classNames.check]\n  };\n};","map":{"version":3,"mappings":";AAAA,SACEA,mBADF,EAEEC,eAFF,EAGEC,oBAHF,EAIEC,aAJF,EAKEC,mBALF,EAMEC,WANF,EAOEC,4BAPF,QAQO,eARP;AASA,SAASC,uBAAT,QAAwC,iBAAxC;AACA,SAASC,gBAAgB,IAAIC,oBAA7B,QAAyD,mCAAzD;AAIA,OAAO,IAAMC,0BAA0B,GAAG;AACxCC,MAAI,EAAE,eADkC;AAExC;AACAC,SAAO,EAAE,yBAH+B;AAIxCC,MAAI,EAAE,oBAJkC;AAKxCC,eAAa,EAAE,6BALyB;AAMxCC,WAAS,EAAE,yBAN6B;AAOxCC,OAAK,EAAE,qBAPiC;AAQxCC,cAAY,EAAE,4BAR0B;AASxCC,oBAAkB,EAAE,0BAToB;AAUxCC,uBAAqB,EAAE,wBAViB;AAWxCC,YAAU,EAAE,aAX4B;AAYxCC,gBAAc,EAAE,kBAZwB;AAaxCC,aAAW,EAAE,eAb2B;AAcxCC,QAAM,EAAE;AAdgC,CAAnC;AAgBP,IAAMC,mBAAmB,GAAG,4BAA5B;AAEA,OAAO,IAAMC,wBAAwB,GAAoB;AACvDC,iBAAe,EAAE,EADsC;AAEvDC,kBAAgB,EAAE,CAFqC;AAGvDC,uBAAqB,EAAE;AAHgC,CAAlD,C,CAMP;;AACA,OAAO,IAAMC,mBAAmB,GAAG;AACjCC,WAAS,EAAE,EADsB;AAEjCC,kBAAgB,EAAE;AAFe,CAA5B,C,CAKP;;AACA,IAAMC,MAAM,yBACPH,mBADO,GACY;AACtBI,oBAAkB,EAAE,EADE;AAEtBC,2BAAyB,EAAE;AAFL,CADZ,CAAZ;;AAMA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,KAAD,EAA6B;;;AAE5D,WAAK,GAYHA,KAAK,MAZP;AAAA,MACAhB,UAAU,GAWRgB,KAAK,WAZP;AAAA,MAEAC,SAAS,GAUPD,KAAK,UAZP;AAAA,MAGAE,iBAAiB,GASfF,KAAK,kBAZP;AAAA,MAIAG,WAAW,GAQTH,KAAK,YAZP;AAAA,MAKAf,cAAc,GAOZe,KAAK,eAZP;AAAA,MAMAI,qBAAqB,GAMnBJ,KAAK,sBAZP;AAAA,MAOAxB,OAAO,GAKLwB,KAAK,QAZP;AAAA,MAQAK,SAAS,GAIPL,KAAK,UAZP;AAAA,MASAM,KAGEN,KAAK,eAZP;AAAA,MASAO,cAAc,mBAAGlB,wBAAH,GAA2BiB,EATzC;AAAA,MAUAE,sBAAsB,GAEpBR,KAAK,uBAZP;AAAA,MAWAS,QAAQ,GACNT,KAAK,SAZP;AAcM,aAAO,GAAYU,KAAK,QAAxB;AAAA,MAASC,KAAK,GAAKD,KAAK,MAAxB;AAEN,oBAAc,GAOZE,OAAO,eAPT;AAAA,MACAC,KAAK,GAMHD,OAAO,MAPT;AAAA,MAEAE,gBAAgB,GAKdF,OAAO,iBAPT;AAAA,MAGAG,cAAc,GAIZH,OAAO,eAPT;AAAA,MAIAI,YAAY,GAGVJ,OAAO,aAPT;AAAA,MAKAK,WAAW,GAETL,OAAO,YAPT;AAAA,MAMAM,oBAAoB,GAClBN,OAAO,qBAPT;AAQI,WAAiDF,KAAK,CAACS,cAAvD;AAAA,MAAEC,WAAW,iBAAb;AAAA,MAA4BC,gBAAgB,iBAA5C;AAEN,MAAMC,UAAU,GAAGtD,mBAAmB,CAACM,0BAAD,EAA6BoC,KAA7B,CAAtC;AAEA,MAAMa,MAAM,GAAG;AACb;AACAC,qBAAiB,EAAEC,cAFN;AAGbC,mBAAe,EAAEZ,gBAHJ;AAIba,qBAAiB,EAAEd,KAJN;AAMb;AACAe,0BAAsB,EAAEX,WAPX;AAQbY,wBAAoB,EAAEJ,cART;AASbK,0BAAsB,EAAEf,cATX;AAWb;AACAgB,sBAAkB,EAAEd,WAZP;AAabe,oBAAgB,EAAEP,cAbL;AAcbQ,sBAAkB,EAAEjB,YAdP;AAgBb;AACAkB,2BAAuB,EAAEjB,WAjBZ;AAkBbkB,yBAAqB,EAAEV,cAlBV;AAmBbW,2BAAuB,EAAElB,oBAnBZ;AAqBb;AACAmB,mBAAe,EAAEpB,WAtBJ;AAuBbqB,iBAAa,EAAEb,cAvBF;AAwBbc,mBAAe,EAAEvB,YAxBJ;AAyBbwB,wBAAoB,EAAEtB;AAzBT,GAAf;AA4BA,MAAMuB,oBAAoB,GAAG;AAC3BC,OAAG,EAAE,CADsB;AAE3BC,SAAK,EAAE,CAFoB;AAG3BC,UAAM,EAAE,CAHmB;AAI3BC,QAAI,EAAE;AAJqB,GAA7B,CA1D8D,CAiE9D;;AACA,MAAMC,cAAc,GAAW,CAC7B/E,aAAa,CAAC2C,KAAD,EAAQ;AACnBqC,SAAK,EAAE,CAAC,CADW;AAEnBC,eAAW,EAAE5B,WAFM;AAGnB6B,gBAAY,EAAEpC,KAHK;AAInBqC,qBAAiB,EAAET;AAJA,GAAR,CADgB,EAO7BnB,UAAU,CAACtC,UAPkB,EAQ7B;AACEmE,SAAK,EAAE5B,MAAM,CAACS,gBADhB;AAEEoB,cAAU,EAAE7B,MAAM,CAACU,kBAFrB;AAGEoB,gBAAY,EAAE,eAAaxC,KAH7B;AAIEyC,aAAS;AACP,kBAAY;AACVC,gBAAQ,EAAE,UADA;AAEVC,eAAO,EAAE,OAFC;AAGVd,WAAG,EAAE,CAAC,CAHI;AAIVe,cAAM,EAAE,CAJE;AAKVb,cAAM,EAAE,CALE;AAMVC,YAAI,EAAE,CANI;AAOVF,aAAK,EAAE,CAPG;AAQVe,eAAO,EAAE,EARC;AASVC,iBAAS,EAAE,eAAa9C;AATd;AADL,OAaP+C,GAAC,MAAItC,UAAU,CAAC7C,IAAf,GAAmB,MAAnB,GAA0BJ,oBAAoB,CAACE,IAAhD,IAAyD;AACvD4E,WAAK,EAAE9B,gBADgD;AAEvDiC,eAAS,YACPO,GAAC/F,oBAAD,IAAwB;AACtBqF,aAAK,EAAE;AADe,OADjB;AAF8C,KAblD,EAsBP;AACAS,oBAAW;AACTR,gBAAU,EAAE7B,MAAM,CAACa,uBADV;AAETe,WAAK,EAAE5B,MAAM,CAACY,qBAFL;AAGTmB,eAAS,YACP;AACAQ,SAAChG,oBAAD,IAAwB;AACtBsF,kBAAU,EAAE,WADU;AAEtBE,iBAAS,YACPS,GAAC,MAAIzC,UAAU,CAAC7C,IAAhB,IAAyB;AACvB0E,eAAK,EAAE;AADgB,SADlB,EAIPY,GAAC,MAAIzC,UAAU,CAAC7C,IAAf,GAAmB,MAAnB,GAA0BJ,oBAAoB,CAACE,IAAhD,IAAyD;AACvDyF,2BAAiB,EAAE,MADoC;AAEvDb,eAAK,EAAE;AAFgD,SAJlD;AAFa,OAFjB,EAeP;AACAW,SAAC,MAAIxC,UAAU,CAACpC,WAAhB,IAAgC;AAC9BiE,aAAK,EAAE5B,MAAM,CAACW,uBADgB;AAE9BoB,iBAAS,YACPW,GAACnG,oBAAD,IAAwB;AACtBqF,eAAK,EAAE;AADe,SADjB;AAFqB,OAhBzB;AAHA,KAvBJ,EAqDP;AACAS,oBAAW;AACTR,gBAAU,EAAE7B,MAAM,CAACgB,eADV;AAETe,eAAS,YACP;AACAY,SAAC,MAAI5C,UAAU,CAAC7C,IAAhB,IAAyB;AACvB0E,aAAK,EAAE5B,MAAM,CAACe,aADS;AAEvBgB,iBAAS,YACPa,GAACrG,oBAAD,IAAwB;AACtBqF,eAAK,EAAE,eADe;AAEtBG,mBAAS,EAAE;AACT,mBAAO;AACLH,mBAAK,EAAE;AADF;AADE;AAFW,SADjB;AAFc,OAFlB,EAgBP;AACAe,SAAC,MAAI5C,UAAU,CAACpC,WAAhB,IAAgC;AAC9BiE,aAAK,EAAE5B,MAAM,CAACc,eADgB;AAE9BiB,iBAAS,YACPc,GAACtG,oBAAD,IAAwB;AACtBqF,eAAK,EAAE;AADe,SADjB;AAFqB,OAjBzB,EA0BP;AACAe,SAACpG,oBAAD,IAAwB;AACtBsF,kBAAU,EAAE;AADU,OA3BjB;AAFA,KAtDJ,EAyFPQ,GAAC9F,oBAAD,IAAqBuG;AACnBjB,gBAAU,EAAE,WADO;AAEnBD,WAAK,EAAE;AAFY,OAGhBjF,4BAA4B,EAHZ,GAGc;AACjCoF,eAAS,EAAE;AACTgB,SAAC,EAAE;AACDnB,eAAK,EAAE;AADN;AADM;AADsB,KAHd,CAzFd,EAoGP;AACAS,0BAAiB;AACfR,gBAAU,EAAE7B,MAAM,CAACiB;AADJ,KArGV;AAJX,GAR6B,CAA/B;AAwHA,MAAM+B,kBAAkB,GAAW,CACjCjD,UAAU,CAACvC,qBADsB,EAEjC;AACEyF,cAAU,EAAE,MADd;AAEEC,UAAM,EAAE;AAFV,GAFiC,CAAnC;AAQA,MAAMC,iBAAiB,GAAW;AAChCC,aAAS,EAAE/E,MAAM,CAACD,gBADc;AAEhCiF,UAAM,EAAE;AAFwB,GAAlC;AAKA,MAAMC,iBAAiB,GAAW;AAChCF,aAAS,EAAE/E,MAAM,CAACD,gBADc;AAEhCmF,cAAU,EAAElF,MAAM,CAACE,yBAFa;AAGhCiF,iBAAa,EAAEnF,MAAM,CAACE,yBAHU;AAIhCkF,eAAW,EAAKzE,cAAc,CAACjB,eAAf,GAA8B;AAJd,GAAlC;AAOA,MAAM2F,iBAAiB,GAAW,CAChClH,aAAa,CAAC2C,KAAD,EAAQ;AAAEqC,SAAK,EAAE,CAAC;AAAV,GAAR,CADmB,EAEhCzB,UAAU,CAAC7C,IAFqB,EAGhC;AACE+E,WAAO,EAAE,cADX;AAEED,YAAQ,EAAE,UAFZ;AAGE2B,aAAS,EAAE,YAHb;AAIEP,aAAS,EAAE/E,MAAM,CAACF,SAJpB;AAKEyF,iBAAa,EAAE,KALjB;AAMEC,cAAU,EAAE,QANd;AAOEC,YAAQ,EAAE,QAPZ;AAQEC,gBAAY,EAAE,UARhB;AASER,cAAU,EAAElF,MAAM,CAACC,kBATrB;AAUEkF,iBAAa,EAAEnF,MAAM,CAACC,kBAVxB;AAWEmF,eAAW,EAAKzE,cAAc,CAACjB,eAAf,GAA8B,IAXhD;AAYEgE,aAAS;AACP,oBAAc;AACZiC,gBAAQ,EAAE;AADE;AADP,OAKPC,GAACpG,mBAAD,IAAuBrB,aAAa,CAAC2C,KAAD,EAAQ;AAAEqC,WAAK,EAAE,CAAC,CAAV;AAAaC,iBAAW,EAAElC,gBAA1B;AAA4CmC,kBAAY,EAAEpC;AAA1D,KAAR,CAL7B;AAZX,GAHgC,EAwBhC7B,UAAU,IAAI;AACZsE,aAAS,YACPmC,GAAC3H,oBAAD,IAAqBuG;AACnBjB,gBAAU,EAAE,WADO;AAEnBD,WAAK,EAAE;AAFY,OAGhBjF,4BAA4B,EAHZ,CADd;AADG,GAxBkB,EAkChCM,OAAO,IAAIqG,iBAlCqB,EAmChCpE,QAAQ,IAAI;AAAEiF,WAAO,EAAE;AAAX,GAnCoB,CAAlC;AAsCA,SAAO;AACLnH,QAAI,EAAE,CACJ+C,UAAU,CAAC/C,IADP,EAEJX,mBAAmB,CAAC+H,SAFhB,EAGJzF,iBAHI,EAIJQ,KAAK,CAACC,KAAN,CAAYiF,KAJR,EAKJ3G,cAAc,IAAIqC,UAAU,CAACrC,cALzB,EAMJlB,aAAa,CAAC2C,KAAD,EAAQ;AAAEsC,iBAAW,EAAE5B,WAAf;AAA4B6B,kBAAY,EAAEpC;AAA1C,KAAR,CANT,EAOJ;AACEwC,kBAAY,EAAE,eAAatC,cAD7B;AAEEqC,gBAAU,EAAE7B,MAAM,CAACI,iBAFrB;AAGEwB,WAAK,EAAE5B,MAAM,CAACG,eAHhB;AAIE;AACA8B,aAAO,EAAE,aALX;AAMEqC,cAAQ,EAAE,MANZ;AAOElB,eAAS,EAAE/E,MAAM,CAACF,SAPpB;AAQE0F,gBAAU,EAAE,QARd;AASEU,aAAO,EAAE,CATX;AAUEZ,eAAS,EAAE,YAVb;AAWEC,mBAAa,EAAE,KAXjB;AAYEY,eAAS,EAAE,MAZb;AAaEzC,eAAS,YACP0C,GAAC,MAAI1E,UAAU,CAACxC,kBAAf,GAAiC,WAAlC,IAAgD;AAC9C0E,eAAO,EAAE;AADqC,OADzC,EAKPwC,gBAAW;AACT5C,kBAAU,EAAE7B,MAAM,CAACO,sBADV;AAETqB,aAAK,EAAE5B,MAAM,CAACM,oBAFL;AAGTyB,iBAAS,YACP2C,GAAC,MAAI3E,UAAU,CAACpC,WAAhB,IAAgC;AAC9BiE,eAAK,EAAE5B,MAAM,CAACK;AADgB,SADzB,EAKPqE,GAAC,MAAI3E,UAAU,CAAC7C,IAAf,GAAmB,MAAnB,GAA0BJ,oBAAoB,CAACE,IAAhD,IAAyD;AACvD4E,eAAK,EAAE9B;AADgD,SALlD;AAHA,OALJ,EAmBP2E,GAAC,cAAY1E,UAAU,CAAC1C,KAAxB,IAAkC;AAChC8G,eAAO,EAAE;AADuB,OAnB3B,EAuBPM,GAAC,MAAI7H,uBAAJ,GAA2B,YAA3B,GAAwCmD,UAAU,CAAC1C,KAApD,IAA8D;AAC5D8G,eAAO,EAAE;AADmD,OAvBvD,EA2BPM,wBAAmB;AACjBE,kBAAU,EAAE,CADK;AAEjBC,gBAAQ,EAAE;AAFO,OA3BZ;AAbX,KAPI,EAqDJnH,UAAU,IAAI8D,cArDV,EAsDJ,CAAC7C,SAAD,IAAcsE,kBAtDV,EAuDJ/F,OAAO,IAAIkG,iBAvDP,EAwDJrE,SAxDI,CADD;AA4DL+F,gBAAY,EAAE;AACZC,kBAAY,EAAK9F,cAAc,CAAChB,gBAAf,GAA+B;AADpC,KA5DT;AAgEL+G,cAAU,EAAE;AACVD,kBAAY,EAAK9F,cAAc,CAACf,qBAAf,GAAuCe,cAAc,CAAChB,gBAAtD,GAAsE,IAD7E;AAEV+D,eAAS,YACPiD,GAAC,OAAKjF,UAAU,CAAC3C,SAAjB,IAA+B;AAC7B0H,oBAAY,EAAE;AADe,OADxB;AAFC,KAhEP;AAyEL5H,QAAI,EAAEwG,iBAzED;AA0ELvG,iBAAa,EAAE8B,sBAAsB,IAAI3C,eAAe,CAAC2I,aA1EpD;AA2EL3H,gBAAY,EAAE,CACZyC,UAAU,CAACzC,YADC,EAEZ;AACEwG,cAAQ,EAAE,SADZ;AAEED,gBAAU,EAAE;AAFd,KAFY,CA3ET;AAkFLqB,aAAS,EAAE,CACTxB,iBADS,EAET3D,UAAU,CAAC3C,SAFF,EAGTyB,qBAHS,EAIT;AACE0F,aAAO,EAAE,CADX;AAEE;AACA;AACA;AACAhB,gBAAU,EAAE,CALd;AAME4B,eAAS,EAAE,CAAC,CANd;AAOER,gBAAU,EAAE;AAPd,KAJS,CAlFN;AAgGLS,cAAU,EAAE;AACVpD,cAAQ,EAAE,UADA;AAEVb,SAAG,EAAE,CAAC,CAFI;AAGVG,UAAI,EAAE,CAHI;AAIVD,YAAM,EAAE,CAJE;AAKVD,WAAK,EAAE,CALG;AAMVa,aAAO,EAAErD,WAAW,GAAG,OAAH,GAAa;AANvB,KAhGP;AAwGLhB,UAAM,EAAE,CACNmC,UAAU,CAACnC,MADL,EAEN;AACEqE,aAAO,EAAE,MADX;AAEEoD,gBAAU,EAAE;AAFd,KAFM,CAxGH;AA+GL1H,eAAW,EAAE,CACXoC,UAAU,CAACpC,WADA,EAEX;AACEiE,WAAK,EAAE5B,MAAM,CAACC,iBADhB;AAEEqF,cAAQ,EAAElG,KAAK,CAACmG,MAAN,CAAaD;AAFzB,KAFW,EAMX7H,UAAU,IAAI;AACZmE,WAAK,EAAE5B,MAAM,CAACQ,kBADF;AAEZgF,gBAAU,EAAE9I,WAAW,CAAC+I,QAFZ;AAGZ1D,eAAS,YACP2D,GAACnJ,oBAAD,IAAwB;AACtBqF,aAAK,EAAE;AADe,OADjB;AAHG,KANH,CA/GR;AA+HL+D,eAAW,EAAE,CACXjC,iBADW,EAEX;AACEG,gBAAU,EAAE,QADd;AAEE+B,eAAS,EAAE,YAFb;AAGE7B,kBAAY,EAAE;AAHhB,KAFW,CA/HR;AAuIL1G,SAAK,EAAE,CAAC0C,UAAU,CAAC1C,KAAZ;AAvIF,GAAP;AAyID,CA7XM","names":["AnimationClassNames","AnimationStyles","HighContrastSelector","getFocusStyle","getGlobalClassNames","FontWeights","getHighContrastNoAdjustStyle","IsFocusVisibleClassName","GlobalClassNames","LinkGlobalClassNames","DetailsRowGlobalClassNames","root","compact","cell","cellAnimation","cellCheck","check","cellMeasurer","listCellFirstChild","isContentUnselectable","isSelected","isCheckVisible","isRowHeader","fields","IsFocusableSelector","DEFAULT_CELL_STYLE_PROPS","cellLeftPadding","cellRightPadding","cellExtraRightPadding","DEFAULT_ROW_HEIGHTS","rowHeight","compactRowHeight","values","rowVerticalPadding","compactRowVerticalPadding","getDetailsRowStyles","props","canSelect","droppingClassName","anySelected","checkboxCellClassName","className","_q","cellStyleProps","enableUpdateAnimations","disabled","theme","fonts","palette","white","neutralSecondary","neutralLighter","neutralLight","neutralDark","neutralQuaternaryAlt","semanticColors","focusBorder","focusedLinkColor","classNames","colors","defaultHeaderText","neutralPrimary","defaultMetaText","defaultBackground","defaultHoverHeaderText","defaultHoverMetaText","defaultHoverBackground","selectedHeaderText","selectedMetaText","selectedBackground","selectedHoverHeaderText","selectedHoverMetaText","selectedHoverBackground","focusHeaderText","focusMetaText","focusBackground","focusHoverBackground","rowHighContrastFocus","top","right","bottom","left","selectedStyles","inset","borderColor","outlineColor","highContrastStyle","color","background","borderBottom","selectors","position","display","height","content","borderTop","_a","_b","_c","_d","forcedColorAdjust","_e","_f","_g","_h","__assign","a","cannotSelectStyles","userSelect","cursor","rootCompactStyles","minHeight","border","cellCompactStyles","paddingTop","paddingBottom","paddingLeft","defaultCellStyles","boxSizing","verticalAlign","whiteSpace","overflow","textOverflow","maxWidth","_j","_k","opacity","fadeIn400","small","minWidth","padding","textAlign","_l","_m","flexShrink","flexGrow","cellUnpadded","paddingRight","cellPadded","_o","slideLeftIn40","checkCell","marginTop","checkCover","alignItems","fontSize","medium","fontWeight","semibold","_p","isMultiline","wordBreak"],"sources":["/home/runner/work/Reaction/Reaction/employee-info/node_modules/@fluentui/react/lib/components/src/components/DetailsList/DetailsRow.styles.ts"],"sourcesContent":["import {\n  AnimationClassNames,\n  AnimationStyles,\n  HighContrastSelector,\n  getFocusStyle,\n  getGlobalClassNames,\n  FontWeights,\n  getHighContrastNoAdjustStyle,\n} from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\nimport { GlobalClassNames as LinkGlobalClassNames } from '../../components/Link/Link.styles';\nimport type { IDetailsRowStyleProps, IDetailsRowStyles, ICellStyleProps } from './DetailsRow.types';\nimport type { IStyle } from '../../Styling';\n\nexport const DetailsRowGlobalClassNames = {\n  root: 'ms-DetailsRow',\n  // TODO: in Fabric 7.0 lowercase the 'Compact' for consistency across other components.\n  compact: 'ms-DetailsList--Compact',\n  cell: 'ms-DetailsRow-cell',\n  cellAnimation: 'ms-DetailsRow-cellAnimation',\n  cellCheck: 'ms-DetailsRow-cellCheck',\n  check: 'ms-DetailsRow-check',\n  cellMeasurer: 'ms-DetailsRow-cellMeasurer',\n  listCellFirstChild: 'ms-List-cell:first-child',\n  isContentUnselectable: 'is-contentUnselectable',\n  isSelected: 'is-selected',\n  isCheckVisible: 'is-check-visible',\n  isRowHeader: 'is-row-header',\n  fields: 'ms-DetailsRow-fields',\n};\nconst IsFocusableSelector = \"[data-is-focusable='true']\";\n\nexport const DEFAULT_CELL_STYLE_PROPS: ICellStyleProps = {\n  cellLeftPadding: 12,\n  cellRightPadding: 8,\n  cellExtraRightPadding: 24,\n};\n\n// Source of default row heights to share.\nexport const DEFAULT_ROW_HEIGHTS = {\n  rowHeight: 42,\n  compactRowHeight: 32,\n};\n\n// Constant values\nconst values = {\n  ...DEFAULT_ROW_HEIGHTS,\n  rowVerticalPadding: 11,\n  compactRowVerticalPadding: 6,\n};\n\nexport const getDetailsRowStyles = (props: IDetailsRowStyleProps): IDetailsRowStyles => {\n  const {\n    theme,\n    isSelected,\n    canSelect,\n    droppingClassName,\n    anySelected,\n    isCheckVisible,\n    checkboxCellClassName,\n    compact,\n    className,\n    cellStyleProps = DEFAULT_CELL_STYLE_PROPS,\n    enableUpdateAnimations,\n    disabled,\n  } = props;\n\n  const { palette, fonts } = theme;\n  const {\n    neutralPrimary,\n    white,\n    neutralSecondary,\n    neutralLighter,\n    neutralLight,\n    neutralDark,\n    neutralQuaternaryAlt,\n  } = palette;\n  const { focusBorder, linkHovered: focusedLinkColor } = theme.semanticColors;\n\n  const classNames = getGlobalClassNames(DetailsRowGlobalClassNames, theme);\n\n  const colors = {\n    // Default\n    defaultHeaderText: neutralPrimary,\n    defaultMetaText: neutralSecondary,\n    defaultBackground: white,\n\n    // Default Hover\n    defaultHoverHeaderText: neutralDark,\n    defaultHoverMetaText: neutralPrimary,\n    defaultHoverBackground: neutralLighter,\n\n    // Selected\n    selectedHeaderText: neutralDark,\n    selectedMetaText: neutralPrimary,\n    selectedBackground: neutralLight,\n\n    // Selected Hover\n    selectedHoverHeaderText: neutralDark,\n    selectedHoverMetaText: neutralPrimary,\n    selectedHoverBackground: neutralQuaternaryAlt,\n\n    // Focus\n    focusHeaderText: neutralDark,\n    focusMetaText: neutralPrimary,\n    focusBackground: neutralLight,\n    focusHoverBackground: neutralQuaternaryAlt,\n  };\n\n  const rowHighContrastFocus = {\n    top: 2,\n    right: 2,\n    bottom: 2,\n    left: 2,\n  };\n\n  // Selected row styles\n  const selectedStyles: IStyle = [\n    getFocusStyle(theme, {\n      inset: -1,\n      borderColor: focusBorder,\n      outlineColor: white,\n      highContrastStyle: rowHighContrastFocus,\n    }),\n    classNames.isSelected,\n    {\n      color: colors.selectedMetaText,\n      background: colors.selectedBackground,\n      borderBottom: `1px solid ${white}`,\n      selectors: {\n        '&:before': {\n          position: 'absolute',\n          display: 'block',\n          top: -1,\n          height: 1,\n          bottom: 0,\n          left: 0,\n          right: 0,\n          content: '',\n          borderTop: `1px solid ${white}`,\n        },\n\n        [`.${classNames.cell} > .${LinkGlobalClassNames.root}`]: {\n          color: focusedLinkColor,\n          selectors: {\n            [HighContrastSelector]: {\n              color: 'HighlightText',\n            },\n          },\n        },\n\n        // Selected State hover\n        '&:hover': {\n          background: colors.selectedHoverBackground,\n          color: colors.selectedHoverMetaText,\n          selectors: {\n            // Selected State hover meta cell\n            [HighContrastSelector]: {\n              background: 'Highlight',\n              selectors: {\n                [`.${classNames.cell}`]: {\n                  color: 'HighlightText',\n                },\n                [`.${classNames.cell} > .${LinkGlobalClassNames.root}`]: {\n                  forcedColorAdjust: 'none',\n                  color: 'HighlightText',\n                },\n              },\n            },\n\n            // Selected State hover Header cell\n            [`.${classNames.isRowHeader}`]: {\n              color: colors.selectedHoverHeaderText,\n              selectors: {\n                [HighContrastSelector]: {\n                  color: 'HighlightText',\n                },\n              },\n            },\n          },\n        },\n\n        // Focus state\n        '&:focus': {\n          background: colors.focusBackground,\n          selectors: {\n            // Selected State hover meta cell\n            [`.${classNames.cell}`]: {\n              color: colors.focusMetaText,\n              selectors: {\n                [HighContrastSelector]: {\n                  color: 'HighlightText',\n                  selectors: {\n                    '> a': {\n                      color: 'HighlightText',\n                    },\n                  },\n                },\n              },\n            },\n\n            // Row header cell\n            [`.${classNames.isRowHeader}`]: {\n              color: colors.focusHeaderText,\n              selectors: {\n                [HighContrastSelector]: {\n                  color: 'HighlightText',\n                },\n              },\n            },\n\n            // Ensure high-contrast mode overrides default focus background\n            [HighContrastSelector]: {\n              background: 'Highlight',\n            },\n          },\n        },\n\n        [HighContrastSelector]: {\n          background: 'Highlight',\n          color: 'HighlightText',\n          ...getHighContrastNoAdjustStyle(),\n          selectors: {\n            a: {\n              color: 'HighlightText',\n            },\n          },\n        },\n\n        // Focus and hover state\n        '&:focus:hover': {\n          background: colors.focusHoverBackground,\n        },\n      },\n    },\n  ];\n\n  const cannotSelectStyles: IStyle = [\n    classNames.isContentUnselectable,\n    {\n      userSelect: 'none',\n      cursor: 'default',\n    },\n  ];\n\n  const rootCompactStyles: IStyle = {\n    minHeight: values.compactRowHeight,\n    border: 0,\n  };\n\n  const cellCompactStyles: IStyle = {\n    minHeight: values.compactRowHeight,\n    paddingTop: values.compactRowVerticalPadding,\n    paddingBottom: values.compactRowVerticalPadding,\n    paddingLeft: `${cellStyleProps.cellLeftPadding}px`,\n  };\n\n  const defaultCellStyles: IStyle = [\n    getFocusStyle(theme, { inset: -1 }),\n    classNames.cell,\n    {\n      display: 'inline-block',\n      position: 'relative',\n      boxSizing: 'border-box',\n      minHeight: values.rowHeight,\n      verticalAlign: 'top',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      paddingTop: values.rowVerticalPadding,\n      paddingBottom: values.rowVerticalPadding,\n      paddingLeft: `${cellStyleProps.cellLeftPadding}px`,\n      selectors: {\n        '& > button': {\n          maxWidth: '100%',\n        },\n\n        [IsFocusableSelector]: getFocusStyle(theme, { inset: -1, borderColor: neutralSecondary, outlineColor: white }),\n      },\n    },\n\n    isSelected && {\n      selectors: {\n        [HighContrastSelector]: {\n          background: 'Highlight',\n          color: 'HighlightText',\n          ...getHighContrastNoAdjustStyle(),\n        },\n      },\n    },\n\n    compact && cellCompactStyles,\n    disabled && { opacity: 0.5 },\n  ];\n\n  return {\n    root: [\n      classNames.root,\n      AnimationClassNames.fadeIn400,\n      droppingClassName,\n      theme.fonts.small,\n      isCheckVisible && classNames.isCheckVisible,\n      getFocusStyle(theme, { borderColor: focusBorder, outlineColor: white }),\n      {\n        borderBottom: `1px solid ${neutralLighter}`,\n        background: colors.defaultBackground,\n        color: colors.defaultMetaText,\n        // This ensures that the row always tries to consume is minimum width and does not compress.\n        display: 'inline-flex',\n        minWidth: '100%',\n        minHeight: values.rowHeight,\n        whiteSpace: 'nowrap',\n        padding: 0,\n        boxSizing: 'border-box',\n        verticalAlign: 'top',\n        textAlign: 'left',\n        selectors: {\n          [`.${classNames.listCellFirstChild} &:before`]: {\n            display: 'none',\n          },\n\n          '&:hover': {\n            background: colors.defaultHoverBackground,\n            color: colors.defaultHoverMetaText,\n            selectors: {\n              [`.${classNames.isRowHeader}`]: {\n                color: colors.defaultHoverHeaderText,\n              },\n\n              [`.${classNames.cell} > .${LinkGlobalClassNames.root}`]: {\n                color: focusedLinkColor,\n              },\n            },\n          },\n\n          [`&:hover .${classNames.check}`]: {\n            opacity: 1,\n          },\n\n          [`.${IsFocusVisibleClassName} &:focus .${classNames.check}`]: {\n            opacity: 1,\n          },\n\n          '.ms-GroupSpacer': {\n            flexShrink: 0,\n            flexGrow: 0,\n          },\n        },\n      },\n      isSelected && selectedStyles,\n      !canSelect && cannotSelectStyles,\n      compact && rootCompactStyles,\n      className,\n    ],\n\n    cellUnpadded: {\n      paddingRight: `${cellStyleProps.cellRightPadding}px`,\n    },\n\n    cellPadded: {\n      paddingRight: `${cellStyleProps.cellExtraRightPadding + cellStyleProps.cellRightPadding}px`,\n      selectors: {\n        [`&.${classNames.cellCheck}`]: {\n          paddingRight: 0,\n        },\n      },\n    },\n\n    cell: defaultCellStyles,\n    cellAnimation: enableUpdateAnimations && AnimationStyles.slideLeftIn40,\n    cellMeasurer: [\n      classNames.cellMeasurer,\n      {\n        overflow: 'visible',\n        whiteSpace: 'nowrap',\n      },\n    ],\n    checkCell: [\n      defaultCellStyles,\n      classNames.cellCheck,\n      checkboxCellClassName,\n      {\n        padding: 0,\n        // Ensure that the check cell covers the top border of the cell.\n        // This ensures the click target does not leave a spot which would\n        // cause other items to be deselected.\n        paddingTop: 1,\n        marginTop: -1,\n        flexShrink: 0,\n      },\n    ],\n    checkCover: {\n      position: 'absolute',\n      top: -1,\n      left: 0,\n      bottom: 0,\n      right: 0,\n      display: anySelected ? 'block' : 'none',\n    },\n    fields: [\n      classNames.fields,\n      {\n        display: 'flex',\n        alignItems: 'stretch',\n      },\n    ],\n    isRowHeader: [\n      classNames.isRowHeader,\n      {\n        color: colors.defaultHeaderText,\n        fontSize: fonts.medium.fontSize,\n      },\n      isSelected && {\n        color: colors.selectedHeaderText,\n        fontWeight: FontWeights.semibold,\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'HighlightText',\n          },\n        },\n      },\n    ],\n    isMultiline: [\n      defaultCellStyles,\n      {\n        whiteSpace: 'normal',\n        wordBreak: 'break-word',\n        textOverflow: 'clip',\n      },\n    ],\n    check: [classNames.check],\n  };\n};\n"]},"metadata":{},"sourceType":"module"}