{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { HighContrastSelector, getGlobalClassNames, getHighContrastNoAdjustStyle } from '../../../Styling';\nimport { IsFocusVisibleClassName } from '../../../Utilities';\nvar GlobalClassNames = {\n  root: 'ms-ChoiceField',\n  choiceFieldWrapper: 'ms-ChoiceField-wrapper',\n  input: 'ms-ChoiceField-input',\n  field: 'ms-ChoiceField-field',\n  innerField: 'ms-ChoiceField-innerField',\n  imageWrapper: 'ms-ChoiceField-imageWrapper',\n  iconWrapper: 'ms-ChoiceField-iconWrapper',\n  labelWrapper: 'ms-ChoiceField-labelWrapper',\n  checked: 'is-checked'\n};\nvar labelWrapperLineHeight = 15;\nvar labelWrapperHeight = labelWrapperLineHeight * 2 + 2; // adding 2px height to ensure text doesn't get cutoff\n\nvar iconSize = 32;\nvar choiceFieldSize = 20;\nvar choiceFieldTransitionDuration = '200ms';\nvar choiceFieldTransitionTiming = 'cubic-bezier(.4, 0, .23, 1)';\nvar radioButtonSpacing = 3;\nvar radioButtonInnerSize = 5;\n\nfunction getChoiceGroupFocusStyle(focusBorderColor, hasIconOrImage) {\n  var _a, _b;\n\n  return ['is-inFocus', {\n    selectors: (_a = {}, _a[\".\" + IsFocusVisibleClassName + \" &\"] = {\n      position: 'relative',\n      outline: 'transparent',\n      selectors: {\n        '::-moz-focus-inner': {\n          border: 0\n        },\n        ':after': {\n          content: '\"\"',\n          top: -2,\n          right: -2,\n          bottom: -2,\n          left: -2,\n          pointerEvents: 'none',\n          border: \"1px solid \" + focusBorderColor,\n          position: 'absolute',\n          selectors: (_b = {}, _b[HighContrastSelector] = {\n            borderColor: 'WindowText',\n            borderWidth: hasIconOrImage ? 1 : 2\n          }, _b)\n        }\n      }\n    }, _a)\n  }];\n}\n\nfunction getImageWrapperStyle(isSelectedImageWrapper, className, checked) {\n  return [className, {\n    paddingBottom: 2,\n    transitionProperty: 'opacity',\n    transitionDuration: choiceFieldTransitionDuration,\n    transitionTimingFunction: 'ease',\n    selectors: {\n      '.ms-Image': {\n        display: 'inline-block',\n        borderStyle: 'none'\n      }\n    }\n  }, (checked ? !isSelectedImageWrapper : isSelectedImageWrapper) && ['is-hidden', {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    width: '100%',\n    height: '100%',\n    overflow: 'hidden',\n    opacity: 0\n  }]];\n}\n\nexport var getStyles = function getStyles(props) {\n  var _a, _b, _c, _d, _e;\n\n  var theme = props.theme,\n      hasIcon = props.hasIcon,\n      hasImage = props.hasImage,\n      checked = props.checked,\n      disabled = props.disabled,\n      imageIsLarge = props.imageIsLarge,\n      focused = props.focused,\n      imageSize = props.imageSize;\n  var palette = theme.palette,\n      semanticColors = theme.semanticColors,\n      fonts = theme.fonts;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme); // Tokens\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.smallInputBorder\n\n  var circleBorderColor = palette.neutralPrimary;\n  var circleHoveredBorderColor = semanticColors.inputBorderHovered;\n  var circleCheckedBorderColor = semanticColors.inputBackgroundChecked; // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBackgroundCheckedHovered\n\n  var circleCheckedHoveredBorderColor = palette.themeDark;\n  var circleDisabledBorderColor = semanticColors.disabledBodySubtext;\n  var circleBackgroundColor = semanticColors.bodyBackground;\n  var dotUncheckedHoveredColor = palette.neutralSecondary;\n  var dotCheckedColor = semanticColors.inputBackgroundChecked; // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBackgroundCheckedHovered\n\n  var dotCheckedHoveredColor = palette.themeDark;\n  var dotDisabledColor = semanticColors.disabledBodySubtext; // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.bodyTextChecked\n\n  var labelHoverFocusColor = palette.neutralDark;\n  var focusBorderColor = semanticColors.focusBorder;\n  var iconOrImageChoiceBorderUncheckedHoveredColor = semanticColors.inputBorderHovered; // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBackgroundCheckedHovered\n\n  var iconOrImageChoiceBorderCheckedColor = semanticColors.inputBackgroundChecked;\n  var iconOrImageChoiceBorderCheckedHoveredColor = palette.themeDark;\n  var iconOrImageChoiceBackgroundColor = palette.neutralLighter;\n  var fieldHoverOrFocusProperties = {\n    selectors: {\n      '.ms-ChoiceFieldLabel': {\n        color: labelHoverFocusColor\n      },\n      ':before': {\n        borderColor: checked ? circleCheckedHoveredBorderColor : circleHoveredBorderColor\n      },\n      ':after': [!hasIcon && !hasImage && !checked && {\n        content: '\"\"',\n        transitionProperty: 'background-color',\n        left: 5,\n        top: 5,\n        width: 10,\n        height: 10,\n        backgroundColor: dotUncheckedHoveredColor\n      }, checked && {\n        borderColor: dotCheckedHoveredColor,\n        background: dotCheckedHoveredColor\n      }]\n    }\n  };\n  var enabledFieldWithImageHoverOrFocusProperties = {\n    borderColor: checked ? iconOrImageChoiceBorderCheckedHoveredColor : iconOrImageChoiceBorderUncheckedHoveredColor,\n    selectors: {\n      ':before': {\n        opacity: 1,\n        borderColor: checked ? circleCheckedHoveredBorderColor : circleHoveredBorderColor\n      }\n    }\n  };\n  var circleAreaProperties = [{\n    content: '\"\"',\n    display: 'inline-block',\n    backgroundColor: circleBackgroundColor,\n    borderWidth: 1,\n    borderStyle: 'solid',\n    borderColor: circleBorderColor,\n    width: choiceFieldSize,\n    height: choiceFieldSize,\n    fontWeight: 'normal',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    boxSizing: 'border-box',\n    transitionProperty: 'border-color',\n    transitionDuration: choiceFieldTransitionDuration,\n    transitionTimingFunction: choiceFieldTransitionTiming,\n    borderRadius: '50%'\n  }, disabled && {\n    borderColor: circleDisabledBorderColor,\n    selectors: (_a = {}, _a[HighContrastSelector] = __assign({\n      borderColor: 'GrayText',\n      background: 'Window'\n    }, getHighContrastNoAdjustStyle()), _a)\n  }, checked && {\n    borderColor: disabled ? circleDisabledBorderColor : circleCheckedBorderColor,\n    selectors: (_b = {}, _b[HighContrastSelector] = {\n      borderColor: 'Highlight',\n      background: 'Window',\n      forcedColorAdjust: 'none'\n    }, _b)\n  }, (hasIcon || hasImage) && {\n    top: radioButtonSpacing,\n    right: radioButtonSpacing,\n    left: 'auto',\n    opacity: checked ? 1 : 0\n  }];\n  var dotAreaProperties = [{\n    content: '\"\"',\n    width: 0,\n    height: 0,\n    borderRadius: '50%',\n    position: 'absolute',\n    left: choiceFieldSize / 2,\n    right: 0,\n    transitionProperty: 'border-width',\n    transitionDuration: choiceFieldTransitionDuration,\n    transitionTimingFunction: choiceFieldTransitionTiming,\n    boxSizing: 'border-box'\n  }, checked && {\n    borderWidth: 5,\n    borderStyle: 'solid',\n    borderColor: disabled ? dotDisabledColor : dotCheckedColor,\n    background: dotCheckedColor,\n    left: 5,\n    top: 5,\n    width: 10,\n    height: 10,\n    selectors: (_c = {}, _c[HighContrastSelector] = {\n      borderColor: 'Highlight',\n      forcedColorAdjust: 'none'\n    }, _c)\n  }, checked && (hasIcon || hasImage) && {\n    top: radioButtonSpacing + radioButtonInnerSize,\n    right: radioButtonSpacing + radioButtonInnerSize,\n    left: 'auto' // To reset the value of 'left' to its default value, so that 'right' works\n\n  }];\n  return {\n    root: [classNames.root, theme.fonts.medium, {\n      display: 'flex',\n      alignItems: 'center',\n      boxSizing: 'border-box',\n      color: semanticColors.bodyText,\n      minHeight: 26,\n      border: 'none',\n      position: 'relative',\n      marginTop: 8,\n      selectors: {\n        '.ms-ChoiceFieldLabel': {\n          display: 'inline-block'\n        }\n      }\n    }, !hasIcon && !hasImage && {\n      selectors: {\n        '.ms-ChoiceFieldLabel': {\n          paddingLeft: '26px'\n        }\n      }\n    }, hasImage && 'ms-ChoiceField--image', hasIcon && 'ms-ChoiceField--icon', (hasIcon || hasImage) && {\n      display: 'inline-flex',\n      fontSize: 0,\n      margin: '0 4px 4px 0',\n      paddingLeft: 0,\n      backgroundColor: iconOrImageChoiceBackgroundColor,\n      height: '100%'\n    }],\n    choiceFieldWrapper: [classNames.choiceFieldWrapper, focused && getChoiceGroupFocusStyle(focusBorderColor, hasIcon || hasImage)],\n    // The hidden input\n    input: [classNames.input, {\n      position: 'absolute',\n      opacity: 0,\n      top: 0,\n      right: 0,\n      width: '100%',\n      height: '100%',\n      margin: 0\n    }, disabled && 'is-disabled'],\n    field: [classNames.field, checked && classNames.checked, {\n      display: 'inline-block',\n      cursor: 'pointer',\n      marginTop: 0,\n      position: 'relative',\n      verticalAlign: 'top',\n      userSelect: 'none',\n      minHeight: 20,\n      selectors: {\n        ':hover': !disabled && fieldHoverOrFocusProperties,\n        ':focus': !disabled && fieldHoverOrFocusProperties,\n        // The circle\n        ':before': circleAreaProperties,\n        // The dot\n        ':after': dotAreaProperties\n      }\n    }, hasIcon && 'ms-ChoiceField--icon', hasImage && 'ms-ChoiceField-field--image', (hasIcon || hasImage) && {\n      boxSizing: 'content-box',\n      cursor: 'pointer',\n      paddingTop: 22,\n      margin: 0,\n      textAlign: 'center',\n      transitionProperty: 'all',\n      transitionDuration: choiceFieldTransitionDuration,\n      transitionTimingFunction: 'ease',\n      border: '1px solid transparent',\n      justifyContent: 'center',\n      alignItems: 'center',\n      display: 'flex',\n      flexDirection: 'column'\n    }, checked && {\n      borderColor: iconOrImageChoiceBorderCheckedColor\n    }, (hasIcon || hasImage) && !disabled && {\n      selectors: {\n        ':hover': enabledFieldWithImageHoverOrFocusProperties,\n        ':focus': enabledFieldWithImageHoverOrFocusProperties\n      }\n    }, disabled && {\n      cursor: 'default',\n      selectors: {\n        '.ms-ChoiceFieldLabel': {\n          color: semanticColors.disabledBodyText,\n          selectors: (_d = {}, _d[HighContrastSelector] = __assign({\n            color: 'GrayText'\n          }, getHighContrastNoAdjustStyle()), _d)\n        }\n      }\n    }, checked && disabled && {\n      borderColor: iconOrImageChoiceBackgroundColor\n    }],\n    innerField: [classNames.innerField, hasImage && {\n      // using non-null assertion because we have a default in `ChoiceGroupOptionBase` class.\n      height: imageSize.height,\n      width: imageSize.width\n    }, (hasIcon || hasImage) && {\n      position: 'relative',\n      display: 'inline-block',\n      paddingLeft: 30,\n      paddingRight: 30\n    }, (hasIcon || hasImage) && imageIsLarge && {\n      paddingLeft: 24,\n      paddingRight: 24\n    }, (hasIcon || hasImage) && disabled && {\n      opacity: 0.25,\n      selectors: (_e = {}, _e[HighContrastSelector] = {\n        color: 'GrayText',\n        opacity: 1\n      }, _e)\n    }],\n    imageWrapper: getImageWrapperStyle(false, classNames.imageWrapper, checked),\n    selectedImageWrapper: getImageWrapperStyle(true, classNames.imageWrapper, checked),\n    iconWrapper: [classNames.iconWrapper, {\n      fontSize: iconSize,\n      lineHeight: iconSize,\n      height: iconSize\n    }],\n    labelWrapper: [classNames.labelWrapper, fonts.medium, (hasIcon || hasImage) && {\n      display: 'block',\n      position: 'relative',\n      margin: '4px 8px 2px 8px',\n      height: labelWrapperHeight,\n      lineHeight: labelWrapperLineHeight,\n      // using non-null assertion because we have a default in `ChoiceGroupOptionBase` class.\n      maxWidth: imageSize.width * 2,\n      overflow: 'hidden',\n      whiteSpace: 'pre-wrap'\n    }]\n  };\n};","map":{"version":3,"mappings":";AAAA,SAASA,oBAAT,EAA+BC,mBAA/B,EAAoDC,4BAApD,QAAwF,kBAAxF;AACA,SAASC,uBAAT,QAAwC,oBAAxC;AAIA,IAAMC,gBAAgB,GAAG;AACvBC,MAAI,EAAE,gBADiB;AAEvBC,oBAAkB,EAAE,wBAFG;AAGvBC,OAAK,EAAE,sBAHgB;AAIvBC,OAAK,EAAE,sBAJgB;AAKvBC,YAAU,EAAE,2BALW;AAMvBC,cAAY,EAAE,6BANS;AAOvBC,aAAW,EAAE,4BAPU;AAQvBC,cAAY,EAAE,6BARS;AASvBC,SAAO,EAAE;AATc,CAAzB;AAYA,IAAMC,sBAAsB,GAAG,EAA/B;AACA,IAAMC,kBAAkB,GAAGD,sBAAsB,GAAG,CAAzB,GAA6B,CAAxD,C,CAA2D;;AAC3D,IAAME,QAAQ,GAAG,EAAjB;AACA,IAAMC,eAAe,GAAG,EAAxB;AACA,IAAMC,6BAA6B,GAAG,OAAtC;AACA,IAAMC,2BAA2B,GAAG,6BAApC;AACA,IAAMC,kBAAkB,GAAG,CAA3B;AACA,IAAMC,oBAAoB,GAAG,CAA7B;;AAEA,SAASC,wBAAT,CAAkCC,gBAAlC,EAA4DC,cAA5D,EAAoF;;;AAClF,SAAO,CACL,YADK,EAEL;AACEC,aAAS,YACPC,GAAC,MAAIvB,uBAAJ,GAA2B,IAA5B,IAAmC;AACjCwB,cAAQ,EAAE,UADuB;AAEjCC,aAAO,EAAE,aAFwB;AAGjCH,eAAS,EAAE;AACT,8BAAsB;AACpBI,gBAAM,EAAE;AADY,SADb;AAIT,kBAAU;AACRC,iBAAO,EAAE,IADD;AAERC,aAAG,EAAE,CAAC,CAFE;AAGRC,eAAK,EAAE,CAAC,CAHA;AAIRC,gBAAM,EAAE,CAAC,CAJD;AAKRC,cAAI,EAAE,CAAC,CALC;AAMRC,uBAAa,EAAE,MANP;AAORN,gBAAM,EAAE,eAAaN,gBAPb;AAQRI,kBAAQ,EAAE,UARF;AASRF,mBAAS,YACPW,GAACpC,oBAAD,IAAwB;AACtBqC,uBAAW,EAAE,YADS;AAEtBC,uBAAW,EAAEd,cAAc,GAAG,CAAH,GAAO;AAFZ,WADjB;AATD;AAJD;AAHsB,KAD5B;AADX,GAFK,CAAP;AAgCD;;AAED,SAASe,oBAAT,CAA8BC,sBAA9B,EAA+DC,SAA/D,EAAmF5B,OAAnF,EAAoG;AAClG,SAAO,CACL4B,SADK,EAEL;AACEC,iBAAa,EAAE,CADjB;AAEEC,sBAAkB,EAAE,SAFtB;AAGEC,sBAAkB,EAAE1B,6BAHtB;AAIE2B,4BAAwB,EAAE,MAJ5B;AAKEpB,aAAS,EAAE;AACT,mBAAa;AACXqB,eAAO,EAAE,cADE;AAEXC,mBAAW,EAAE;AAFF;AADJ;AALb,GAFK,EAcL,CAAClC,OAAO,GAAG,CAAC2B,sBAAJ,GAA6BA,sBAArC,KAAgE,CAC9D,WAD8D,EAE9D;AACEb,YAAQ,EAAE,UADZ;AAEEO,QAAI,EAAE,CAFR;AAGEH,OAAG,EAAE,CAHP;AAIEiB,SAAK,EAAE,MAJT;AAKEC,UAAM,EAAE,MALV;AAMEC,YAAQ,EAAE,QANZ;AAOEC,WAAO,EAAE;AAPX,GAF8D,CAd3D,CAAP;AA2BD;;AAED,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAoC;;;AACnD,WAAK,GAA6EA,KAAK,MAAvF;AAAA,MAAOC,OAAO,GAAoED,KAAK,QAAvF;AAAA,MAAgBE,QAAQ,GAA0DF,KAAK,SAAvF;AAAA,MAA0BxC,OAAO,GAAiDwC,KAAK,QAAvF;AAAA,MAAmCG,QAAQ,GAAuCH,KAAK,SAAvF;AAAA,MAA6CI,YAAY,GAAyBJ,KAAK,aAAvF;AAAA,MAA2DK,OAAO,GAAgBL,KAAK,QAAvF;AAAA,MAAoEM,SAAS,GAAKN,KAAK,UAAvF;AACA,aAAO,GAA4BO,KAAK,QAAxC;AAAA,MAASC,cAAc,GAAYD,KAAK,eAAxC;AAAA,MAAyBE,KAAK,GAAKF,KAAK,MAAxC;AAER,MAAMG,UAAU,GAAG9D,mBAAmB,CAACG,gBAAD,EAAmBwD,KAAnB,CAAtC,CAJ2D,CAM3D;AACA;;AACA,MAAMI,iBAAiB,GAAGC,OAAO,CAACC,cAAlC;AACA,MAAMC,wBAAwB,GAAGN,cAAc,CAACO,kBAAhD;AACA,MAAMC,wBAAwB,GAAGR,cAAc,CAACS,sBAAhD,CAV2D,CAW3D;;AACA,MAAMC,+BAA+B,GAAGN,OAAO,CAACO,SAAhD;AACA,MAAMC,yBAAyB,GAAGZ,cAAc,CAACa,mBAAjD;AACA,MAAMC,qBAAqB,GAAGd,cAAc,CAACe,cAA7C;AACA,MAAMC,wBAAwB,GAAGZ,OAAO,CAACa,gBAAzC;AACA,MAAMC,eAAe,GAAGlB,cAAc,CAACS,sBAAvC,CAhB2D,CAiB3D;;AACA,MAAMU,sBAAsB,GAAGf,OAAO,CAACO,SAAvC;AACA,MAAMS,gBAAgB,GAAGpB,cAAc,CAACa,mBAAxC,CAnB2D,CAoB3D;;AACA,MAAMQ,oBAAoB,GAAGjB,OAAO,CAACkB,WAArC;AACA,MAAM5D,gBAAgB,GAAGsC,cAAc,CAACuB,WAAxC;AACA,MAAMC,4CAA4C,GAAGxB,cAAc,CAACO,kBAApE,CAvB2D,CAwB3D;;AACA,MAAMkB,mCAAmC,GAAGzB,cAAc,CAACS,sBAA3D;AACA,MAAMiB,0CAA0C,GAAGtB,OAAO,CAACO,SAA3D;AACA,MAAMgB,gCAAgC,GAAGvB,OAAO,CAACwB,cAAjD;AAEA,MAAMC,2BAA2B,GAAG;AAClCjE,aAAS,EAAE;AACT,8BAAwB;AACtBkE,aAAK,EAAET;AADe,OADf;AAIT,iBAAW;AACT7C,mBAAW,EAAExB,OAAO,GAAG0D,+BAAH,GAAqCJ;AADhD,OAJF;AAOT,gBAAU,CACR,CAACb,OAAD,IACE,CAACC,QADH,IAEE,CAAC1C,OAFH,IAEc;AACViB,eAAO,EAAE,IADC;AAEVa,0BAAkB,EAAE,kBAFV;AAGVT,YAAI,EAAE,CAHI;AAIVH,WAAG,EAAE,CAJK;AAKViB,aAAK,EAAE,EALG;AAMVC,cAAM,EAAE,EANE;AAOV2C,uBAAe,EAAEf;AAPP,OAHN,EAYRhE,OAAO,IAAI;AACTwB,mBAAW,EAAE2C,sBADJ;AAETa,kBAAU,EAAEb;AAFH,OAZH;AAPD;AADuB,GAApC;AA4BA,MAAMc,2CAA2C,GAAG;AAClDzD,eAAW,EAAExB,OAAO,GAAG0E,0CAAH,GAAgDF,4CADlB;AAElD5D,aAAS,EAAE;AACT,iBAAW;AACT0B,eAAO,EAAE,CADA;AAETd,mBAAW,EAAExB,OAAO,GAAG0D,+BAAH,GAAqCJ;AAFhD;AADF;AAFuC,GAApD;AAUA,MAAM4B,oBAAoB,GAAW,CACnC;AACEjE,WAAO,EAAE,IADX;AAEEgB,WAAO,EAAE,cAFX;AAGE8C,mBAAe,EAAEjB,qBAHnB;AAIErC,eAAW,EAAE,CAJf;AAKES,eAAW,EAAE,OALf;AAMEV,eAAW,EAAE2B,iBANf;AAOEhB,SAAK,EAAE/B,eAPT;AAQEgC,UAAM,EAAEhC,eARV;AASE+E,cAAU,EAAE,QATd;AAUErE,YAAQ,EAAE,UAVZ;AAWEI,OAAG,EAAE,CAXP;AAYEG,QAAI,EAAE,CAZR;AAaE+D,aAAS,EAAE,YAbb;AAcEtD,sBAAkB,EAAE,cAdtB;AAeEC,sBAAkB,EAAE1B,6BAftB;AAgBE2B,4BAAwB,EAAE1B,2BAhB5B;AAiBE+E,gBAAY,EAAE;AAjBhB,GADmC,EAoBnC1C,QAAQ,IAAI;AACVnB,eAAW,EAAEoC,yBADH;AAEVhD,aAAS,YACPC,GAAC1B,oBAAD,IAAqBmG;AACnB9D,iBAAW,EAAE,UADM;AAEnBwD,gBAAU,EAAE;AAFO,OAGhB3F,4BAA4B,EAHZ,CADd;AAFC,GApBuB,EA8BnCW,OAAO,IAAI;AACTwB,eAAW,EAAEmB,QAAQ,GAAGiB,yBAAH,GAA+BJ,wBAD3C;AAET5C,aAAS,YACPW,GAACpC,oBAAD,IAAwB;AACtBqC,iBAAW,EAAE,WADS;AAEtBwD,gBAAU,EAAE,QAFU;AAGtBO,uBAAiB,EAAE;AAHG,KADjB;AAFA,GA9BwB,EAwCnC,CAAC9C,OAAO,IAAIC,QAAZ,KAAyB;AACvBxB,OAAG,EAAEX,kBADkB;AAEvBY,SAAK,EAAEZ,kBAFgB;AAGvBc,QAAI,EAAE,MAHiB;AAIvBiB,WAAO,EAAEtC,OAAO,GAAG,CAAH,GAAO;AAJA,GAxCU,CAArC;AAgDA,MAAMwF,iBAAiB,GAAW,CAChC;AACEvE,WAAO,EAAE,IADX;AAEEkB,SAAK,EAAE,CAFT;AAGEC,UAAM,EAAE,CAHV;AAIEiD,gBAAY,EAAE,KAJhB;AAKEvE,YAAQ,EAAE,UALZ;AAMEO,QAAI,EAAEjB,eAAe,GAAG,CAN1B;AAOEe,SAAK,EAAE,CAPT;AAQEW,sBAAkB,EAAE,cARtB;AASEC,sBAAkB,EAAE1B,6BATtB;AAUE2B,4BAAwB,EAAE1B,2BAV5B;AAWE8E,aAAS,EAAE;AAXb,GADgC,EAchCpF,OAAO,IAAI;AACTyB,eAAW,EAAE,CADJ;AAETS,eAAW,EAAE,OAFJ;AAGTV,eAAW,EAAEmB,QAAQ,GAAGyB,gBAAH,GAAsBF,eAHlC;AAITc,cAAU,EAAEd,eAJH;AAKT7C,QAAI,EAAE,CALG;AAMTH,OAAG,EAAE,CANI;AAOTiB,SAAK,EAAE,EAPE;AAQTC,UAAM,EAAE,EARC;AASTxB,aAAS,YACP6E,GAACtG,oBAAD,IAAwB;AACtBqC,iBAAW,EAAE,WADS;AAEtB+D,uBAAiB,EAAE;AAFG,KADjB;AATA,GAdqB,EA8BhCvF,OAAO,KACJyC,OAAO,IAAIC,QADP,CAAP,IAC2B;AACvBxB,OAAG,EAAEX,kBAAkB,GAAGC,oBADH;AAEvBW,SAAK,EAAEZ,kBAAkB,GAAGC,oBAFL;AAGvBa,QAAI,EAAE,MAHiB,CAGT;;AAHS,GA/BK,CAAlC;AAsCA,SAAO;AACL7B,QAAI,EAAE,CACJ0D,UAAU,CAAC1D,IADP,EAEJuD,KAAK,CAACE,KAAN,CAAYyC,MAFR,EAGJ;AACEzD,aAAO,EAAE,MADX;AAEE0D,gBAAU,EAAE,QAFd;AAGEP,eAAS,EAAE,YAHb;AAIEN,WAAK,EAAE9B,cAAc,CAAC4C,QAJxB;AAKEC,eAAS,EAAE,EALb;AAME7E,YAAM,EAAE,MANV;AAOEF,cAAQ,EAAE,UAPZ;AAQEgF,eAAS,EAAE,CARb;AASElF,eAAS,EAAE;AACT,gCAAwB;AACtBqB,iBAAO,EAAE;AADa;AADf;AATb,KAHI,EAkBJ,CAACQ,OAAD,IACE,CAACC,QADH,IACe;AACX9B,eAAS,EAAE;AACT,gCAAwB;AACtBmF,qBAAW,EAAE;AADS;AADf;AADA,KAnBX,EA0BJrD,QAAQ,IAAI,uBA1BR,EA2BJD,OAAO,IAAI,sBA3BP,EA4BJ,CAACA,OAAO,IAAIC,QAAZ,KAAyB;AACvBT,aAAO,EAAE,aADc;AAEvB+D,cAAQ,EAAE,CAFa;AAGvBC,YAAM,EAAE,aAHe;AAIvBF,iBAAW,EAAE,CAJU;AAKvBhB,qBAAe,EAAEJ,gCALM;AAMvBvC,YAAM,EAAE;AANe,KA5BrB,CADD;AAsCL3C,sBAAkB,EAAE,CAClByD,UAAU,CAACzD,kBADO,EAElBoD,OAAO,IAAIpC,wBAAwB,CAACC,gBAAD,EAAmB+B,OAAO,IAAIC,QAA9B,CAFjB,CAtCf;AA0CL;AACAhD,SAAK,EAAE,CACLwD,UAAU,CAACxD,KADN,EAEL;AACEoB,cAAQ,EAAE,UADZ;AAEEwB,aAAO,EAAE,CAFX;AAGEpB,SAAG,EAAE,CAHP;AAIEC,WAAK,EAAE,CAJT;AAKEgB,WAAK,EAAE,MALT;AAMEC,YAAM,EAAE,MANV;AAOE6D,YAAM,EAAE;AAPV,KAFK,EAWLtD,QAAQ,IAAI,aAXP,CA3CF;AAwDLhD,SAAK,EAAE,CACLuD,UAAU,CAACvD,KADN,EAELK,OAAO,IAAIkD,UAAU,CAAClD,OAFjB,EAGL;AACEiC,aAAO,EAAE,cADX;AAEEiE,YAAM,EAAE,SAFV;AAGEJ,eAAS,EAAE,CAHb;AAIEhF,cAAQ,EAAE,UAJZ;AAKEqF,mBAAa,EAAE,KALjB;AAMEC,gBAAU,EAAE,MANd;AAOEP,eAAS,EAAE,EAPb;AAQEjF,eAAS,EAAE;AACT,kBAAU,CAAC+B,QAAD,IAAakC,2BADd;AAET,kBAAU,CAAClC,QAAD,IAAakC,2BAFd;AAIT;AACA,mBAAWK,oBALF;AAOT;AACA,kBAAUM;AARD;AARb,KAHK,EAsBL/C,OAAO,IAAI,sBAtBN,EAuBLC,QAAQ,IAAI,6BAvBP,EAwBL,CAACD,OAAO,IAAIC,QAAZ,KAAyB;AACvB0C,eAAS,EAAE,aADY;AAEvBc,YAAM,EAAE,SAFe;AAGvBG,gBAAU,EAAE,EAHW;AAIvBJ,YAAM,EAAE,CAJe;AAKvBK,eAAS,EAAE,QALY;AAMvBxE,wBAAkB,EAAE,KANG;AAOvBC,wBAAkB,EAAE1B,6BAPG;AAQvB2B,8BAAwB,EAAE,MARH;AASvBhB,YAAM,EAAE,uBATe;AAUvBuF,oBAAc,EAAE,QAVO;AAWvBZ,gBAAU,EAAE,QAXW;AAYvB1D,aAAO,EAAE,MAZc;AAavBuE,mBAAa,EAAE;AAbQ,KAxBpB,EAuCLxG,OAAO,IAAI;AACTwB,iBAAW,EAAEiD;AADJ,KAvCN,EA0CL,CAAChC,OAAO,IAAIC,QAAZ,KACE,CAACC,QADH,IACe;AACX/B,eAAS,EAAE;AACT,kBAAUqE,2CADD;AAET,kBAAUA;AAFD;AADA,KA3CV,EAiDLtC,QAAQ,IAAI;AACVuD,YAAM,EAAE,SADE;AAEVtF,eAAS,EAAE;AACT,gCAAwB;AACtBkE,eAAK,EAAE9B,cAAc,CAACyD,gBADA;AAEtB7F,mBAAS,YACP8F,GAACvH,oBAAD,IAAqBmG;AACnBR,iBAAK,EAAE;AADY,aAEhBzF,4BAA4B,EAFZ,CADd;AAFa;AADf;AAFD,KAjDP,EA+DLW,OAAO,IACL2C,QADF,IACc;AACVnB,iBAAW,EAAEmD;AADH,KAhET,CAxDF;AA4HL/E,cAAU,EAAE,CACVsD,UAAU,CAACtD,UADD,EAEV8C,QAAQ,IAAI;AACV;AACAN,YAAM,EAAEU,SAAU,CAACV,MAFT;AAGVD,WAAK,EAAEW,SAAU,CAACX;AAHR,KAFF,EAOV,CAACM,OAAO,IAAIC,QAAZ,KAAyB;AACvB5B,cAAQ,EAAE,UADa;AAEvBmB,aAAO,EAAE,cAFc;AAGvB8D,iBAAW,EAAE,EAHU;AAIvBY,kBAAY,EAAE;AAJS,KAPf,EAaV,CAAClE,OAAO,IAAIC,QAAZ,KACEE,YADF,IACkB;AACdmD,iBAAW,EAAE,EADC;AAEdY,kBAAY,EAAE;AAFA,KAdR,EAkBV,CAAClE,OAAO,IAAIC,QAAZ,KACEC,QADF,IACc;AACVL,aAAO,EAAE,IADC;AAEV1B,eAAS,YACPgG,GAACzH,oBAAD,IAAwB;AACtB2F,aAAK,EAAE,UADe;AAEtBxC,eAAO,EAAE;AAFa,OADjB;AAFC,KAnBJ,CA5HP;AAyJLzC,gBAAY,EAAE6B,oBAAoB,CAAC,KAAD,EAAQwB,UAAU,CAACrD,YAAnB,EAAiCG,OAAjC,CAzJ7B;AA0JL6G,wBAAoB,EAAEnF,oBAAoB,CAAC,IAAD,EAAOwB,UAAU,CAACrD,YAAlB,EAAgCG,OAAhC,CA1JrC;AA2JLF,eAAW,EAAE,CACXoD,UAAU,CAACpD,WADA,EAEX;AACEkG,cAAQ,EAAE7F,QADZ;AAEE2G,gBAAU,EAAE3G,QAFd;AAGEiC,YAAM,EAAEjC;AAHV,KAFW,CA3JR;AAmKLJ,gBAAY,EAAE,CACZmD,UAAU,CAACnD,YADC,EAEZkD,KAAK,CAACyC,MAFM,EAGZ,CAACjD,OAAO,IAAIC,QAAZ,KAAyB;AACvBT,aAAO,EAAE,OADc;AAEvBnB,cAAQ,EAAE,UAFa;AAGvBmF,YAAM,EAAE,iBAHe;AAIvB7D,YAAM,EAAElC,kBAJe;AAKvB4G,gBAAU,EAAE7G,sBALW;AAMvB;AACA8G,cAAQ,EAAEjE,SAAU,CAACX,KAAX,GAAmB,CAPN;AAQvBE,cAAQ,EAAE,QARa;AASvB2E,gBAAU,EAAE;AATW,KAHb;AAnKT,GAAP;AAmLD,CA5UM","names":["HighContrastSelector","getGlobalClassNames","getHighContrastNoAdjustStyle","IsFocusVisibleClassName","GlobalClassNames","root","choiceFieldWrapper","input","field","innerField","imageWrapper","iconWrapper","labelWrapper","checked","labelWrapperLineHeight","labelWrapperHeight","iconSize","choiceFieldSize","choiceFieldTransitionDuration","choiceFieldTransitionTiming","radioButtonSpacing","radioButtonInnerSize","getChoiceGroupFocusStyle","focusBorderColor","hasIconOrImage","selectors","_a","position","outline","border","content","top","right","bottom","left","pointerEvents","_b","borderColor","borderWidth","getImageWrapperStyle","isSelectedImageWrapper","className","paddingBottom","transitionProperty","transitionDuration","transitionTimingFunction","display","borderStyle","width","height","overflow","opacity","getStyles","props","hasIcon","hasImage","disabled","imageIsLarge","focused","imageSize","theme","semanticColors","fonts","classNames","circleBorderColor","palette","neutralPrimary","circleHoveredBorderColor","inputBorderHovered","circleCheckedBorderColor","inputBackgroundChecked","circleCheckedHoveredBorderColor","themeDark","circleDisabledBorderColor","disabledBodySubtext","circleBackgroundColor","bodyBackground","dotUncheckedHoveredColor","neutralSecondary","dotCheckedColor","dotCheckedHoveredColor","dotDisabledColor","labelHoverFocusColor","neutralDark","focusBorder","iconOrImageChoiceBorderUncheckedHoveredColor","iconOrImageChoiceBorderCheckedColor","iconOrImageChoiceBorderCheckedHoveredColor","iconOrImageChoiceBackgroundColor","neutralLighter","fieldHoverOrFocusProperties","color","backgroundColor","background","enabledFieldWithImageHoverOrFocusProperties","circleAreaProperties","fontWeight","boxSizing","borderRadius","__assign","forcedColorAdjust","dotAreaProperties","_c","medium","alignItems","bodyText","minHeight","marginTop","paddingLeft","fontSize","margin","cursor","verticalAlign","userSelect","paddingTop","textAlign","justifyContent","flexDirection","disabledBodyText","_d","paddingRight","_e","selectedImageWrapper","lineHeight","maxWidth","whiteSpace"],"sources":["/home/runner/work/Reaction/Reaction/employee-info/node_modules/@fluentui/react/lib/components/ChoiceGroup/src/components/ChoiceGroup/ChoiceGroupOption/ChoiceGroupOption.styles.ts"],"sourcesContent":["import { HighContrastSelector, getGlobalClassNames, getHighContrastNoAdjustStyle } from '../../../Styling';\nimport { IsFocusVisibleClassName } from '../../../Utilities';\nimport type { IStyle } from '../../../Styling';\nimport type { IChoiceGroupOptionStyleProps, IChoiceGroupOptionStyles } from './ChoiceGroupOption.types';\n\nconst GlobalClassNames = {\n  root: 'ms-ChoiceField',\n  choiceFieldWrapper: 'ms-ChoiceField-wrapper',\n  input: 'ms-ChoiceField-input',\n  field: 'ms-ChoiceField-field',\n  innerField: 'ms-ChoiceField-innerField',\n  imageWrapper: 'ms-ChoiceField-imageWrapper',\n  iconWrapper: 'ms-ChoiceField-iconWrapper',\n  labelWrapper: 'ms-ChoiceField-labelWrapper',\n  checked: 'is-checked',\n};\n\nconst labelWrapperLineHeight = 15;\nconst labelWrapperHeight = labelWrapperLineHeight * 2 + 2; // adding 2px height to ensure text doesn't get cutoff\nconst iconSize = 32;\nconst choiceFieldSize = 20;\nconst choiceFieldTransitionDuration = '200ms';\nconst choiceFieldTransitionTiming = 'cubic-bezier(.4, 0, .23, 1)';\nconst radioButtonSpacing = 3;\nconst radioButtonInnerSize = 5;\n\nfunction getChoiceGroupFocusStyle(focusBorderColor: string, hasIconOrImage?: boolean): IStyle {\n  return [\n    'is-inFocus',\n    {\n      selectors: {\n        [`.${IsFocusVisibleClassName} &`]: {\n          position: 'relative',\n          outline: 'transparent',\n          selectors: {\n            '::-moz-focus-inner': {\n              border: 0,\n            },\n            ':after': {\n              content: '\"\"',\n              top: -2,\n              right: -2,\n              bottom: -2,\n              left: -2,\n              pointerEvents: 'none',\n              border: `1px solid ${focusBorderColor}`,\n              position: 'absolute',\n              selectors: {\n                [HighContrastSelector]: {\n                  borderColor: 'WindowText',\n                  borderWidth: hasIconOrImage ? 1 : 2,\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  ];\n}\n\nfunction getImageWrapperStyle(isSelectedImageWrapper: boolean, className?: string, checked?: boolean): IStyle {\n  return [\n    className,\n    {\n      paddingBottom: 2,\n      transitionProperty: 'opacity',\n      transitionDuration: choiceFieldTransitionDuration,\n      transitionTimingFunction: 'ease',\n      selectors: {\n        '.ms-Image': {\n          display: 'inline-block',\n          borderStyle: 'none',\n        },\n      },\n    },\n    (checked ? !isSelectedImageWrapper : isSelectedImageWrapper) && [\n      'is-hidden',\n      {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden',\n        opacity: 0,\n      },\n    ],\n  ];\n}\n\nexport const getStyles = (props: IChoiceGroupOptionStyleProps): IChoiceGroupOptionStyles => {\n  const { theme, hasIcon, hasImage, checked, disabled, imageIsLarge, focused, imageSize } = props;\n  const { palette, semanticColors, fonts } = theme;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  // Tokens\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.smallInputBorder\n  const circleBorderColor = palette.neutralPrimary;\n  const circleHoveredBorderColor = semanticColors.inputBorderHovered;\n  const circleCheckedBorderColor = semanticColors.inputBackgroundChecked;\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBackgroundCheckedHovered\n  const circleCheckedHoveredBorderColor = palette.themeDark;\n  const circleDisabledBorderColor = semanticColors.disabledBodySubtext;\n  const circleBackgroundColor = semanticColors.bodyBackground;\n  const dotUncheckedHoveredColor = palette.neutralSecondary;\n  const dotCheckedColor = semanticColors.inputBackgroundChecked;\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBackgroundCheckedHovered\n  const dotCheckedHoveredColor = palette.themeDark;\n  const dotDisabledColor = semanticColors.disabledBodySubtext;\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.bodyTextChecked\n  const labelHoverFocusColor = palette.neutralDark;\n  const focusBorderColor = semanticColors.focusBorder;\n  const iconOrImageChoiceBorderUncheckedHoveredColor = semanticColors.inputBorderHovered;\n  // TODO: after updating the semanticColors slots mapping this needs to be semanticColors.inputBackgroundCheckedHovered\n  const iconOrImageChoiceBorderCheckedColor = semanticColors.inputBackgroundChecked;\n  const iconOrImageChoiceBorderCheckedHoveredColor = palette.themeDark;\n  const iconOrImageChoiceBackgroundColor = palette.neutralLighter;\n\n  const fieldHoverOrFocusProperties = {\n    selectors: {\n      '.ms-ChoiceFieldLabel': {\n        color: labelHoverFocusColor,\n      },\n      ':before': {\n        borderColor: checked ? circleCheckedHoveredBorderColor : circleHoveredBorderColor,\n      },\n      ':after': [\n        !hasIcon &&\n          !hasImage &&\n          !checked && {\n            content: '\"\"',\n            transitionProperty: 'background-color',\n            left: 5,\n            top: 5,\n            width: 10,\n            height: 10,\n            backgroundColor: dotUncheckedHoveredColor,\n          },\n        checked && {\n          borderColor: dotCheckedHoveredColor,\n          background: dotCheckedHoveredColor,\n        },\n      ],\n    },\n  };\n\n  const enabledFieldWithImageHoverOrFocusProperties = {\n    borderColor: checked ? iconOrImageChoiceBorderCheckedHoveredColor : iconOrImageChoiceBorderUncheckedHoveredColor,\n    selectors: {\n      ':before': {\n        opacity: 1,\n        borderColor: checked ? circleCheckedHoveredBorderColor : circleHoveredBorderColor,\n      },\n    },\n  };\n\n  const circleAreaProperties: IStyle = [\n    {\n      content: '\"\"',\n      display: 'inline-block',\n      backgroundColor: circleBackgroundColor,\n      borderWidth: 1,\n      borderStyle: 'solid',\n      borderColor: circleBorderColor,\n      width: choiceFieldSize,\n      height: choiceFieldSize,\n      fontWeight: 'normal',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      boxSizing: 'border-box',\n      transitionProperty: 'border-color',\n      transitionDuration: choiceFieldTransitionDuration,\n      transitionTimingFunction: choiceFieldTransitionTiming,\n      borderRadius: '50%',\n    },\n    disabled && {\n      borderColor: circleDisabledBorderColor,\n      selectors: {\n        [HighContrastSelector]: {\n          borderColor: 'GrayText',\n          background: 'Window',\n          ...getHighContrastNoAdjustStyle(),\n        },\n      },\n    },\n    checked && {\n      borderColor: disabled ? circleDisabledBorderColor : circleCheckedBorderColor,\n      selectors: {\n        [HighContrastSelector]: {\n          borderColor: 'Highlight',\n          background: 'Window',\n          forcedColorAdjust: 'none',\n        },\n      },\n    },\n    (hasIcon || hasImage) && {\n      top: radioButtonSpacing,\n      right: radioButtonSpacing,\n      left: 'auto', // To reset the value of 'left' to its default value, so that 'right' works\n      opacity: checked ? 1 : 0,\n    },\n  ];\n\n  const dotAreaProperties: IStyle = [\n    {\n      content: '\"\"',\n      width: 0,\n      height: 0,\n      borderRadius: '50%',\n      position: 'absolute',\n      left: choiceFieldSize / 2,\n      right: 0,\n      transitionProperty: 'border-width',\n      transitionDuration: choiceFieldTransitionDuration,\n      transitionTimingFunction: choiceFieldTransitionTiming,\n      boxSizing: 'border-box',\n    },\n    checked && {\n      borderWidth: 5,\n      borderStyle: 'solid',\n      borderColor: disabled ? dotDisabledColor : dotCheckedColor,\n      background: dotCheckedColor,\n      left: 5,\n      top: 5,\n      width: 10,\n      height: 10,\n      selectors: {\n        [HighContrastSelector]: {\n          borderColor: 'Highlight',\n          forcedColorAdjust: 'none',\n        },\n      },\n    },\n    checked &&\n      (hasIcon || hasImage) && {\n        top: radioButtonSpacing + radioButtonInnerSize,\n        right: radioButtonSpacing + radioButtonInnerSize,\n        left: 'auto', // To reset the value of 'left' to its default value, so that 'right' works\n      },\n  ];\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      {\n        display: 'flex',\n        alignItems: 'center',\n        boxSizing: 'border-box',\n        color: semanticColors.bodyText,\n        minHeight: 26,\n        border: 'none',\n        position: 'relative',\n        marginTop: 8,\n        selectors: {\n          '.ms-ChoiceFieldLabel': {\n            display: 'inline-block',\n          },\n        },\n      },\n      !hasIcon &&\n        !hasImage && {\n          selectors: {\n            '.ms-ChoiceFieldLabel': {\n              paddingLeft: '26px',\n            },\n          },\n        },\n      hasImage && 'ms-ChoiceField--image',\n      hasIcon && 'ms-ChoiceField--icon',\n      (hasIcon || hasImage) && {\n        display: 'inline-flex',\n        fontSize: 0,\n        margin: '0 4px 4px 0',\n        paddingLeft: 0,\n        backgroundColor: iconOrImageChoiceBackgroundColor,\n        height: '100%',\n      },\n    ],\n    choiceFieldWrapper: [\n      classNames.choiceFieldWrapper,\n      focused && getChoiceGroupFocusStyle(focusBorderColor, hasIcon || hasImage),\n    ],\n    // The hidden input\n    input: [\n      classNames.input,\n      {\n        position: 'absolute',\n        opacity: 0,\n        top: 0,\n        right: 0,\n        width: '100%',\n        height: '100%',\n        margin: 0,\n      },\n      disabled && 'is-disabled',\n    ],\n    field: [\n      classNames.field,\n      checked && classNames.checked,\n      {\n        display: 'inline-block',\n        cursor: 'pointer',\n        marginTop: 0,\n        position: 'relative',\n        verticalAlign: 'top',\n        userSelect: 'none',\n        minHeight: 20,\n        selectors: {\n          ':hover': !disabled && fieldHoverOrFocusProperties,\n          ':focus': !disabled && fieldHoverOrFocusProperties,\n\n          // The circle\n          ':before': circleAreaProperties,\n\n          // The dot\n          ':after': dotAreaProperties,\n        },\n      },\n      hasIcon && 'ms-ChoiceField--icon',\n      hasImage && 'ms-ChoiceField-field--image',\n      (hasIcon || hasImage) && {\n        boxSizing: 'content-box',\n        cursor: 'pointer',\n        paddingTop: 22,\n        margin: 0,\n        textAlign: 'center',\n        transitionProperty: 'all',\n        transitionDuration: choiceFieldTransitionDuration,\n        transitionTimingFunction: 'ease',\n        border: '1px solid transparent',\n        justifyContent: 'center',\n        alignItems: 'center',\n        display: 'flex',\n        flexDirection: 'column',\n      },\n      checked && {\n        borderColor: iconOrImageChoiceBorderCheckedColor,\n      },\n      (hasIcon || hasImage) &&\n        !disabled && {\n          selectors: {\n            ':hover': enabledFieldWithImageHoverOrFocusProperties,\n            ':focus': enabledFieldWithImageHoverOrFocusProperties,\n          },\n        },\n      disabled && {\n        cursor: 'default',\n        selectors: {\n          '.ms-ChoiceFieldLabel': {\n            color: semanticColors.disabledBodyText,\n            selectors: {\n              [HighContrastSelector]: {\n                color: 'GrayText',\n                ...getHighContrastNoAdjustStyle(),\n              },\n            },\n          },\n        },\n      },\n      checked &&\n        disabled && {\n          borderColor: iconOrImageChoiceBackgroundColor,\n        },\n    ],\n    innerField: [\n      classNames.innerField,\n      hasImage && {\n        // using non-null assertion because we have a default in `ChoiceGroupOptionBase` class.\n        height: imageSize!.height,\n        width: imageSize!.width,\n      },\n      (hasIcon || hasImage) && {\n        position: 'relative',\n        display: 'inline-block',\n        paddingLeft: 30,\n        paddingRight: 30,\n      },\n      (hasIcon || hasImage) &&\n        imageIsLarge && {\n          paddingLeft: 24,\n          paddingRight: 24,\n        },\n      (hasIcon || hasImage) &&\n        disabled && {\n          opacity: 0.25,\n          selectors: {\n            [HighContrastSelector]: {\n              color: 'GrayText',\n              opacity: 1,\n            },\n          },\n        },\n    ],\n    imageWrapper: getImageWrapperStyle(false, classNames.imageWrapper, checked),\n    selectedImageWrapper: getImageWrapperStyle(true, classNames.imageWrapper, checked),\n    iconWrapper: [\n      classNames.iconWrapper,\n      {\n        fontSize: iconSize,\n        lineHeight: iconSize,\n        height: iconSize,\n      },\n    ],\n    labelWrapper: [\n      classNames.labelWrapper,\n      fonts.medium,\n      (hasIcon || hasImage) && {\n        display: 'block',\n        position: 'relative',\n        margin: '4px 8px 2px 8px',\n        height: labelWrapperHeight,\n        lineHeight: labelWrapperLineHeight,\n        // using non-null assertion because we have a default in `ChoiceGroupOptionBase` class.\n        maxWidth: imageSize!.width * 2,\n        overflow: 'hidden',\n        whiteSpace: 'pre-wrap',\n      },\n    ],\n  };\n};\n"]},"metadata":{},"sourceType":"module"}