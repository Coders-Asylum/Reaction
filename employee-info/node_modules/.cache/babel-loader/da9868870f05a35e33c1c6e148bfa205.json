{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { divProperties, getNativeProps } from '../../../Utilities';\nimport { DirectionalHint } from '../../../common/DirectionalHint';\nimport { Callout, FocusTrapCallout } from '../../../Callout';\nexport var CardCallout = function CardCallout(props) {\n  var _a = props.gapSpace,\n      gapSpace = _a === void 0 ? 0 : _a,\n      _b = props.directionalHint,\n      directionalHint = _b === void 0 ? DirectionalHint.bottomLeftEdge : _b,\n      directionalHintFixed = props.directionalHintFixed,\n      targetElement = props.targetElement,\n      firstFocus = props.firstFocus,\n      trapFocus = props.trapFocus,\n      onLeave = props.onLeave,\n      className = props.className,\n      finalHeight = props.finalHeight,\n      content = props.content,\n      calloutProps = props.calloutProps;\n\n  var mergedCalloutProps = __assign(__assign(__assign({}, getNativeProps(props, divProperties)), {\n    className: className,\n    target: targetElement,\n    isBeakVisible: false,\n    directionalHint: directionalHint,\n    directionalHintFixed: directionalHintFixed,\n    finalHeight: finalHeight,\n    minPagePadding: 24,\n    onDismiss: onLeave,\n    gapSpace: gapSpace\n  }), calloutProps);\n\n  return React.createElement(React.Fragment, null, trapFocus ? React.createElement(FocusTrapCallout, __assign({}, mergedCalloutProps, {\n    focusTrapProps: {\n      forceFocusInsideTrap: false,\n      isClickableOutsideFocusTrap: true,\n      disableFirstFocus: !firstFocus\n    }\n  }), content) : React.createElement(Callout, __assign({}, mergedCalloutProps), content));\n};","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,oBAA9C;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,OAAT,EAAkBC,gBAAlB,QAA0C,kBAA1C;AASA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAyB;AAEhD,WAWEA,KAAK,SAXP;AAAA,cAAQ,mBAAG,CAAH,GAAIC,EAAZ;AAAA,MACAC,KAUEF,KAAK,gBAXP;AAAA,MACAG,eAAe,mBAAGP,eAAe,CAACQ,cAAnB,GAAiCF,EADhD;AAAA,MAEAG,oBAAoB,GASlBL,KAAK,qBAXP;AAAA,MAGAM,aAAa,GAQXN,KAAK,cAXP;AAAA,MAIAO,UAAU,GAORP,KAAK,WAXP;AAAA,MAKAQ,SAAS,GAMPR,KAAK,UAXP;AAAA,MAMAS,OAAO,GAKLT,KAAK,QAXP;AAAA,MAOAU,SAAS,GAIPV,KAAK,UAXP;AAAA,MAQAW,WAAW,GAGTX,KAAK,YAXP;AAAA,MASAY,OAAO,GAELZ,KAAK,QAXP;AAAA,MAUAa,YAAY,GACVb,KAAK,aAXP;;AAaF,MAAMc,kBAAkB,kCACnBnB,cAAc,CAACK,KAAD,EAAQN,aAAR,CADK,GACiB;AACvCgB,aAAS,EAAEA,SAD4B;AAEvCK,UAAM,EAAET,aAF+B;AAGvCU,iBAAa,EAAE,KAHwB;AAIvCb,mBAAe,EAAEA,eAJsB;AAKvCE,wBAAoB,EAAEA,oBALiB;AAMvCM,eAAW,EAAEA,WAN0B;AAOvCM,kBAAc,EAAE,EAPuB;AAQvCC,aAAS,EAAET,OAR4B;AASvCU,YAAQ,EAAEA;AAT6B,GADjB,GAWnBN,YAXmB,CAAxB;;AAcA,SACEpB,0CACGe,SAAS,GACRf,oBAACK,gBAAD,EAAiBsB,aACXN,kBADW,EACO;AACtBO,kBAAc,EAAE;AACdC,0BAAoB,EAAE,KADR;AAEdC,iCAA2B,EAAE,IAFf;AAGdC,uBAAiB,EAAE,CAACjB;AAHN;AADM,GADP,CAAjB,EAQGK,OARH,CADQ,GAYRnB,oBAACI,OAAD,EAAQuB,aAAKN,kBAAL,CAAR,EAAkCF,OAAlC,CAbJ,CADF;AAkBD,CA/CM","names":["React","divProperties","getNativeProps","DirectionalHint","Callout","FocusTrapCallout","CardCallout","props","_a","_b","directionalHint","bottomLeftEdge","directionalHintFixed","targetElement","firstFocus","trapFocus","onLeave","className","finalHeight","content","calloutProps","mergedCalloutProps","target","isBeakVisible","minPagePadding","onDismiss","gapSpace","__assign","focusTrapProps","forceFocusInsideTrap","isClickableOutsideFocusTrap","disableFirstFocus"],"sources":["/home/runner/work/Reaction/Reaction/employee-info/node_modules/@fluentui/react/lib/components/HoverCard/src/components/HoverCard/CardCallout/CardCallout.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { divProperties, getNativeProps } from '../../../Utilities';\nimport { DirectionalHint } from '../../../common/DirectionalHint';\nimport { Callout, FocusTrapCallout } from '../../../Callout';\nimport type { IBaseCardProps } from '../BaseCard.types';\nimport type { ICalloutProps } from '../../../Callout';\n\nexport interface ICardCalloutProps extends IBaseCardProps<{}, {}, {}> {\n  finalHeight?: number;\n  content?: JSX.Element;\n}\n\nexport const CardCallout = (props: ICardCalloutProps) => {\n  const {\n    gapSpace = 0,\n    directionalHint = DirectionalHint.bottomLeftEdge,\n    directionalHintFixed,\n    targetElement,\n    firstFocus,\n    trapFocus,\n    onLeave,\n    className,\n    finalHeight,\n    content,\n    calloutProps,\n  } = props;\n\n  const mergedCalloutProps: ICalloutProps = {\n    ...getNativeProps(props, divProperties),\n    className: className,\n    target: targetElement,\n    isBeakVisible: false,\n    directionalHint: directionalHint,\n    directionalHintFixed: directionalHintFixed,\n    finalHeight: finalHeight,\n    minPagePadding: 24,\n    onDismiss: onLeave,\n    gapSpace: gapSpace,\n    ...calloutProps,\n  };\n\n  return (\n    <>\n      {trapFocus ? (\n        <FocusTrapCallout\n          {...mergedCalloutProps}\n          focusTrapProps={{\n            forceFocusInsideTrap: false,\n            isClickableOutsideFocusTrap: true,\n            disableFirstFocus: !firstFocus,\n          }}\n        >\n          {content}\n        </FocusTrapCallout>\n      ) : (\n        <Callout {...mergedCalloutProps}>{content}</Callout>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}