{"ast":null,"code":"import { __assign, __spreadArray } from \"tslib\";\nimport { AnimationVariables, getGlobalClassNames, HighContrastSelector, normalize, FontWeights, getHighContrastNoAdjustStyle } from '@fluentui/style-utilities';\nimport { IsFocusVisibleClassName } from '@fluentui/utilities';\nvar globalClassNames = {\n  count: 'ms-Pivot-count',\n  icon: 'ms-Pivot-icon',\n  linkIsSelected: 'is-selected',\n  link: 'ms-Pivot-link',\n  linkContent: 'ms-Pivot-linkContent',\n  root: 'ms-Pivot',\n  rootIsLarge: 'ms-Pivot--large',\n  rootIsTabs: 'ms-Pivot--tabs',\n  text: 'ms-Pivot-text',\n  linkInMenu: 'ms-Pivot-linkInMenu',\n  overflowMenuButton: 'ms-Pivot-overflowMenuButton'\n};\n\nvar getLinkStyles = function getLinkStyles(props, classNames, isLinkInOverflowMenu) {\n  var _a, _b, _c;\n\n  if (isLinkInOverflowMenu === void 0) {\n    isLinkInOverflowMenu = false;\n  }\n\n  var linkSize = props.linkSize,\n      linkFormat = props.linkFormat;\n  var _d = props.theme,\n      semanticColors = _d.semanticColors,\n      fonts = _d.fonts;\n  var rootIsLarge = linkSize === 'large';\n  var rootIsTabs = linkFormat === 'tabs';\n  return [fonts.medium, {\n    color: semanticColors.actionLink,\n    padding: '0 8px',\n    position: 'relative',\n    backgroundColor: 'transparent',\n    border: 0,\n    borderRadius: 0,\n    selectors: (_a = {\n      ':hover': {\n        backgroundColor: semanticColors.buttonBackgroundHovered,\n        color: semanticColors.buttonTextHovered,\n        cursor: 'pointer'\n      },\n      ':active': {\n        backgroundColor: semanticColors.buttonBackgroundPressed,\n        color: semanticColors.buttonTextHovered\n      },\n      ':focus': {\n        outline: 'none'\n      }\n    }, _a[\".\" + IsFocusVisibleClassName + \" &:focus\"] = {\n      outline: \"1px solid \" + semanticColors.focusBorder\n    }, _a[\".\" + IsFocusVisibleClassName + \" &:focus:after\"] = {\n      content: 'attr(data-content)',\n      position: 'relative',\n      border: 0\n    }, _a)\n  }, !isLinkInOverflowMenu && [{\n    display: 'inline-block',\n    lineHeight: 44,\n    height: 44,\n    marginRight: 8,\n    textAlign: 'center',\n    selectors: {\n      ':before': {\n        backgroundColor: 'transparent',\n        bottom: 0,\n        content: '\"\"',\n        height: 2,\n        left: 8,\n        position: 'absolute',\n        right: 8,\n        transition: \"left \" + AnimationVariables.durationValue2 + \" \" + AnimationVariables.easeFunction2 + \",\\n                        right \" + AnimationVariables.durationValue2 + \" \" + AnimationVariables.easeFunction2\n      },\n      ':after': {\n        color: 'transparent',\n        content: 'attr(data-content)',\n        display: 'block',\n        fontWeight: FontWeights.bold,\n        height: 1,\n        overflow: 'hidden',\n        visibility: 'hidden'\n      }\n    }\n  }, rootIsLarge && {\n    fontSize: fonts.large.fontSize\n  }, rootIsTabs && [{\n    marginRight: 0,\n    height: 44,\n    lineHeight: 44,\n    backgroundColor: semanticColors.buttonBackground,\n    padding: '0 10px',\n    verticalAlign: 'top',\n    selectors: (_b = {\n      ':focus': {\n        outlineOffset: '-1px'\n      }\n    }, _b[\".\" + IsFocusVisibleClassName + \" &:focus::before\"] = {\n      height: 'auto',\n      background: 'transparent',\n      transition: 'none'\n    }, _b['&:hover, &:focus'] = {\n      color: semanticColors.buttonTextCheckedHovered\n    }, _b['&:active, &:hover'] = {\n      color: semanticColors.primaryButtonText,\n      backgroundColor: semanticColors.primaryButtonBackground\n    }, _b[\"&.\" + classNames.linkIsSelected] = {\n      backgroundColor: semanticColors.primaryButtonBackground,\n      color: semanticColors.primaryButtonText,\n      fontWeight: FontWeights.regular,\n      selectors: (_c = {\n        ':before': {\n          backgroundColor: 'transparent',\n          transition: 'none',\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          content: '\"\"',\n          height: 0\n        },\n        ':hover': {\n          backgroundColor: semanticColors.primaryButtonBackgroundHovered,\n          color: semanticColors.primaryButtonText\n        },\n        '&:active': {\n          backgroundColor: semanticColors.primaryButtonBackgroundPressed,\n          color: semanticColors.primaryButtonText\n        }\n      }, _c[HighContrastSelector] = __assign({\n        fontWeight: FontWeights.semibold,\n        color: 'HighlightText',\n        background: 'Highlight'\n      }, getHighContrastNoAdjustStyle()), _c)\n    }, _b)\n  }]]];\n};\n\nexport var getStyles = function getStyles(props) {\n  var _a, _b, _c, _d;\n\n  var className = props.className,\n      linkSize = props.linkSize,\n      linkFormat = props.linkFormat,\n      theme = props.theme;\n  var semanticColors = theme.semanticColors,\n      fonts = theme.fonts;\n  var classNames = getGlobalClassNames(globalClassNames, theme);\n  var rootIsLarge = linkSize === 'large';\n  var rootIsTabs = linkFormat === 'tabs';\n  return {\n    root: [classNames.root, fonts.medium, normalize, {\n      position: 'relative',\n      color: semanticColors.link,\n      whiteSpace: 'nowrap'\n    }, rootIsLarge && classNames.rootIsLarge, rootIsTabs && classNames.rootIsTabs, className],\n    itemContainer: {\n      selectors: {\n        '&[hidden]': {\n          display: 'none'\n        }\n      }\n    },\n    link: __spreadArray(__spreadArray([classNames.link], getLinkStyles(props, classNames)), [(_a = {}, _a[\"&[data-is-overflowing='true']\"] = {\n      display: 'none'\n    }, _a)]),\n    overflowMenuButton: [classNames.overflowMenuButton, (_b = {\n      visibility: 'hidden',\n      position: 'absolute',\n      right: 0\n    }, _b[\".\" + classNames.link + \"[data-is-overflowing='true'] ~ &\"] = {\n      visibility: 'visible',\n      position: 'relative'\n    }, _b)],\n    linkInMenu: __spreadArray(__spreadArray([classNames.linkInMenu], getLinkStyles(props, classNames, true)), [{\n      textAlign: 'left',\n      width: '100%',\n      height: 36,\n      lineHeight: 36\n    }]),\n    linkIsSelected: [classNames.link, classNames.linkIsSelected, {\n      fontWeight: FontWeights.semibold,\n      selectors: (_c = {\n        ':before': {\n          backgroundColor: semanticColors.inputBackgroundChecked,\n          selectors: (_d = {}, _d[HighContrastSelector] = {\n            backgroundColor: 'Highlight'\n          }, _d)\n        },\n        ':hover::before': {\n          left: 0,\n          right: 0\n        }\n      }, _c[HighContrastSelector] = {\n        color: 'Highlight'\n      }, _c)\n    }],\n    linkContent: [classNames.linkContent, {\n      flex: '0 1 100%',\n      selectors: {\n        '& > * ': {\n          marginLeft: 4\n        },\n        '& > *:first-child': {\n          marginLeft: 0\n        }\n      }\n    }],\n    text: [classNames.text, {\n      display: 'inline-block',\n      verticalAlign: 'top'\n    }],\n    count: [classNames.count, {\n      display: 'inline-block',\n      verticalAlign: 'top'\n    }],\n    icon: classNames.icon\n  };\n};","map":{"version":3,"mappings":"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","names":["AnimationVariables","getGlobalClassNames","HighContrastSelector","normalize","FontWeights","getHighContrastNoAdjustStyle","IsFocusVisibleClassName","globalClassNames","count","icon","linkIsSelected","link","linkContent","root","rootIsLarge","rootIsTabs","text","linkInMenu","overflowMenuButton","getLinkStyles","props","classNames","isLinkInOverflowMenu","linkFormat","theme","semanticColors","fonts","linkSize","medium","color","actionLink","padding","position","backgroundColor","border","borderRadius","selectors","buttonBackgroundHovered","buttonTextHovered","cursor","buttonBackgroundPressed","outline","_a","focusBorder","content","display","lineHeight","height","marginRight","textAlign","bottom","left","right","transition","durationValue2","easeFunction2","fontWeight","bold","overflow","visibility","fontSize","large","buttonBackground","verticalAlign","outlineOffset","_b","background","buttonTextCheckedHovered","primaryButtonText","primaryButtonBackground","regular","top","primaryButtonBackgroundHovered","primaryButtonBackgroundPressed","_c","__assign","semibold","getStyles","whiteSpace","className","itemContainer","width","inputBackgroundChecked","_d","flex","marginLeft"],"sources":["/home/runner/work/Reaction/Reaction/employee-info/node_modules/@fluentui/react/lib/components/src/components/Pivot/Pivot.styles.ts"],"sourcesContent":["import {\n  AnimationVariables,\n  getGlobalClassNames,\n  HighContrastSelector,\n  normalize,\n  FontWeights,\n  getHighContrastNoAdjustStyle,\n} from '@fluentui/style-utilities';\nimport { IsFocusVisibleClassName } from '@fluentui/utilities';\nimport type { IPivotStyleProps, IPivotStyles } from './Pivot.types';\nimport type { IStyle } from '@fluentui/style-utilities';\n\nconst globalClassNames = {\n  count: 'ms-Pivot-count',\n  icon: 'ms-Pivot-icon',\n  linkIsSelected: 'is-selected',\n  link: 'ms-Pivot-link',\n  linkContent: 'ms-Pivot-linkContent',\n  root: 'ms-Pivot',\n  rootIsLarge: 'ms-Pivot--large',\n  rootIsTabs: 'ms-Pivot--tabs',\n  text: 'ms-Pivot-text',\n  linkInMenu: 'ms-Pivot-linkInMenu',\n  overflowMenuButton: 'ms-Pivot-overflowMenuButton',\n};\n\nconst getLinkStyles = (\n  props: IPivotStyleProps,\n  classNames: { [key: string]: string },\n  isLinkInOverflowMenu: boolean = false,\n): IStyle[] => {\n  const { linkSize, linkFormat } = props;\n  const { semanticColors, fonts } = props.theme;\n  const rootIsLarge = linkSize === 'large';\n  const rootIsTabs = linkFormat === 'tabs';\n\n  return [\n    fonts.medium,\n    {\n      color: semanticColors.actionLink,\n      padding: '0 8px',\n      position: 'relative',\n      backgroundColor: 'transparent',\n      border: 0,\n      borderRadius: 0,\n      selectors: {\n        ':hover': {\n          backgroundColor: semanticColors.buttonBackgroundHovered,\n          color: semanticColors.buttonTextHovered,\n          cursor: 'pointer',\n        },\n        ':active': {\n          backgroundColor: semanticColors.buttonBackgroundPressed,\n          color: semanticColors.buttonTextHovered,\n        },\n        ':focus': {\n          outline: 'none',\n        },\n        [`.${IsFocusVisibleClassName} &:focus`]: {\n          outline: `1px solid ${semanticColors.focusBorder}`,\n        },\n        [`.${IsFocusVisibleClassName} &:focus:after`]: {\n          content: 'attr(data-content)',\n          position: 'relative',\n          border: 0,\n        },\n      },\n    },\n    !isLinkInOverflowMenu && [\n      {\n        display: 'inline-block',\n        lineHeight: 44,\n        height: 44,\n        marginRight: 8,\n        textAlign: 'center',\n        selectors: {\n          ':before': {\n            backgroundColor: 'transparent',\n            bottom: 0,\n            content: '\"\"',\n            height: 2,\n            left: 8,\n            position: 'absolute',\n            right: 8,\n            transition: `left ${AnimationVariables.durationValue2} ${AnimationVariables.easeFunction2},\n                        right ${AnimationVariables.durationValue2} ${AnimationVariables.easeFunction2}`,\n          },\n          ':after': {\n            color: 'transparent',\n            content: 'attr(data-content)',\n            display: 'block',\n            fontWeight: FontWeights.bold,\n            height: 1,\n            overflow: 'hidden',\n            visibility: 'hidden',\n          },\n        },\n      },\n      rootIsLarge && {\n        fontSize: fonts.large.fontSize,\n      },\n      rootIsTabs && [\n        {\n          marginRight: 0,\n          height: 44,\n          lineHeight: 44,\n          backgroundColor: semanticColors.buttonBackground,\n          padding: '0 10px',\n          verticalAlign: 'top',\n\n          selectors: {\n            ':focus': {\n              outlineOffset: '-1px',\n            },\n            [`.${IsFocusVisibleClassName} &:focus::before`]: {\n              height: 'auto',\n              background: 'transparent',\n              transition: 'none',\n            },\n            '&:hover, &:focus': {\n              color: semanticColors.buttonTextCheckedHovered,\n            },\n            '&:active, &:hover': {\n              color: semanticColors.primaryButtonText,\n              backgroundColor: semanticColors.primaryButtonBackground,\n            },\n            [`&.${classNames.linkIsSelected}`]: {\n              backgroundColor: semanticColors.primaryButtonBackground,\n              color: semanticColors.primaryButtonText,\n              fontWeight: FontWeights.regular,\n              selectors: {\n                ':before': {\n                  backgroundColor: 'transparent',\n                  transition: 'none',\n                  position: 'absolute',\n                  top: 0,\n                  left: 0,\n                  right: 0,\n                  bottom: 0,\n                  content: '\"\"',\n                  height: 0,\n                },\n                ':hover': {\n                  backgroundColor: semanticColors.primaryButtonBackgroundHovered,\n                  color: semanticColors.primaryButtonText,\n                },\n                '&:active': {\n                  backgroundColor: semanticColors.primaryButtonBackgroundPressed,\n                  color: semanticColors.primaryButtonText,\n                },\n                [HighContrastSelector]: {\n                  fontWeight: FontWeights.semibold,\n                  color: 'HighlightText',\n                  background: 'Highlight',\n                  ...getHighContrastNoAdjustStyle(),\n                },\n              },\n            },\n          },\n        },\n      ],\n    ],\n  ];\n};\n\nexport const getStyles = (props: IPivotStyleProps): IPivotStyles => {\n  const { className, linkSize, linkFormat, theme } = props;\n  const { semanticColors, fonts } = theme;\n\n  const classNames = getGlobalClassNames(globalClassNames, theme);\n\n  const rootIsLarge = linkSize === 'large';\n  const rootIsTabs = linkFormat === 'tabs';\n\n  return {\n    root: [\n      classNames.root,\n      fonts.medium,\n      normalize,\n      {\n        position: 'relative',\n        color: semanticColors.link,\n        whiteSpace: 'nowrap',\n      },\n      rootIsLarge && classNames.rootIsLarge,\n      rootIsTabs && classNames.rootIsTabs,\n      className,\n    ],\n    itemContainer: {\n      selectors: {\n        '&[hidden]': {\n          display: 'none',\n        },\n      },\n    },\n    link: [\n      classNames.link,\n      ...getLinkStyles(props, classNames),\n      {\n        [`&[data-is-overflowing='true']`]: {\n          display: 'none',\n        },\n      },\n    ],\n    overflowMenuButton: [\n      classNames.overflowMenuButton,\n      {\n        visibility: 'hidden',\n        position: 'absolute',\n        right: 0,\n        [`.${classNames.link}[data-is-overflowing='true'] ~ &`]: {\n          visibility: 'visible',\n          position: 'relative',\n        },\n      },\n    ],\n    linkInMenu: [\n      classNames.linkInMenu,\n      ...getLinkStyles(props, classNames, true),\n      {\n        textAlign: 'left',\n        width: '100%',\n        height: 36,\n        lineHeight: 36,\n      },\n    ],\n    linkIsSelected: [\n      classNames.link,\n      classNames.linkIsSelected,\n      {\n        fontWeight: FontWeights.semibold,\n        selectors: {\n          ':before': {\n            backgroundColor: semanticColors.inputBackgroundChecked,\n            selectors: {\n              [HighContrastSelector]: {\n                backgroundColor: 'Highlight',\n              },\n            },\n          },\n          ':hover::before': {\n            left: 0,\n            right: 0,\n          },\n          [HighContrastSelector]: {\n            color: 'Highlight',\n          },\n        },\n      },\n    ],\n    linkContent: [\n      classNames.linkContent,\n      {\n        flex: '0 1 100%',\n        selectors: {\n          '& > * ': {\n            marginLeft: 4,\n          },\n          '& > *:first-child': {\n            marginLeft: 0,\n          },\n        },\n      },\n    ],\n    text: [\n      classNames.text,\n      {\n        display: 'inline-block',\n        verticalAlign: 'top',\n      },\n    ],\n    count: [\n      classNames.count,\n      {\n        display: 'inline-block',\n        verticalAlign: 'top',\n      },\n    ],\n    icon: classNames.icon,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}