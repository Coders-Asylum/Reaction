{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { normalize, FontSizes, FontWeights, getFocusStyle, AnimationStyles, HighContrastSelector } from '@fluentui/style-utilities';\nexport var styles = function styles(props) {\n  var _a;\n\n  var className = props.className,\n      theme = props.theme,\n      headerIsClickable = props.headerIsClickable,\n      showWeekNumbers = props.showWeekNumbers;\n  var palette = theme.palette;\n  var disabledStyle = {\n    selectors: (_a = {\n      '&, &:disabled, & button': {\n        color: palette.neutralTertiaryAlt,\n        pointerEvents: 'none'\n      }\n    }, _a[HighContrastSelector] = {\n      color: 'GrayText',\n      forcedColorAdjust: 'none'\n    }, _a)\n  };\n  return {\n    root: [normalize, {\n      width: 196,\n      padding: 12,\n      boxSizing: 'content-box'\n    }, showWeekNumbers && {\n      width: 226\n    }, className],\n    header: {\n      position: 'relative',\n      display: 'inline-flex',\n      height: 28,\n      lineHeight: 44,\n      width: '100%'\n    },\n    monthAndYear: [getFocusStyle(theme, {\n      inset: 1\n    }), __assign(__assign({}, AnimationStyles.fadeIn200), {\n      alignItems: 'center',\n      fontSize: FontSizes.medium,\n      fontFamily: 'inherit',\n      color: palette.neutralPrimary,\n      display: 'inline-block',\n      flexGrow: 1,\n      fontWeight: FontWeights.semibold,\n      padding: '0 4px 0 10px',\n      border: 'none',\n      backgroundColor: 'transparent',\n      borderRadius: 2,\n      lineHeight: 28,\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      textAlign: 'left',\n      textOverflow: 'ellipsis'\n    }), headerIsClickable && {\n      selectors: {\n        '&:hover': {\n          cursor: 'pointer',\n          background: palette.neutralLight,\n          color: palette.black\n        }\n      }\n    }],\n    monthComponents: {\n      display: 'inline-flex',\n      alignSelf: 'flex-end'\n    },\n    headerIconButton: [getFocusStyle(theme, {\n      inset: -1\n    }), {\n      width: 28,\n      height: 28,\n      display: 'block',\n      textAlign: 'center',\n      lineHeight: 28,\n      fontSize: FontSizes.small,\n      fontFamily: 'inherit',\n      color: palette.neutralPrimary,\n      borderRadius: 2,\n      position: 'relative',\n      backgroundColor: 'transparent',\n      border: 'none',\n      padding: 0,\n      overflow: 'visible',\n      selectors: {\n        '&:hover': {\n          color: palette.neutralDark,\n          backgroundColor: palette.neutralLight,\n          cursor: 'pointer',\n          outline: '1px solid transparent'\n        }\n      }\n    }],\n    disabledStyle: disabledStyle\n  };\n};","map":{"version":3,"mappings":"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","names":["normalize","FontSizes","FontWeights","getFocusStyle","AnimationStyles","HighContrastSelector","styles","props","theme","headerIsClickable","showWeekNumbers","disabledStyle","selectors","color","palette","neutralTertiaryAlt","pointerEvents","_a","forcedColorAdjust","root","width","padding","boxSizing","className","header","position","display","height","lineHeight","monthAndYear","inset","fadeIn200","alignItems","fontSize","medium","fontFamily","neutralPrimary","flexGrow","fontWeight","semibold","border","backgroundColor","borderRadius","overflow","whiteSpace","textAlign","textOverflow","cursor","background","neutralLight","black","monthComponents","alignSelf","headerIconButton","small","neutralDark","outline"],"sources":["/home/runner/work/Reaction/Reaction/employee-info/node_modules/@fluentui/react/lib/components/Calendar/src/components/Calendar/CalendarDay/CalendarDay.styles.ts"],"sourcesContent":["import {\n  normalize,\n  FontSizes,\n  FontWeights,\n  getFocusStyle,\n  AnimationStyles,\n  HighContrastSelector,\n} from '@fluentui/style-utilities';\nimport type { ICalendarDayStyleProps, ICalendarDayStyles } from './CalendarDay.types';\n\nexport const styles = (props: ICalendarDayStyleProps): ICalendarDayStyles => {\n  const { className, theme, headerIsClickable, showWeekNumbers } = props;\n  const { palette } = theme;\n\n  const disabledStyle = {\n    selectors: {\n      '&, &:disabled, & button': {\n        color: palette.neutralTertiaryAlt,\n        pointerEvents: 'none',\n      },\n      [HighContrastSelector]: {\n        color: 'GrayText',\n        forcedColorAdjust: 'none',\n      },\n    },\n  };\n\n  return {\n    root: [\n      normalize,\n      {\n        width: 196,\n        padding: 12,\n        boxSizing: 'content-box',\n      },\n      showWeekNumbers && {\n        width: 226,\n      },\n      className,\n    ],\n    header: {\n      position: 'relative',\n      display: 'inline-flex',\n      height: 28,\n      lineHeight: 44,\n      width: '100%',\n    },\n    monthAndYear: [\n      getFocusStyle(theme, { inset: 1 }),\n      {\n        ...AnimationStyles.fadeIn200,\n        alignItems: 'center',\n        fontSize: FontSizes.medium,\n        fontFamily: 'inherit',\n        color: palette.neutralPrimary,\n        display: 'inline-block',\n        flexGrow: 1,\n        fontWeight: FontWeights.semibold,\n        padding: '0 4px 0 10px',\n        border: 'none',\n        backgroundColor: 'transparent',\n        borderRadius: 2,\n        lineHeight: 28,\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textAlign: 'left',\n        textOverflow: 'ellipsis',\n      },\n      headerIsClickable && {\n        selectors: {\n          '&:hover': {\n            cursor: 'pointer',\n            background: palette.neutralLight,\n            color: palette.black,\n          },\n        },\n      },\n    ],\n    monthComponents: {\n      display: 'inline-flex',\n      alignSelf: 'flex-end',\n    },\n    headerIconButton: [\n      getFocusStyle(theme, { inset: -1 }),\n      {\n        width: 28,\n        height: 28,\n        display: 'block',\n        textAlign: 'center',\n        lineHeight: 28,\n        fontSize: FontSizes.small,\n        fontFamily: 'inherit',\n        color: palette.neutralPrimary,\n        borderRadius: 2,\n        position: 'relative',\n        backgroundColor: 'transparent',\n        border: 'none',\n        padding: 0,\n        overflow: 'visible', // explicitly specify for IE11\n        selectors: {\n          '&:hover': {\n            color: palette.neutralDark,\n            backgroundColor: palette.neutralLight,\n            cursor: 'pointer',\n            outline: '1px solid transparent',\n          },\n        },\n      },\n    ],\n    disabledStyle: disabledStyle,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}