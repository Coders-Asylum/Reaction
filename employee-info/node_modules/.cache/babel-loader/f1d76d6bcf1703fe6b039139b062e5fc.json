{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { styled, classNamesFunction } from '../../../Utilities';\nimport { IconButton } from '../../../Button';\nimport { getStyles } from './TagItem.styles';\nimport { useId } from '@fluentui/react-hooks';\nvar getClassNames = classNamesFunction();\n/**\n * {@docCategory TagPicker}\n */\n\nexport var TagItemBase = function TagItemBase(props) {\n  var theme = props.theme,\n      styles = props.styles,\n      selected = props.selected,\n      disabled = props.disabled,\n      enableTagFocusInDisabledPicker = props.enableTagFocusInDisabledPicker,\n      children = props.children,\n      className = props.className,\n      index = props.index,\n      onRemoveItem = props.onRemoveItem,\n      removeButtonAriaLabel = props.removeButtonAriaLabel,\n      _a = props.title,\n      title = _a === void 0 ? typeof props.children === 'string' ? props.children : props.item.name : _a,\n      removeButtonIconProps = props.removeButtonIconProps;\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className,\n    selected: selected,\n    disabled: disabled\n  });\n  var itemId = useId();\n  var disabledAttrs = enableTagFocusInDisabledPicker ? {\n    'aria-disabled': disabled,\n    tabindex: 0\n  } : {\n    disabled: disabled\n  };\n  return React.createElement(\"div\", {\n    className: classNames.root,\n    role: 'listitem',\n    key: index\n  }, React.createElement(\"span\", {\n    className: classNames.text,\n    title: title,\n    id: itemId + \"-text\"\n  }, children), React.createElement(IconButton, __assign({\n    id: itemId,\n    onClick: onRemoveItem\n  }, disabledAttrs, {\n    iconProps: removeButtonIconProps !== null && removeButtonIconProps !== void 0 ? removeButtonIconProps : {\n      iconName: 'Cancel'\n    },\n    styles: {\n      icon: {\n        fontSize: '12px'\n      }\n    },\n    className: classNames.close,\n    ariaLabel: removeButtonAriaLabel,\n    \"aria-labelledby\": itemId + \" \" + itemId + \"-text\",\n    \"data-selection-index\": index\n  })));\n};\nexport var TagItem = styled(TagItemBase, getStyles, undefined, {\n  scope: 'TagItem'\n});","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,MAAT,EAAiBC,kBAAjB,QAA2C,oBAA3C;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,KAAT,QAAsB,uBAAtB;AAGA,IAAMC,aAAa,GAAGJ,kBAAkB,EAAxC;AAEA;;;;AAGA,OAAO,IAAMK,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAqB;AAE5C,WAAK,GAYHA,KAAK,MAZP;AAAA,MACAC,MAAM,GAWJD,KAAK,OAZP;AAAA,MAEAE,QAAQ,GAUNF,KAAK,SAZP;AAAA,MAGAG,QAAQ,GASNH,KAAK,SAZP;AAAA,MAIAI,8BAA8B,GAQ5BJ,KAAK,+BAZP;AAAA,MAKAK,QAAQ,GAONL,KAAK,SAZP;AAAA,MAMAM,SAAS,GAMPN,KAAK,UAZP;AAAA,MAOAO,KAAK,GAKHP,KAAK,MAZP;AAAA,MAQAQ,YAAY,GAIVR,KAAK,aAZP;AAAA,MASAS,qBAAqB,GAGnBT,KAAK,sBAZP;AAAA,MAUAU,KAEEV,KAAK,MAZP;AAAA,MAUAW,KAAK,mBAAG,OAAOX,KAAK,CAACK,QAAb,KAA0B,QAA1B,GAAqCL,KAAK,CAACK,QAA3C,GAAsDL,KAAK,CAACY,IAAN,CAAWC,IAApE,GAAwEH,EAV7E;AAAA,MAWAI,qBAAqB,GACnBd,KAAK,sBAZP;AAcF,MAAMe,UAAU,GAAGjB,aAAa,CAACG,MAAD,EAAS;AACvCe,SAAK,EAAEA,KADgC;AAEvCV,aAAS,WAF8B;AAGvCJ,YAAQ,UAH+B;AAIvCC,YAAQ;AAJ+B,GAAT,CAAhC;AAOA,MAAMc,MAAM,GAAGpB,KAAK,EAApB;AAEA,MAAMqB,aAAa,GAAGd,8BAA8B,GAChD;AACE,qBAAiBD,QADnB;AAEEgB,YAAQ,EAAE;AAFZ,GADgD,GAKhD;AACEhB,YAAQ,EAAEA;AADZ,GALJ;AASA,SACEX;AAAKc,aAAS,EAAES,UAAU,CAACK,IAA3B;AAAiCC,QAAI,EAAE,UAAvC;AAAmDC,OAAG,EAAEf;AAAxD,KACEf;AAAMc,aAAS,EAAES,UAAU,CAACQ,IAA5B;AAAkCZ,SAAK,EAAEA,KAAzC;AAAgDa,MAAE,EAAKP,MAAM;AAA7D,KACGZ,QADH,CADF,EAIEb,oBAACG,UAAD,EAAW8B;AACTD,MAAE,EAAEP,MADK;AAETS,WAAO,EAAElB;AAFA,KAGLU,aAHK,EAGQ;AACjBS,aAAS,EAAEb,qBAAqB,SAArB,yBAAqB,WAArB,2BAAyB;AAAEc,cAAQ,EAAE;AAAZ,KADnB;AAEjB3B,UAAM,EAAE;AAAE4B,UAAI,EAAE;AAAEC,gBAAQ,EAAE;AAAZ;AAAR,KAFS;AAGjBxB,aAAS,EAAES,UAAU,CAACgB,KAHL;AAIjBC,aAAS,EAAEvB,qBAJM;AAIe,uBACZQ,MAAM,MAAN,GAAUA,MAAV,GAAgB,OALnB;AAK0B,4BACrBV;AANL,GAHR,CAAX,CAJF,CADF;AAkBD,CApDM;AAsDP,OAAO,IAAM0B,OAAO,GAAGxC,MAAM,CAAoDM,WAApD,EAAiEH,SAAjE,EAA4EsC,SAA5E,EAAuF;AAClHC,OAAK,EAAE;AAD2G,CAAvF,CAAtB","names":["React","styled","classNamesFunction","IconButton","getStyles","useId","getClassNames","TagItemBase","props","styles","selected","disabled","enableTagFocusInDisabledPicker","children","className","index","onRemoveItem","removeButtonAriaLabel","_a","title","item","name","removeButtonIconProps","classNames","theme","itemId","disabledAttrs","tabindex","root","role","key","text","id","__assign","onClick","iconProps","iconName","icon","fontSize","close","ariaLabel","TagItem","undefined","scope"],"sources":["/home/runner/work/Reaction/Reaction/employee-info/node_modules/@fluentui/react/lib/components/pickers/src/components/pickers/TagPicker/TagItem.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { styled, classNamesFunction } from '../../../Utilities';\nimport { IconButton } from '../../../Button';\nimport { getStyles } from './TagItem.styles';\nimport { useId } from '@fluentui/react-hooks';\nimport type { ITagItemProps, ITagItemStyleProps, ITagItemStyles } from './TagPicker.types';\n\nconst getClassNames = classNamesFunction<ITagItemStyleProps, ITagItemStyles>();\n\n/**\n * {@docCategory TagPicker}\n */\nexport const TagItemBase = (props: ITagItemProps) => {\n  const {\n    theme,\n    styles,\n    selected,\n    disabled,\n    enableTagFocusInDisabledPicker,\n    children,\n    className,\n    index,\n    onRemoveItem,\n    removeButtonAriaLabel,\n    title = typeof props.children === 'string' ? props.children : props.item.name,\n    removeButtonIconProps,\n  } = props;\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className,\n    selected,\n    disabled,\n  });\n\n  const itemId = useId();\n\n  const disabledAttrs = enableTagFocusInDisabledPicker\n    ? {\n        'aria-disabled': disabled,\n        tabindex: 0,\n      }\n    : {\n        disabled: disabled,\n      };\n\n  return (\n    <div className={classNames.root} role={'listitem'} key={index}>\n      <span className={classNames.text} title={title} id={`${itemId}-text`}>\n        {children}\n      </span>\n      <IconButton\n        id={itemId}\n        onClick={onRemoveItem}\n        {...disabledAttrs}\n        iconProps={removeButtonIconProps ?? { iconName: 'Cancel' }}\n        styles={{ icon: { fontSize: '12px' } }}\n        className={classNames.close}\n        ariaLabel={removeButtonAriaLabel}\n        aria-labelledby={`${itemId} ${itemId}-text`}\n        data-selection-index={index}\n      />\n    </div>\n  );\n};\n\nexport const TagItem = styled<ITagItemProps, ITagItemStyleProps, ITagItemStyles>(TagItemBase, getStyles, undefined, {\n  scope: 'TagItem',\n});\n"]},"metadata":{},"sourceType":"module"}