{"ast":null,"code":"import * as React from 'react';\nimport { classNamesFunction } from '../../../Utilities';\nimport { getStyles } from './Beak.styles';\nimport { RectangleEdge } from '../../../Positioning';\nexport var BEAK_HEIGHT = 10;\nexport var BEAK_WIDTH = 18;\nexport var Beak = React.forwardRef(function (props, forwardedRef) {\n  var left = props.left,\n      top = props.top,\n      bottom = props.bottom,\n      right = props.right,\n      color = props.color,\n      _a = props.direction,\n      direction = _a === void 0 ? RectangleEdge.top : _a;\n  var svgHeight;\n  var svgWidth;\n\n  if (direction === RectangleEdge.top || direction === RectangleEdge.bottom) {\n    svgHeight = BEAK_HEIGHT;\n    svgWidth = BEAK_WIDTH;\n  } else {\n    svgHeight = BEAK_WIDTH;\n    svgWidth = BEAK_HEIGHT;\n  }\n\n  var pointOne;\n  var pointTwo;\n  var pointThree;\n  var transform;\n\n  switch (direction) {\n    case RectangleEdge.top:\n    default:\n      pointOne = BEAK_WIDTH / 2 + \", 0\";\n      pointTwo = BEAK_WIDTH + \", \" + BEAK_HEIGHT;\n      pointThree = \"0, \" + BEAK_HEIGHT;\n      transform = 'translateY(-100%)';\n      break;\n\n    case RectangleEdge.right:\n      pointOne = \"0, 0\";\n      pointTwo = BEAK_HEIGHT + \", \" + BEAK_HEIGHT;\n      pointThree = \"0, \" + BEAK_WIDTH;\n      transform = 'translateX(100%)';\n      break;\n\n    case RectangleEdge.bottom:\n      pointOne = \"0, 0\";\n      pointTwo = BEAK_WIDTH + \", 0\";\n      pointThree = BEAK_WIDTH / 2 + \", \" + BEAK_HEIGHT;\n      transform = 'translateY(100%)';\n      break;\n\n    case RectangleEdge.left:\n      pointOne = BEAK_HEIGHT + \", 0\";\n      pointTwo = \"0, \" + BEAK_HEIGHT;\n      pointThree = BEAK_HEIGHT + \", \" + BEAK_WIDTH;\n      transform = 'translateX(-100%)';\n      break;\n  }\n\n  var getClassNames = classNamesFunction();\n  var classNames = getClassNames(getStyles, {\n    left: left,\n    top: top,\n    bottom: bottom,\n    right: right,\n    height: svgHeight + \"px\",\n    width: svgWidth + \"px\",\n    transform: transform,\n    color: color\n  });\n  return React.createElement(\"div\", {\n    className: classNames.root,\n    role: \"presentation\",\n    ref: forwardedRef\n  }, React.createElement(\"svg\", {\n    height: svgHeight,\n    width: svgWidth,\n    className: classNames.beak\n  }, React.createElement(\"polygon\", {\n    points: pointOne + ' ' + pointTwo + ' ' + pointThree\n  })));\n});\nBeak.displayName = 'Beak';","map":{"version":3,"mappings":"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","names":["React","classNamesFunction","getStyles","RectangleEdge","BEAK_HEIGHT","BEAK_WIDTH","Beak","forwardRef","props","forwardedRef","top","bottom","right","color","_a","direction","svgHeight","svgWidth","pointOne","pointTwo","pointThree","transform","left","getClassNames","classNames","height","width","className","root","role","ref","beak","points","displayName"],"sources":["/home/runner/work/Reaction/Reaction/employee-info/node_modules/@fluentui/react/lib/components/Coachmark/src/components/Coachmark/Beak/Beak.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNamesFunction } from '../../../Utilities';\nimport { getStyles } from './Beak.styles';\nimport { RectangleEdge } from '../../../Positioning';\nimport type { IBeakProps, IBeakStylesProps } from './Beak.types';\nimport type { IBeakStyles } from './Beak.styles';\n\nexport const BEAK_HEIGHT = 10;\nexport const BEAK_WIDTH = 18;\n\nexport const Beak: React.FunctionComponent<IBeakProps> = React.forwardRef<HTMLDivElement, IBeakProps>(\n  (props, forwardedRef) => {\n    const { left, top, bottom, right, color, direction = RectangleEdge.top } = props;\n\n    let svgHeight: number;\n    let svgWidth: number;\n\n    if (direction === RectangleEdge.top || direction === RectangleEdge.bottom) {\n      svgHeight = BEAK_HEIGHT;\n      svgWidth = BEAK_WIDTH;\n    } else {\n      svgHeight = BEAK_WIDTH;\n      svgWidth = BEAK_HEIGHT;\n    }\n\n    let pointOne: string;\n    let pointTwo: string;\n    let pointThree: string;\n    let transform: string;\n\n    switch (direction) {\n      case RectangleEdge.top:\n      default:\n        pointOne = `${BEAK_WIDTH / 2}, 0`;\n        pointTwo = `${BEAK_WIDTH}, ${BEAK_HEIGHT}`;\n        pointThree = `0, ${BEAK_HEIGHT}`;\n        transform = 'translateY(-100%)';\n        break;\n      case RectangleEdge.right:\n        pointOne = `0, 0`;\n        pointTwo = `${BEAK_HEIGHT}, ${BEAK_HEIGHT}`;\n        pointThree = `0, ${BEAK_WIDTH}`;\n        transform = 'translateX(100%)';\n        break;\n      case RectangleEdge.bottom:\n        pointOne = `0, 0`;\n        pointTwo = `${BEAK_WIDTH}, 0`;\n        pointThree = `${BEAK_WIDTH / 2}, ${BEAK_HEIGHT}`;\n        transform = 'translateY(100%)';\n        break;\n      case RectangleEdge.left:\n        pointOne = `${BEAK_HEIGHT}, 0`;\n        pointTwo = `0, ${BEAK_HEIGHT}`;\n        pointThree = `${BEAK_HEIGHT}, ${BEAK_WIDTH}`;\n        transform = 'translateX(-100%)';\n        break;\n    }\n\n    const getClassNames = classNamesFunction<IBeakStylesProps, IBeakStyles>();\n    const classNames = getClassNames(getStyles, {\n      left,\n      top,\n      bottom,\n      right,\n      height: `${svgHeight}px`,\n      width: `${svgWidth}px`,\n      transform: transform,\n      color,\n    });\n\n    return (\n      <div className={classNames.root} role=\"presentation\" ref={forwardedRef}>\n        <svg height={svgHeight} width={svgWidth} className={classNames.beak}>\n          <polygon points={pointOne + ' ' + pointTwo + ' ' + pointThree} />\n        </svg>\n      </div>\n    );\n  },\n);\nBeak.displayName = 'Beak';\n"]},"metadata":{},"sourceType":"module"}