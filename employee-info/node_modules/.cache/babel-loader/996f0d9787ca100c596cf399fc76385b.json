{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { buttonProperties, classNamesFunction, getId, getNativeProps, initializeComponentRef } from '../../Utilities';\nimport { OverflowButtonType } from './Facepile.types';\nimport { FacepileButton } from './FacepileButton';\nimport { Icon } from '../../Icon';\nimport { Persona } from '../../Persona';\nimport { PersonaCoin, PersonaSize, PersonaInitialsColor } from '../../PersonaCoin';\nvar getClassNames = classNamesFunction();\n/**\n * FacePile with no default styles.\n * [Use the `styles` API to add your own styles.](https://github.com/microsoft/fluentui/wiki/Component-Styling)\n */\n\nvar FacepileBase =\n/** @class */\nfunction (_super) {\n  __extends(FacepileBase, _super);\n\n  function FacepileBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._classNames = getClassNames(_this.props.styles, {\n      theme: _this.props.theme,\n      className: _this.props.className\n    });\n\n    _this._getPersonaControl = function (persona) {\n      var _a = _this.props,\n          getPersonaProps = _a.getPersonaProps,\n          personaSize = _a.personaSize;\n      var personaStyles = {\n        details: {\n          flex: '1 0 auto'\n        }\n      };\n      return React.createElement(Persona, __assign({\n        imageInitials: persona.imageInitials,\n        imageUrl: persona.imageUrl,\n        initialsColor: persona.initialsColor,\n        allowPhoneInitials: persona.allowPhoneInitials,\n        text: persona.personaName,\n        size: personaSize\n      }, getPersonaProps ? getPersonaProps(persona) : null, {\n        styles: personaStyles\n      }));\n    };\n\n    _this._getPersonaCoinControl = function (persona) {\n      var _a = _this.props,\n          getPersonaProps = _a.getPersonaProps,\n          personaSize = _a.personaSize;\n      return React.createElement(PersonaCoin, __assign({\n        imageInitials: persona.imageInitials,\n        imageUrl: persona.imageUrl,\n        initialsColor: persona.initialsColor,\n        allowPhoneInitials: persona.allowPhoneInitials,\n        text: persona.personaName,\n        size: personaSize\n      }, getPersonaProps ? getPersonaProps(persona) : null));\n    };\n\n    initializeComponentRef(_this);\n    _this._ariaDescriptionId = getId();\n    return _this;\n  }\n\n  FacepileBase.prototype.render = function () {\n    var overflowButtonProps = this.props.overflowButtonProps;\n    var _a = this.props,\n        chevronButtonProps = _a.chevronButtonProps,\n        // eslint-disable-line deprecation/deprecation\n    maxDisplayablePersonas = _a.maxDisplayablePersonas,\n        personas = _a.personas,\n        overflowPersonas = _a.overflowPersonas,\n        showAddButton = _a.showAddButton,\n        ariaLabel = _a.ariaLabel,\n        _b = _a.showTooltip,\n        showTooltip = _b === void 0 ? true : _b;\n    var _classNames = this._classNames; // Add a check to make sure maxDisplayalePersonas is defined to cover the edge case of it being 0.\n\n    var numPersonasToShow = typeof maxDisplayablePersonas === 'number' ? Math.min(personas.length, maxDisplayablePersonas) : personas.length; // Added for deprecating chevronButtonProps.  Can remove after v1.0\n\n    if (chevronButtonProps && !overflowButtonProps) {\n      overflowButtonProps = chevronButtonProps;\n    }\n\n    var hasOverflowPersonas = overflowPersonas && overflowPersonas.length > 0;\n    var personasPrimary = hasOverflowPersonas ? personas : personas.slice(0, numPersonasToShow);\n    var personasOverflow = (hasOverflowPersonas ? overflowPersonas : personas.slice(numPersonasToShow)) || [];\n    return React.createElement(\"div\", {\n      className: _classNames.root\n    }, this.onRenderAriaDescription(), React.createElement(\"div\", {\n      className: _classNames.itemContainer\n    }, showAddButton ? this._getAddNewElement() : null, React.createElement(\"ul\", {\n      className: _classNames.members,\n      \"aria-label\": ariaLabel\n    }, this._onRenderVisiblePersonas(personasPrimary, personasOverflow.length === 0 && personas.length === 1, showTooltip)), overflowButtonProps ? this._getOverflowElement(personasOverflow) : null));\n  };\n\n  FacepileBase.prototype.onRenderAriaDescription = function () {\n    var ariaDescription = this.props.ariaDescription;\n    var _classNames = this._classNames; // If ariaDescription is given, descriptionId will be assigned to ariaDescriptionSpan,\n    // otherwise it will be assigned to descriptionSpan.\n\n    return ariaDescription && React.createElement(\"span\", {\n      className: _classNames.screenReaderOnly,\n      id: this._ariaDescriptionId\n    }, ariaDescription);\n  };\n\n  FacepileBase.prototype._onRenderVisiblePersonas = function (personas, singlePersona, showTooltip) {\n    var _this = this;\n\n    var _a = this.props,\n        _b = _a.onRenderPersona,\n        onRenderPersona = _b === void 0 ? this._getPersonaControl : _b,\n        _c = _a.onRenderPersonaCoin,\n        onRenderPersonaCoin = _c === void 0 ? this._getPersonaCoinControl : _c,\n        onRenderPersonaWrapper = _a.onRenderPersonaWrapper;\n    return personas.map(function (persona, index) {\n      var personaControl = singlePersona ? onRenderPersona(persona, _this._getPersonaControl) : onRenderPersonaCoin(persona, _this._getPersonaCoinControl);\n      var defaultPersonaRender = persona.onClick ? function () {\n        return _this._getElementWithOnClickEvent(personaControl, persona, showTooltip, index);\n      } : function () {\n        return _this._getElementWithoutOnClickEvent(personaControl, persona, showTooltip, index);\n      };\n      return React.createElement(\"li\", {\n        key: (singlePersona ? 'persona' : 'personaCoin') + \"-\" + index,\n        className: _this._classNames.member\n      }, onRenderPersonaWrapper ? onRenderPersonaWrapper(persona, defaultPersonaRender) : defaultPersonaRender());\n    });\n  };\n\n  FacepileBase.prototype._getElementWithOnClickEvent = function (personaControl, persona, showTooltip, index) {\n    var keytipProps = persona.keytipProps;\n    return React.createElement(FacepileButton, __assign({}, getNativeProps(persona, buttonProperties), this._getElementProps(persona, showTooltip, index), {\n      keytipProps: keytipProps,\n      // eslint-disable-next-line react/jsx-no-bind\n      onClick: this._onPersonaClick.bind(this, persona)\n    }), personaControl);\n  };\n\n  FacepileBase.prototype._getElementWithoutOnClickEvent = function (personaControl, persona, showTooltip, index) {\n    return React.createElement(\"div\", __assign({}, getNativeProps(persona, buttonProperties), this._getElementProps(persona, showTooltip, index)), personaControl);\n  };\n\n  FacepileBase.prototype._getElementProps = function (persona, showTooltip, index) {\n    var _classNames = this._classNames;\n    return {\n      key: (persona.imageUrl ? 'i' : '') + index,\n      'data-is-focusable': true,\n      className: _classNames.itemButton,\n      title: showTooltip ? persona.personaName : undefined,\n      onMouseMove: this._onPersonaMouseMove.bind(this, persona),\n      onMouseOut: this._onPersonaMouseOut.bind(this, persona)\n    };\n  };\n\n  FacepileBase.prototype._getOverflowElement = function (personasOverflow) {\n    switch (this.props.overflowButtonType) {\n      case OverflowButtonType.descriptive:\n        return this._getDescriptiveOverflowElement(personasOverflow);\n\n      case OverflowButtonType.downArrow:\n        return this._getIconElement('ChevronDown');\n\n      case OverflowButtonType.more:\n        return this._getIconElement('More');\n\n      default:\n        return null;\n    }\n  };\n\n  FacepileBase.prototype._getDescriptiveOverflowElement = function (personasOverflow) {\n    var personaSize = this.props.personaSize;\n\n    if (!personasOverflow || personasOverflow.length < 1) {\n      return null;\n    }\n\n    var personaNames = personasOverflow.map(function (p) {\n      return p.personaName;\n    }).join(', ');\n\n    var overflowButtonProps = __assign({\n      title: personaNames\n    }, this.props.overflowButtonProps);\n\n    var numPersonasNotPictured = Math.max(personasOverflow.length, 0);\n    var _classNames = this._classNames;\n    return React.createElement(FacepileButton, __assign({}, overflowButtonProps, {\n      ariaDescription: overflowButtonProps.title,\n      className: _classNames.descriptiveOverflowButton\n    }), React.createElement(PersonaCoin, {\n      size: personaSize,\n      onRenderInitials: this._renderInitialsNotPictured(numPersonasNotPictured),\n      initialsColor: PersonaInitialsColor.transparent\n    }));\n  };\n\n  FacepileBase.prototype._getIconElement = function (icon) {\n    var _a = this.props,\n        overflowButtonProps = _a.overflowButtonProps,\n        personaSize = _a.personaSize;\n    var overflowInitialsIcon = true;\n    var _classNames = this._classNames;\n    return React.createElement(FacepileButton, __assign({}, overflowButtonProps, {\n      className: _classNames.overflowButton\n    }), React.createElement(PersonaCoin, {\n      size: personaSize,\n      onRenderInitials: this._renderInitials(icon, overflowInitialsIcon),\n      initialsColor: PersonaInitialsColor.transparent\n    }));\n  };\n\n  FacepileBase.prototype._getAddNewElement = function () {\n    var _a = this.props,\n        addButtonProps = _a.addButtonProps,\n        personaSize = _a.personaSize;\n    var _classNames = this._classNames;\n    return React.createElement(FacepileButton, __assign({}, addButtonProps, {\n      className: _classNames.addButton\n    }), React.createElement(PersonaCoin, {\n      size: personaSize,\n      onRenderInitials: this._renderInitials('AddFriend')\n    }));\n  };\n\n  FacepileBase.prototype._onPersonaClick = function (persona, ev) {\n    persona.onClick(ev, persona);\n    ev.preventDefault();\n    ev.stopPropagation();\n  };\n\n  FacepileBase.prototype._onPersonaMouseMove = function (persona, ev) {\n    if (persona.onMouseMove) {\n      persona.onMouseMove(ev, persona);\n    }\n  };\n\n  FacepileBase.prototype._onPersonaMouseOut = function (persona, ev) {\n    if (persona.onMouseOut) {\n      persona.onMouseOut(ev, persona);\n    }\n  };\n\n  FacepileBase.prototype._renderInitials = function (iconName, overflowButton) {\n    var _classNames = this._classNames;\n    return function () {\n      return React.createElement(Icon, {\n        iconName: iconName,\n        className: overflowButton ? _classNames.overflowInitialsIcon : ''\n      });\n    };\n  };\n\n  FacepileBase.prototype._renderInitialsNotPictured = function (numPersonasNotPictured) {\n    var _classNames = this._classNames;\n    return function () {\n      return React.createElement(\"span\", {\n        className: _classNames.overflowInitialsIcon\n      }, numPersonasNotPictured < 100 ? '+' + numPersonasNotPictured : '99+');\n    };\n  };\n\n  FacepileBase.defaultProps = {\n    maxDisplayablePersonas: 5,\n    personas: [],\n    overflowPersonas: [],\n    personaSize: PersonaSize.size32\n  };\n  return FacepileBase;\n}(React.Component);\n\nexport { FacepileBase };","map":{"version":3,"mappings":"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","names":["React","buttonProperties","classNamesFunction","getId","getNativeProps","initializeComponentRef","OverflowButtonType","FacepileButton","Icon","Persona","PersonaCoin","PersonaSize","PersonaInitialsColor","getClassNames","__extends","props","_super","_this","styles","theme","className","persona","getPersonaProps","personaSize","personaStyles","details","flex","__assign","imageInitials","imageUrl","initialsColor","allowPhoneInitials","text","personaName","size","_ariaDescriptionId","FacepileBase","overflowButtonProps","chevronButtonProps","maxDisplayablePersonas","personas","overflowPersonas","showAddButton","ariaLabel","_b","showTooltip","_classNames","numPersonasToShow","Math","min","length","hasOverflowPersonas","personasPrimary","slice","personasOverflow","root","onRenderAriaDescription","itemContainer","_getAddNewElement","members","_onRenderVisiblePersonas","_getOverflowElement","ariaDescription","screenReaderOnly","id","singlePersona","onRenderPersona","_getPersonaControl","_c","onRenderPersonaCoin","_getPersonaCoinControl","onRenderPersonaWrapper","map","index","personaControl","defaultPersonaRender","onClick","_getElementWithOnClickEvent","_getElementWithoutOnClickEvent","key","member","_getElementProps","keytipProps","_onPersonaClick","bind","itemButton","title","undefined","onMouseMove","_onPersonaMouseMove","onMouseOut","_onPersonaMouseOut","overflowButtonType","descriptive","_getDescriptiveOverflowElement","downArrow","_getIconElement","more","personaNames","p","join","numPersonasNotPictured","max","descriptiveOverflowButton","onRenderInitials","_renderInitialsNotPictured","transparent","icon","overflowInitialsIcon","overflowButton","_renderInitials","addButtonProps","addButton","ev","preventDefault","stopPropagation","iconName","size32","Component"],"sources":["/home/runner/work/Reaction/Reaction/employee-info/node_modules/@fluentui/react/lib/components/src/components/Facepile/Facepile.base.tsx"],"sourcesContent":["import * as React from 'react';\nimport { buttonProperties, classNamesFunction, getId, getNativeProps, initializeComponentRef } from '../../Utilities';\nimport { OverflowButtonType } from './Facepile.types';\nimport { FacepileButton } from './FacepileButton';\nimport { Icon } from '../../Icon';\nimport { Persona } from '../../Persona';\nimport { PersonaCoin, PersonaSize, PersonaInitialsColor } from '../../PersonaCoin';\nimport type { IFacepileProps, IFacepilePersona, IFacepileStyleProps, IFacepileStyles } from './Facepile.types';\nimport type { IPersonaStyles } from '../../Persona';\nimport type { IButtonProps } from '../../Button';\n\nconst getClassNames = classNamesFunction<IFacepileStyleProps, IFacepileStyles>();\n\n/**\n * FacePile with no default styles.\n * [Use the `styles` API to add your own styles.](https://github.com/microsoft/fluentui/wiki/Component-Styling)\n */\nexport class FacepileBase extends React.Component<IFacepileProps, {}> {\n  public static defaultProps: IFacepileProps = {\n    maxDisplayablePersonas: 5,\n    personas: [],\n    overflowPersonas: [],\n    personaSize: PersonaSize.size32,\n  };\n\n  private _ariaDescriptionId: string;\n\n  private _classNames = getClassNames(this.props.styles, {\n    theme: this.props.theme!,\n    className: this.props.className,\n  });\n\n  constructor(props: IFacepileProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    this._ariaDescriptionId = getId();\n  }\n\n  public render(): JSX.Element {\n    let { overflowButtonProps } = this.props;\n    const {\n      chevronButtonProps, // eslint-disable-line deprecation/deprecation\n      maxDisplayablePersonas,\n      personas,\n      overflowPersonas,\n      showAddButton,\n      ariaLabel,\n      showTooltip = true,\n    } = this.props;\n\n    const { _classNames } = this;\n\n    // Add a check to make sure maxDisplayalePersonas is defined to cover the edge case of it being 0.\n    const numPersonasToShow: number =\n      typeof maxDisplayablePersonas === 'number' ? Math.min(personas.length, maxDisplayablePersonas) : personas.length;\n\n    // Added for deprecating chevronButtonProps.  Can remove after v1.0\n    if (chevronButtonProps && !overflowButtonProps) {\n      overflowButtonProps = chevronButtonProps;\n    }\n\n    const hasOverflowPersonas = overflowPersonas && overflowPersonas.length > 0;\n    const personasPrimary: IFacepilePersona[] = hasOverflowPersonas ? personas : personas.slice(0, numPersonasToShow);\n    const personasOverflow: IFacepilePersona[] =\n      (hasOverflowPersonas ? overflowPersonas : personas.slice(numPersonasToShow)) || [];\n\n    return (\n      <div className={_classNames.root}>\n        {this.onRenderAriaDescription()}\n        <div className={_classNames.itemContainer}>\n          {showAddButton ? this._getAddNewElement() : null}\n          <ul className={_classNames.members} aria-label={ariaLabel}>\n            {this._onRenderVisiblePersonas(\n              personasPrimary,\n              personasOverflow.length === 0 && personas.length === 1,\n              showTooltip,\n            )}\n          </ul>\n          {overflowButtonProps ? this._getOverflowElement(personasOverflow) : null}\n        </div>\n      </div>\n    );\n  }\n\n  protected onRenderAriaDescription() {\n    const { ariaDescription } = this.props;\n\n    const { _classNames } = this;\n\n    // If ariaDescription is given, descriptionId will be assigned to ariaDescriptionSpan,\n    // otherwise it will be assigned to descriptionSpan.\n    return (\n      ariaDescription && (\n        <span className={_classNames.screenReaderOnly} id={this._ariaDescriptionId}>\n          {ariaDescription}\n        </span>\n      )\n    );\n  }\n\n  private _onRenderVisiblePersonas(\n    personas: IFacepilePersona[],\n    singlePersona: boolean,\n    showTooltip: boolean,\n  ): JSX.Element[] {\n    const {\n      onRenderPersona = this._getPersonaControl,\n      onRenderPersonaCoin = this._getPersonaCoinControl,\n      onRenderPersonaWrapper,\n    } = this.props;\n    return personas.map((persona: IFacepilePersona, index: number) => {\n      const personaControl: JSX.Element | null = singlePersona\n        ? onRenderPersona(persona, this._getPersonaControl)\n        : onRenderPersonaCoin(persona, this._getPersonaCoinControl);\n      const defaultPersonaRender = persona.onClick\n        ? () => this._getElementWithOnClickEvent(personaControl, persona, showTooltip, index)\n        : () => this._getElementWithoutOnClickEvent(personaControl, persona, showTooltip, index);\n\n      return (\n        <li key={`${singlePersona ? 'persona' : 'personaCoin'}-${index}`} className={this._classNames.member}>\n          {onRenderPersonaWrapper ? onRenderPersonaWrapper(persona, defaultPersonaRender) : defaultPersonaRender()}\n        </li>\n      );\n    });\n  }\n\n  private _getPersonaControl = (persona: IFacepilePersona): JSX.Element | null => {\n    const { getPersonaProps, personaSize } = this.props;\n    const personaStyles: Partial<IPersonaStyles> = {\n      details: {\n        flex: '1 0 auto',\n      },\n    };\n\n    return (\n      <Persona\n        imageInitials={persona.imageInitials}\n        imageUrl={persona.imageUrl}\n        initialsColor={persona.initialsColor}\n        allowPhoneInitials={persona.allowPhoneInitials}\n        text={persona.personaName}\n        size={personaSize}\n        {...(getPersonaProps ? getPersonaProps(persona) : null)}\n        styles={personaStyles}\n      />\n    );\n  };\n\n  private _getPersonaCoinControl = (persona: IFacepilePersona): JSX.Element | null => {\n    const { getPersonaProps, personaSize } = this.props;\n    return (\n      <PersonaCoin\n        imageInitials={persona.imageInitials}\n        imageUrl={persona.imageUrl}\n        initialsColor={persona.initialsColor}\n        allowPhoneInitials={persona.allowPhoneInitials}\n        text={persona.personaName}\n        size={personaSize}\n        {...(getPersonaProps ? getPersonaProps(persona) : null)}\n      />\n    );\n  };\n\n  private _getElementWithOnClickEvent(\n    personaControl: JSX.Element | null,\n    persona: IFacepilePersona,\n    showTooltip: boolean,\n    index: number,\n  ): JSX.Element {\n    const { keytipProps } = persona;\n    return (\n      <FacepileButton\n        {...getNativeProps(persona, buttonProperties)}\n        {...this._getElementProps(persona, showTooltip, index)}\n        keytipProps={keytipProps}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={this._onPersonaClick.bind(this, persona)}\n      >\n        {personaControl}\n      </FacepileButton>\n    );\n  }\n\n  private _getElementWithoutOnClickEvent(\n    personaControl: JSX.Element | null,\n    persona: IFacepilePersona,\n    showTooltip: boolean,\n    index: number,\n  ): JSX.Element {\n    return (\n      <div {...getNativeProps(persona, buttonProperties)} {...this._getElementProps(persona, showTooltip, index)}>\n        {personaControl}\n      </div>\n    );\n  }\n\n  private _getElementProps(\n    persona: IFacepilePersona,\n    showTooltip: boolean,\n    index: number,\n  ): { key: React.Key; ['data-is-focusable']: boolean } & React.HTMLAttributes<HTMLDivElement> {\n    const { _classNames } = this;\n\n    return {\n      key: (persona.imageUrl ? 'i' : '') + index,\n      'data-is-focusable': true,\n      className: _classNames.itemButton,\n      title: showTooltip ? persona.personaName : undefined,\n      onMouseMove: this._onPersonaMouseMove.bind(this, persona),\n      onMouseOut: this._onPersonaMouseOut.bind(this, persona),\n    };\n  }\n\n  private _getOverflowElement(personasOverflow: IFacepilePersona[]): JSX.Element | null {\n    switch (this.props.overflowButtonType) {\n      case OverflowButtonType.descriptive:\n        return this._getDescriptiveOverflowElement(personasOverflow);\n      case OverflowButtonType.downArrow:\n        return this._getIconElement('ChevronDown');\n      case OverflowButtonType.more:\n        return this._getIconElement('More');\n      default:\n        return null;\n    }\n  }\n\n  private _getDescriptiveOverflowElement(personasOverflow: IFacepilePersona[]): JSX.Element | null {\n    const { personaSize } = this.props;\n    if (!personasOverflow || personasOverflow.length < 1) {\n      return null;\n    }\n\n    const personaNames: string = personasOverflow.map((p: IFacepilePersona) => p.personaName).join(', ');\n    const overflowButtonProps: IButtonProps = { ...{ title: personaNames }, ...this.props.overflowButtonProps };\n    const numPersonasNotPictured: number = Math.max(personasOverflow.length, 0);\n\n    const { _classNames } = this;\n\n    return (\n      <FacepileButton\n        {...overflowButtonProps}\n        ariaDescription={overflowButtonProps.title}\n        className={_classNames.descriptiveOverflowButton}\n      >\n        <PersonaCoin\n          size={personaSize}\n          onRenderInitials={this._renderInitialsNotPictured(numPersonasNotPictured)}\n          initialsColor={PersonaInitialsColor.transparent}\n        />\n      </FacepileButton>\n    );\n  }\n\n  private _getIconElement(icon: string): JSX.Element {\n    const { overflowButtonProps, personaSize } = this.props;\n    const overflowInitialsIcon = true;\n\n    const { _classNames } = this;\n\n    return (\n      <FacepileButton {...overflowButtonProps} className={_classNames.overflowButton}>\n        <PersonaCoin\n          size={personaSize}\n          onRenderInitials={this._renderInitials(icon, overflowInitialsIcon)}\n          initialsColor={PersonaInitialsColor.transparent}\n        />\n      </FacepileButton>\n    );\n  }\n  private _getAddNewElement(): JSX.Element {\n    const { addButtonProps, personaSize } = this.props;\n\n    const { _classNames } = this;\n\n    return (\n      <FacepileButton {...addButtonProps} className={_classNames.addButton}>\n        <PersonaCoin size={personaSize} onRenderInitials={this._renderInitials('AddFriend')} />\n      </FacepileButton>\n    );\n  }\n\n  private _onPersonaClick(persona: IFacepilePersona, ev?: React.MouseEvent<HTMLElement>): void {\n    persona.onClick!(ev, persona);\n    ev!.preventDefault();\n    ev!.stopPropagation();\n  }\n\n  private _onPersonaMouseMove(persona: IFacepilePersona, ev?: React.MouseEvent<HTMLElement>): void {\n    if (persona.onMouseMove) {\n      persona.onMouseMove(ev, persona);\n    }\n  }\n\n  private _onPersonaMouseOut(persona: IFacepilePersona, ev?: React.MouseEvent<HTMLElement>): void {\n    if (persona.onMouseOut) {\n      persona.onMouseOut(ev, persona);\n    }\n  }\n\n  private _renderInitials(iconName: string, overflowButton?: boolean): () => JSX.Element {\n    const { _classNames } = this;\n\n    return (): JSX.Element => {\n      return <Icon iconName={iconName} className={overflowButton ? _classNames.overflowInitialsIcon : ''} />;\n    };\n  }\n\n  private _renderInitialsNotPictured(numPersonasNotPictured: number): () => JSX.Element {\n    const { _classNames } = this;\n\n    return (): JSX.Element => {\n      return (\n        <span className={_classNames.overflowInitialsIcon}>\n          {numPersonasNotPictured < 100 ? '+' + numPersonasNotPictured : '99+'}\n        </span>\n      );\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}