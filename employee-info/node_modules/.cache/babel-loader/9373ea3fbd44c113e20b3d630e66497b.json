{"ast":null,"code":"var _a, _b, _c, _d, _e;\n\nimport { __assign } from \"tslib\";\nimport { PanelType } from './Panel.types';\nimport { AnimationClassNames, AnimationVariables, getGlobalClassNames, HighContrastSelector, ScreenWidthMinMedium, ScreenWidthMinLarge, ScreenWidthMinXLarge, ScreenWidthMinXXLarge, ScreenWidthMinUhfMobile, IconFontSizes } from '../../Styling';\nvar GlobalClassNames = {\n  root: 'ms-Panel',\n  main: 'ms-Panel-main',\n  commands: 'ms-Panel-commands',\n  contentInner: 'ms-Panel-contentInner',\n  scrollableContent: 'ms-Panel-scrollableContent',\n  navigation: 'ms-Panel-navigation',\n  closeButton: 'ms-Panel-closeButton ms-PanelAction-close',\n  header: 'ms-Panel-header',\n  headerText: 'ms-Panel-headerText',\n  content: 'ms-Panel-content',\n  footer: 'ms-Panel-footer',\n  footerInner: 'ms-Panel-footerInner',\n  isOpen: 'is-open',\n  hasCloseButton: 'ms-Panel--hasCloseButton',\n  smallFluid: 'ms-Panel--smFluid',\n  smallFixedNear: 'ms-Panel--smLeft',\n  smallFixedFar: 'ms-Panel--sm',\n  medium: 'ms-Panel--md',\n  large: 'ms-Panel--lg',\n  largeFixed: 'ms-Panel--fixed',\n  extraLarge: 'ms-Panel--xl',\n  custom: 'ms-Panel--custom',\n  customNear: 'ms-Panel--customLeft'\n};\nvar panelWidth = {\n  full: '100%',\n  auto: 'auto',\n  xs: 272,\n  sm: 340,\n  md1: 592,\n  md2: 644,\n  lg: 940\n};\nvar panelMargin = {\n  auto: 'auto',\n  none: 0,\n  md: 48,\n  lg: 428,\n  xl: 176\n}; // Following consts are used below in `getPanelBreakpoints()` function to provide\n// necessary fallbacks for different types of Panel in different breakpoints.\n\nvar smallPanelSelectors = (_a = {}, _a[\"@media (min-width: \" + ScreenWidthMinMedium + \"px)\"] = {\n  width: panelWidth.sm\n}, _a);\nvar mediumPanelSelectors = (_b = {}, _b[\"@media (min-width: \" + ScreenWidthMinLarge + \"px)\"] = {\n  width: panelWidth.md1\n}, _b[\"@media (min-width: \" + ScreenWidthMinXLarge + \"px)\"] = {\n  width: panelWidth.md2\n}, _b);\nvar largePanelSelectors = (_c = {}, _c[\"@media (min-width: \" + ScreenWidthMinUhfMobile + \"px)\"] = {\n  left: panelMargin.md,\n  width: panelWidth.auto\n}, _c[\"@media (min-width: \" + ScreenWidthMinXXLarge + \"px)\"] = {\n  left: panelMargin.lg\n}, _c);\nvar largeFixedPanelSelectors = (_d = {}, _d[\"@media (min-width: \" + ScreenWidthMinXXLarge + \"px)\"] = {\n  left: panelMargin.auto,\n  width: panelWidth.lg\n}, _d);\nvar extraLargePanelSelectors = (_e = {}, _e[\"@media (min-width: \" + ScreenWidthMinXXLarge + \"px)\"] = {\n  left: panelMargin.xl\n}, _e); // Make sure Panels have fallbacks to different breakpoints by reusing same selectors.\n// This is done in the effort to follow design redlines.\n\nvar getPanelBreakpoints = function getPanelBreakpoints(type) {\n  var selectors; // Panel types `smallFluid`, `smallFixedNear`, `custom` and `customNear`\n  // are not checked in here because they render the same in all the breakpoints\n  // and have the checks done separately in the `getStyles` function below.\n\n  switch (type) {\n    case PanelType.smallFixedFar:\n      selectors = __assign({}, smallPanelSelectors);\n      break;\n\n    case PanelType.medium:\n      selectors = __assign(__assign({}, smallPanelSelectors), mediumPanelSelectors);\n      break;\n\n    case PanelType.large:\n      selectors = __assign(__assign(__assign({}, smallPanelSelectors), mediumPanelSelectors), largePanelSelectors);\n      break;\n\n    case PanelType.largeFixed:\n      selectors = __assign(__assign(__assign(__assign({}, smallPanelSelectors), mediumPanelSelectors), largePanelSelectors), largeFixedPanelSelectors);\n      break;\n\n    case PanelType.extraLarge:\n      selectors = __assign(__assign(__assign(__assign({}, smallPanelSelectors), mediumPanelSelectors), largePanelSelectors), extraLargePanelSelectors);\n      break;\n\n    default:\n      break;\n  }\n\n  return selectors;\n};\n\nvar commandBarHeight = '44px';\nvar sharedPaddingStyles = {\n  paddingLeft: '24px',\n  paddingRight: '24px'\n};\nexport var getStyles = function getStyles(props) {\n  var _a, _b, _c, _d;\n\n  var className = props.className,\n      focusTrapZoneClassName = props.focusTrapZoneClassName,\n      hasCloseButton = props.hasCloseButton,\n      headerClassName = props.headerClassName,\n      isAnimating = props.isAnimating,\n      isFooterSticky = props.isFooterSticky,\n      isFooterAtBottom = props.isFooterAtBottom,\n      isOnRightSide = props.isOnRightSide,\n      isOpen = props.isOpen,\n      isHiddenOnDismiss = props.isHiddenOnDismiss,\n      hasCustomNavigation = props.hasCustomNavigation,\n      theme = props.theme,\n      _e = props.type,\n      type = _e === void 0 ? PanelType.smallFixedFar : _e;\n  var effects = theme.effects,\n      fonts = theme.fonts,\n      semanticColors = theme.semanticColors;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  var isCustomPanel = type === PanelType.custom || type === PanelType.customNear;\n  return {\n    root: [classNames.root, theme.fonts.medium, isOpen && classNames.isOpen, hasCloseButton && classNames.hasCloseButton, {\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    }, isCustomPanel && isOnRightSide && classNames.custom, isCustomPanel && !isOnRightSide && classNames.customNear, className],\n    overlay: [{\n      pointerEvents: 'auto',\n      cursor: 'pointer'\n    }, isOpen && isAnimating && AnimationClassNames.fadeIn100, !isOpen && isAnimating && AnimationClassNames.fadeOut100],\n    hiddenPanel: [!isOpen && !isAnimating && isHiddenOnDismiss && {\n      visibility: 'hidden'\n    }],\n    main: [classNames.main, {\n      backgroundColor: semanticColors.bodyBackground,\n      boxShadow: effects.elevation64,\n      pointerEvents: 'auto',\n      position: 'absolute',\n      display: 'flex',\n      flexDirection: 'column',\n      overflowX: 'hidden',\n      overflowY: 'auto',\n      WebkitOverflowScrolling: 'touch',\n      bottom: 0,\n      top: 0,\n      // left, right, width are overridden depending on the type of the Panel and the screen breakpoint.\n      left: panelMargin.auto,\n      right: panelMargin.none,\n      width: panelWidth.full,\n      selectors: __assign((_a = {}, _a[HighContrastSelector] = {\n        borderLeft: \"3px solid \" + semanticColors.variantBorder,\n        borderRight: \"3px solid \" + semanticColors.variantBorder\n      }, _a), getPanelBreakpoints(type))\n    }, type === PanelType.smallFluid && {\n      left: panelMargin.none\n    }, type === PanelType.smallFixedNear && {\n      left: panelMargin.none,\n      right: panelMargin.auto,\n      width: panelWidth.xs\n    }, type === PanelType.customNear && {\n      right: 'auto',\n      left: 0\n    }, isCustomPanel && {\n      maxWidth: '100vw'\n    }, isOpen && isAnimating && !isOnRightSide && AnimationClassNames.slideRightIn40, isOpen && isAnimating && isOnRightSide && AnimationClassNames.slideLeftIn40, !isOpen && isAnimating && !isOnRightSide && AnimationClassNames.slideLeftOut40, !isOpen && isAnimating && isOnRightSide && AnimationClassNames.slideRightOut40, focusTrapZoneClassName],\n    commands: [classNames.commands, {\n      marginTop: 18,\n      //Ensures that the stickied header always has a background to prevent overlaps on scroll.\n      background: 'inherit',\n      selectors: (_b = {}, _b[\"@media (min-height: \" + ScreenWidthMinMedium + \"px)\"] = {\n        position: 'sticky',\n        top: 0,\n        zIndex: 1\n      }, _b)\n    }, hasCustomNavigation && {\n      marginTop: 'inherit'\n    }],\n    navigation: [classNames.navigation, {\n      display: 'flex',\n      justifyContent: 'flex-end'\n    }, hasCustomNavigation && {\n      height: commandBarHeight\n    }],\n    contentInner: [classNames.contentInner, {\n      display: 'flex',\n      flexDirection: 'column',\n      flexGrow: 1,\n      overflowY: 'hidden',\n      background: 'inherit'\n    }],\n    header: [classNames.header, sharedPaddingStyles, {\n      alignSelf: 'flex-start'\n    }, hasCloseButton && !hasCustomNavigation && {\n      flexGrow: 1\n    }, hasCustomNavigation && {\n      // Ensure that title doesn't shrink if screen is too small\n      flexShrink: 0\n    }],\n    headerText: [classNames.headerText, fonts.xLarge, {\n      color: semanticColors.bodyText,\n      lineHeight: '27px',\n      overflowWrap: 'break-word',\n      wordWrap: 'break-word',\n      wordBreak: 'break-word',\n      hyphens: 'auto'\n    }, headerClassName],\n    scrollableContent: [classNames.scrollableContent, {\n      overflowY: 'auto',\n      background: 'inherit'\n    }, isFooterAtBottom && {\n      flexGrow: 1,\n      display: 'inherit',\n      flexDirection: 'inherit'\n    }],\n    content: [classNames.content, sharedPaddingStyles, {\n      paddingBottom: 20\n    }, isFooterAtBottom && {\n      selectors: (_c = {}, _c[\"@media (min-height: \" + ScreenWidthMinMedium + \"px)\"] = {\n        flexGrow: 1\n      }, _c)\n    }],\n    footer: [classNames.footer, {\n      // Ensure that footer doesn't shrink if screen is too small\n      flexShrink: 0,\n      borderTop: '1px solid transparent',\n      transition: \"opacity \" + AnimationVariables.durationValue3 + \" \" + AnimationVariables.easeFunction2,\n      selectors: (_d = {}, _d[\"@media (min-height: \" + ScreenWidthMinMedium + \"px)\"] = {\n        position: 'sticky',\n        bottom: 0\n      }, _d)\n    }, isFooterSticky && {\n      background: semanticColors.bodyBackground,\n      borderTopColor: semanticColors.variantBorder\n    }],\n    footerInner: [classNames.footerInner, sharedPaddingStyles, {\n      paddingBottom: 16,\n      paddingTop: 16\n    }],\n    subComponentStyles: {\n      closeButton: {\n        root: [classNames.closeButton, {\n          marginRight: 14,\n          color: theme.palette.neutralSecondary,\n          fontSize: IconFontSizes.large\n        }, hasCustomNavigation && {\n          marginRight: 0,\n          height: 'auto',\n          width: '44px'\n        }],\n        rootHovered: {\n          color: theme.palette.neutralPrimary\n        }\n      }\n    }\n  };\n};","map":{"version":3,"mappings":"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","names":["PanelType","AnimationClassNames","AnimationVariables","getGlobalClassNames","HighContrastSelector","ScreenWidthMinMedium","ScreenWidthMinLarge","ScreenWidthMinXLarge","ScreenWidthMinXXLarge","ScreenWidthMinUhfMobile","IconFontSizes","GlobalClassNames","root","main","commands","contentInner","scrollableContent","navigation","closeButton","header","headerText","content","footer","footerInner","isOpen","hasCloseButton","smallFluid","smallFixedNear","smallFixedFar","medium","large","largeFixed","extraLarge","custom","customNear","panelWidth","full","auto","xs","sm","md1","md2","lg","panelMargin","none","md","xl","smallPanelSelectors","_a","width","mediumPanelSelectors","_b","largePanelSelectors","_c","left","largeFixedPanelSelectors","_d","extraLargePanelSelectors","_e","getPanelBreakpoints","type","selectors","commandBarHeight","sharedPaddingStyles","paddingLeft","paddingRight","getStyles","props","focusTrapZoneClassName","headerClassName","isAnimating","isFooterSticky","isFooterAtBottom","isOnRightSide","isHiddenOnDismiss","hasCustomNavigation","theme","fonts","semanticColors","classNames","isCustomPanel","pointerEvents","position","top","right","bottom","className","overlay","cursor","fadeIn100","fadeOut100","hiddenPanel","visibility","backgroundColor","bodyBackground","boxShadow","effects","elevation64","display","flexDirection","overflowX","overflowY","WebkitOverflowScrolling","borderLeft","variantBorder","borderRight","maxWidth","slideRightIn40","slideLeftIn40","slideLeftOut40","slideRightOut40","marginTop","background","zIndex","justifyContent","height","flexGrow","alignSelf","flexShrink","xLarge","color","bodyText","lineHeight","overflowWrap","wordWrap","wordBreak","hyphens","paddingBottom","borderTop","transition","durationValue3","easeFunction2","borderTopColor","paddingTop","subComponentStyles","marginRight","palette","neutralSecondary","fontSize","rootHovered","neutralPrimary"],"sources":["/home/runner/work/Reaction/Reaction/employee-info/node_modules/@fluentui/react/lib/components/src/components/Panel/Panel.styles.ts"],"sourcesContent":["import { PanelType } from './Panel.types';\nimport {\n  AnimationClassNames,\n  AnimationVariables,\n  getGlobalClassNames,\n  HighContrastSelector,\n  ScreenWidthMinMedium,\n  ScreenWidthMinLarge,\n  ScreenWidthMinXLarge,\n  ScreenWidthMinXXLarge,\n  ScreenWidthMinUhfMobile,\n  IconFontSizes,\n} from '../../Styling';\nimport type { IPanelStyleProps, IPanelStyles } from './Panel.types';\nimport type { IStyle } from '../../Styling';\n\nconst GlobalClassNames = {\n  root: 'ms-Panel',\n  main: 'ms-Panel-main',\n  commands: 'ms-Panel-commands',\n  contentInner: 'ms-Panel-contentInner',\n  scrollableContent: 'ms-Panel-scrollableContent',\n  navigation: 'ms-Panel-navigation',\n  closeButton: 'ms-Panel-closeButton ms-PanelAction-close',\n  header: 'ms-Panel-header',\n  headerText: 'ms-Panel-headerText',\n  content: 'ms-Panel-content',\n  footer: 'ms-Panel-footer',\n  footerInner: 'ms-Panel-footerInner',\n  isOpen: 'is-open',\n  hasCloseButton: 'ms-Panel--hasCloseButton',\n  smallFluid: 'ms-Panel--smFluid',\n  smallFixedNear: 'ms-Panel--smLeft',\n  smallFixedFar: 'ms-Panel--sm',\n  medium: 'ms-Panel--md',\n  large: 'ms-Panel--lg',\n  largeFixed: 'ms-Panel--fixed',\n  extraLarge: 'ms-Panel--xl',\n  custom: 'ms-Panel--custom',\n  customNear: 'ms-Panel--customLeft',\n};\n\nconst panelWidth = {\n  full: '100%',\n  auto: 'auto',\n  xs: 272,\n  sm: 340,\n  md1: 592,\n  md2: 644,\n  lg: 940,\n};\n\nconst panelMargin = {\n  auto: 'auto',\n  none: 0,\n  md: 48,\n  lg: 428,\n  xl: 176,\n};\n\n// Following consts are used below in `getPanelBreakpoints()` function to provide\n// necessary fallbacks for different types of Panel in different breakpoints.\nconst smallPanelSelectors = {\n  [`@media (min-width: ${ScreenWidthMinMedium}px)`]: {\n    width: panelWidth.sm,\n  },\n};\n\nconst mediumPanelSelectors = {\n  [`@media (min-width: ${ScreenWidthMinLarge}px)`]: {\n    width: panelWidth.md1,\n  },\n  [`@media (min-width: ${ScreenWidthMinXLarge}px)`]: {\n    width: panelWidth.md2,\n  },\n};\n\nconst largePanelSelectors = {\n  [`@media (min-width: ${ScreenWidthMinUhfMobile}px)`]: {\n    left: panelMargin.md,\n    width: panelWidth.auto,\n  },\n  [`@media (min-width: ${ScreenWidthMinXXLarge}px)`]: {\n    left: panelMargin.lg,\n  },\n};\n\nconst largeFixedPanelSelectors = {\n  [`@media (min-width: ${ScreenWidthMinXXLarge}px)`]: {\n    left: panelMargin.auto,\n    width: panelWidth.lg,\n  },\n};\n\nconst extraLargePanelSelectors = {\n  [`@media (min-width: ${ScreenWidthMinXXLarge}px)`]: {\n    left: panelMargin.xl,\n  },\n};\n\n// Make sure Panels have fallbacks to different breakpoints by reusing same selectors.\n// This is done in the effort to follow design redlines.\nconst getPanelBreakpoints = (type: PanelType): { [x: string]: IStyle } | undefined => {\n  let selectors;\n\n  // Panel types `smallFluid`, `smallFixedNear`, `custom` and `customNear`\n  // are not checked in here because they render the same in all the breakpoints\n  // and have the checks done separately in the `getStyles` function below.\n  switch (type) {\n    case PanelType.smallFixedFar:\n      selectors = {\n        ...smallPanelSelectors,\n      };\n      break;\n    case PanelType.medium:\n      selectors = {\n        ...smallPanelSelectors,\n        ...mediumPanelSelectors,\n      };\n      break;\n    case PanelType.large:\n      selectors = {\n        ...smallPanelSelectors,\n        ...mediumPanelSelectors,\n        ...largePanelSelectors,\n      };\n      break;\n    case PanelType.largeFixed:\n      selectors = {\n        ...smallPanelSelectors,\n        ...mediumPanelSelectors,\n        ...largePanelSelectors,\n        ...largeFixedPanelSelectors,\n      };\n      break;\n    case PanelType.extraLarge:\n      selectors = {\n        ...smallPanelSelectors,\n        ...mediumPanelSelectors,\n        ...largePanelSelectors,\n        ...extraLargePanelSelectors,\n      };\n      break;\n    default:\n      break;\n  }\n\n  return selectors;\n};\n\nconst commandBarHeight = '44px';\n\nconst sharedPaddingStyles = {\n  paddingLeft: '24px',\n  paddingRight: '24px',\n};\n\nexport const getStyles = (props: IPanelStyleProps): IPanelStyles => {\n  const {\n    className,\n    focusTrapZoneClassName,\n    hasCloseButton,\n    headerClassName,\n    isAnimating,\n    isFooterSticky,\n    isFooterAtBottom,\n    isOnRightSide,\n    isOpen,\n    isHiddenOnDismiss,\n    hasCustomNavigation,\n    theme,\n    type = PanelType.smallFixedFar,\n  } = props;\n  const { effects, fonts, semanticColors } = theme;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n  const isCustomPanel = type === PanelType.custom || type === PanelType.customNear;\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      isOpen && classNames.isOpen,\n      hasCloseButton && classNames.hasCloseButton,\n      {\n        pointerEvents: 'none',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      },\n      isCustomPanel && isOnRightSide && classNames.custom,\n      isCustomPanel && !isOnRightSide && classNames.customNear,\n      className,\n    ],\n    overlay: [\n      {\n        pointerEvents: 'auto',\n        cursor: 'pointer',\n      },\n      isOpen && isAnimating && AnimationClassNames.fadeIn100,\n      !isOpen && isAnimating && AnimationClassNames.fadeOut100,\n    ],\n    hiddenPanel: [\n      !isOpen &&\n        !isAnimating &&\n        isHiddenOnDismiss && {\n          visibility: 'hidden',\n        },\n    ],\n    main: [\n      classNames.main,\n      {\n        backgroundColor: semanticColors.bodyBackground,\n        boxShadow: effects.elevation64,\n        pointerEvents: 'auto',\n        position: 'absolute',\n        display: 'flex',\n        flexDirection: 'column',\n        overflowX: 'hidden',\n        overflowY: 'auto',\n        WebkitOverflowScrolling: 'touch',\n        bottom: 0,\n        top: 0,\n        // left, right, width are overridden depending on the type of the Panel and the screen breakpoint.\n        left: panelMargin.auto,\n        right: panelMargin.none,\n        width: panelWidth.full,\n        selectors: {\n          [HighContrastSelector]: {\n            borderLeft: `3px solid ${semanticColors.variantBorder}`,\n            borderRight: `3px solid ${semanticColors.variantBorder}`,\n          },\n          ...getPanelBreakpoints(type),\n        },\n      },\n      type === PanelType.smallFluid && {\n        left: panelMargin.none,\n      },\n      type === PanelType.smallFixedNear && {\n        left: panelMargin.none,\n        right: panelMargin.auto,\n        width: panelWidth.xs,\n      },\n      type === PanelType.customNear && {\n        right: 'auto',\n        left: 0,\n      },\n      isCustomPanel && {\n        maxWidth: '100vw',\n      },\n      isOpen && isAnimating && !isOnRightSide && AnimationClassNames.slideRightIn40,\n      isOpen && isAnimating && isOnRightSide && AnimationClassNames.slideLeftIn40,\n      !isOpen && isAnimating && !isOnRightSide && AnimationClassNames.slideLeftOut40,\n      !isOpen && isAnimating && isOnRightSide && AnimationClassNames.slideRightOut40,\n      focusTrapZoneClassName,\n    ],\n    commands: [\n      classNames.commands,\n      {\n        marginTop: 18,\n        //Ensures that the stickied header always has a background to prevent overlaps on scroll.\n        background: 'inherit',\n        selectors: {\n          [`@media (min-height: ${ScreenWidthMinMedium}px)`]: {\n            position: 'sticky',\n            top: 0,\n            zIndex: 1,\n          },\n        },\n      },\n      hasCustomNavigation && {\n        marginTop: 'inherit',\n      },\n    ],\n    navigation: [\n      classNames.navigation,\n      {\n        display: 'flex',\n        justifyContent: 'flex-end',\n      },\n      hasCustomNavigation && {\n        height: commandBarHeight,\n      },\n    ],\n    contentInner: [\n      classNames.contentInner,\n      {\n        display: 'flex',\n        flexDirection: 'column',\n        flexGrow: 1,\n        overflowY: 'hidden',\n        background: 'inherit',\n      },\n    ],\n    header: [\n      classNames.header,\n      sharedPaddingStyles,\n      {\n        alignSelf: 'flex-start',\n      },\n      hasCloseButton &&\n        !hasCustomNavigation && {\n          flexGrow: 1,\n        },\n      hasCustomNavigation && {\n        // Ensure that title doesn't shrink if screen is too small\n        flexShrink: 0,\n      },\n    ],\n    headerText: [\n      classNames.headerText,\n      fonts.xLarge,\n      {\n        color: semanticColors.bodyText,\n        lineHeight: '27px',\n        overflowWrap: 'break-word',\n        wordWrap: 'break-word',\n        wordBreak: 'break-word',\n        hyphens: 'auto',\n      },\n      headerClassName,\n    ],\n    scrollableContent: [\n      classNames.scrollableContent,\n      {\n        overflowY: 'auto',\n        background: 'inherit',\n      },\n      isFooterAtBottom && {\n        flexGrow: 1,\n        display: 'inherit',\n        flexDirection: 'inherit',\n      },\n    ],\n    content: [\n      classNames.content,\n      sharedPaddingStyles,\n      {\n        paddingBottom: 20,\n      },\n      isFooterAtBottom && {\n        selectors: {\n          [`@media (min-height: ${ScreenWidthMinMedium}px)`]: {\n            flexGrow: 1,\n          },\n        },\n      },\n    ],\n    footer: [\n      classNames.footer,\n      {\n        // Ensure that footer doesn't shrink if screen is too small\n        flexShrink: 0,\n        borderTop: '1px solid transparent',\n        transition: `opacity ${AnimationVariables.durationValue3} ${AnimationVariables.easeFunction2}`,\n        selectors: {\n          [`@media (min-height: ${ScreenWidthMinMedium}px)`]: {\n            position: 'sticky',\n            bottom: 0,\n          },\n        },\n      },\n      isFooterSticky && {\n        background: semanticColors.bodyBackground,\n        borderTopColor: semanticColors.variantBorder,\n      },\n    ],\n    footerInner: [\n      classNames.footerInner,\n      sharedPaddingStyles,\n      {\n        paddingBottom: 16,\n        paddingTop: 16,\n      },\n    ],\n    subComponentStyles: {\n      closeButton: {\n        root: [\n          classNames.closeButton,\n          {\n            marginRight: 14,\n            color: theme.palette.neutralSecondary,\n            fontSize: IconFontSizes.large,\n          },\n          hasCustomNavigation && {\n            marginRight: 0,\n            height: 'auto',\n            width: '44px',\n          },\n        ],\n        rootHovered: {\n          color: theme.palette.neutralPrimary,\n        },\n      },\n    },\n  };\n};\n"]},"metadata":{},"sourceType":"module"}